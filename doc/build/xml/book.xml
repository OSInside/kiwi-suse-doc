<?xml-model 
      href="file:/usr/share/xml/docbook/schema/rng/5.1/docbookxi.rnc"
      type="application/relax-ng-compact-syntax"
     ?>
<book xmlns="http://docbook.org/ns/docbook" xml:lang="en" version="5.1" xml:id="kiwi-ng-documentation">
  <title>KIWI NG Documentation</title>
  <info/>
  <preface>
    <title>Preface</title>
    <note>
      <para>This documentation covers KIWI Next Generation (KIWI NG) 9.23.11- the command line
                utility to build Linux system appliances. KIWI NG is stable and all
                new features, bugfixes, and improvements will be developed here.
                Versions older or equal to v7.x.x are out of maintenance and do
                not get any updates or bugfixes. If you still need this version,
                refer to the documentation for
                <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://doc.opensuse.org/projects/kiwi/doc">KIWI Legacy</link></para>
    </note>
    <itemizedlist>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/OSInside/kiwi">GitHub Sources</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/OSInside/kiwi/releases">GitHub Releases</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="http://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder">RPM Packages</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_x86:suse">Build Tests SUSE(x86)</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_arm:suse">Build Tests SUSE(arm)</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_s390:suse">Build Tests SUSE(s390)</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_ppc:suse">Build Tests SUSE(ppc64le)</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_x86:fedora">Build Tests Fedora(x86)</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_arm:fedora">Build Tests Fedora(arm)</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_ppc:fedora">Build Tests Fedora(ppc64le)</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_x86:centos">Build Tests CentOS(x86)</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_x86:ubuntu">Build Tests Ubuntu(x86)</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_x86:archlinux">Build Tests ArchLinux(x86)</link>
        </para>
      </listitem>
    </itemizedlist>
    <section xml:id="the-appliance-concept">
      <title>The Appliance Concept</title>
      <para>An appliance is a ready to use image of an operating system including
                a pre-configured application for a specific use case. The appliance is
                provided as an image file and needs to be deployed to, or activated in
                the target system or service.</para>
      <para>KIWI NG can create appliances in various forms: beside classical installation
                ISOs and images for virtual machines it can also build images that boot via
                PXE or Vagrant boxes.</para>
      <para>In KIWI NG, the appliance is specified via a collection of human readable files
                in a directory, also called the <literal>image description</literal>. At least one XML file
                <literal>config.xml</literal> or <literal>.kiwi</literal> is required. In addition there may as
                well be other files like scripts or configuration data.</para>
    </section>
    <section xml:id="use-cases">
      <title>Use Cases</title>
      <para>The following list shows a selection of use cases for which an
                appliance is needed:</para>
      <variablelist>
        <varlistentry>
          <term>Private and Public Clouds</term>
          <listitem>
            <para>Cloud environments are managed through an API provided by the cloud
                            service provider. The classic way to install a machine is not
                            possible in such an environment because there is no physical access
                            to the machine. An appliance is needed to be registered with the
                            cloud</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Custom Linux Distribution</term>
          <listitem>
            <para>Linux distributors provides their distribution based on a collection
                            of packages and release them on an install media like a DVD or an USB
                            stick. Typically a lot more software components exists for the
                            distribution which are not part of the default installation media
                            or the installation media comes with software and installation
                            routines that are not matching your target audience. With an
                            appliance made by KIWI NG you can create provide an installation
                            media that matches custom criteria as needed by the customer
                            and does not require extra post processing steps after the
                            default installation method provided by the distributor.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Live Systems</term>
          <listitem>
            <para>The ability to have a Linux OS that runs from a small storage
                            device like a USB stick or a SD card is the swiss army knife of many
                            system administrators. The creation of such a live system includes
                            use of technologies that are not part of a standard installation
                            process. An appliance builder is needed to create this sort of
                            system</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Embedded Systems</term>
          <listitem>
            <para>Embedded Systems like the Raspberry Pi comes with limited hardware
                            components. Their boot sequences often does not allow for classic
                            installation methods through USB or DVD devices. Instead they boot
                            through SD card slots or via the network. SoC (System on Chip) devices
                            also tend to implement non standard boot methods which can only
                            be implemented through custom OS appliances.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>And More</term>
          <listitem>
            <para>…</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="contact">
      <title>Contact</title>
      <itemizedlist>
        <listitem>
          <para>
            <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://groups.google.com/forum/#!forum/kiwi-images">Mailing list</link>
          </para>
          <para>The <literal>kiwi-images</literal> group is an open group and anyone can
                        <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="mailto:kiwi-images+subscribe@googlegroups.com">subscribe</link>,
                        even if you do not have a Google account.</para>
        </listitem>
        <listitem>
          <para>
            <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://matrix.org">Matrix</link>
          </para>
          <para>An open network for secure, decentralized communication. Please find the
                        <literal>#kiwi</literal> room via <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://riot.im/app/">Riot</link> on the web or by using
                        the supported <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://matrix.org/docs/projects/clients-matrix">clients</link>.</para>
        </listitem>
      </itemizedlist>
    </section>
  </preface>
  <chapter xml:id="db-overview" xml:base="overview">
    <title>Overview</title>
    <note>
      <para>
        <emphasis role="bold">Abstract</emphasis>
      </para>
      <para>This document provides a conceptual overview about the steps
                of creating an image with KIWI NG. It also explains the terminology
                regarding the concept and process when building system images
                with KIWI NG 9.23.11.</para>
    </note>
    <section xml:id="basic-workflow" xml:base="overview/workflow">
      <title>Basic Workflow</title>
      <note>
        <para>
          <emphasis role="bold">Abstract</emphasis>
        </para>
        <para>Installation of a Linux system generally occurs by booting the target
                system from an installation source such as an installation CD/DVD, a live
                CD/DVD, or a network boot environment (PXE). The installation process is
                often driven by an installer that interacts with the user to collect
                information about the installation. This information generally includes the
                <emphasis>software to be installed</emphasis>, the <emphasis>timezone</emphasis>, system <emphasis>user</emphasis> data, and
                other information. Once all the information is collected, the installer
                installs the software onto the target system using packages from the
                software sources (repositories) available. After the installation is
                complete the system usually reboots and enters a configuration procedure
                upon start-up. The configuration may be fully automatic or it may include
                user interaction.</para>
        <para>This description applies for version 9.23.11.</para>
      </note>
      <para>A system image (usually called “image”), is a <emphasis>complete installation</emphasis> of a Linux
            system within a file. The image represents an operational system and,
            optionally, contains the “final” configuration.</para>
      <para>The behavior of the image upon deployment varies depending on the image type
            and the image configuration since KIWI NG allows you to completely customize
            the initial start-up behavior of the image. Among others, this includes
            images that:</para>
      <itemizedlist>
        <listitem>
          <para>can be deployed inside an existing virtual environment without requiring
                    configuration at start-up.</para>
        </listitem>
        <listitem>
          <para>automatically configure themselves in a known target environment.</para>
        </listitem>
        <listitem>
          <para>prompt the user for an interactive system configuration.</para>
        </listitem>
      </itemizedlist>
      <para>The image creation process with KIWI NG is automated and does not require any
            user interaction. The information required for the image creation process is
            provided by the primary configuration file named <literal>config.xml</literal>.
            This file is validated against the schema documented in:
            <xref linkend="image-description"/>.</para>
      <para>In addition, the image can optionally be customized
            using the <literal>config.sh</literal> and <literal>images.sh</literal> scripts
            and by using an <emphasis>overlay tree (directory)</emphasis> called <literal>root</literal>.
            See <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#description-components">Components of an Image Description</link> section for further details.</para>
      <note>
        <para>Previous Knowledge</para>
        <para>This documentation assumes that you are familiar with the general
                concepts of Linux, including the boot process, and distribution concepts
                such as package management.</para>
      </note>
      <section xml:id="description-components">
        <title>Components of an Image Description</title>
        <para>A KIWI NG image description can composed by several parts. The main part is
                the KIWI NG description file itself (named <literal>config.xml</literal> or an arbitrary
                name plus the <literal>*.kiwi</literal> extension). The configuration XML is the
                only required component, others are optional.</para>
        <para>These are the optional components of an image description:</para>
        <procedure>
          <step>
            <para><literal>config.sh</literal> shell script</para>
            <para>Is the configuration shell script that runs and the end of the
                        <xref linkend="prepare-step"/> if present. It can be used to
                        fine tune the unpacked image.</para>
            <para>Note that the script is directly invoked by the operating system if its
                        executable bit is set. Otherwise it is called by <literal>bash</literal> instead.</para>
          </step>
          <step>
            <para><literal>images.sh</literal> shell script</para>
            <para>Is the configuration shell script that runs at the beginning of the
                        create step. So it is expected to be used to handle image type specific
                        tasks. It is called in a similar fashion as <literal>config.sh</literal></para>
          </step>
          <step>
            <para>Overlay tree directory</para>
            <para>The <emphasis>overlay tree</emphasis> is a folder (called <literal>root</literal>)
                        or a tarball file (called <literal>root.tar.gz</literal>) that contains
                        files and directories that will be copied to the target image build tree
                        during the <xref linkend="prepare-step"/>. It is executed
                        after all the packages included in the <literal>config.xml</literal> file
                        have been installed. Any already present file is overwritten.</para>
          </step>
          <step>
            <para>CD root user data</para>
            <para>For live ISO images and install ISO images an optional cdroot archive
                        is supported. This is a tar archive matching the name
                        <literal>config-cdroot.tar[.compression_postfix]</literal>. If present it will
                        be unpacked as user data on the ISO image. This is mostly useful to
                        add e.g license files or user documentation on the CD/DVD which
                        can be read directly without booting from the media.</para>
          </step>
          <step>
            <para>Archives included in the <literal>config.xml</literal> file.</para>
            <para>The archives that are included in the <literal>&lt;packages&gt;</literal> using the <literal>&lt;archive&gt;</literal>
                        subsection:</para>
            <screen language="xml">&lt;packages type="image"&gt;
    &lt;archive name="custom-archive.tgz"/&gt;
&lt;/packages&gt;</screen>
          </step>
        </procedure>
      </section>
    </section>
    <section xml:id="conceptual-overview">
      <title>Conceptual Overview</title>
      <para>A system image (usually called “image”), is a <emphasis>complete installation</emphasis> of a Linux
                system within a file. The image represents an operation system and,
                optionally, contains the “final” configuration.</para>
      <para>KIWI NG creates images in a two step process:</para>
      <procedure>
        <step>
          <para>The first step, the <emphasis>prepare operation</emphasis>, generates a so-called
                        <emphasis>unpacked image tree</emphasis> (directory) using the information provided in
                        the image description.</para>
        </step>
        <step>
          <para>The second step, the <emphasis>create operation</emphasis>, creates the <emphasis>packed image</emphasis> or
                        <emphasis>image</emphasis> in the specified format based on the unpacked image and the
                        information provided in the configuration file.</para>
        </step>
      </procedure>
      <para>The image creation process with KIWI NG is automated and does not require any
                user interaction. The information required for the image creation process is
                provided by the image description.</para>
    </section>
    <section xml:id="terminology">
      <title>Terminology</title>
      <variablelist>
        <varlistentry>
          <term>Appliance</term>
          <listitem>
            <para>An appliance is a ready to use image of an operating system
                            including a pre-configured application for a specific use case.
                            The appliance is provided as an image file and needs to be
                            deployed to, or activated in the target system or service.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Image</term>
          <listitem>
            <para>The result of a KIWI NG build process.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Image Description</term>
          <listitem>
            <para>Specification to define an appliance. The image description is a
                            collection of human readable files in a directory. At least one XML
                            file <literal>config.xml</literal> or <literal>.kiwi</literal> is required. In addition
                            there may be as well other files like scripts or configuration data.
                            These can be used to customize certain parts either of the KIWI NG
                            build process or of the initial start-up behavior of the image.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Overlay Files</term>
          <listitem>
            <para>A directory structure with files and subdirectories stored as part
                            of the Image Description. This directory structure is packaged as
                            a file <literal>root.tar.gz</literal> or stored inside a directory named
                            <literal>root</literal>. Additional overlay directories for selected profiles
                            are supported too and are taken into account if the directory
                            name matches the name of the profile. The content of each of the
                            directory structures is copied on top of the the existing file
                            system (overlayed) of the appliance root. This also includes
                            permissions and attributes as a supplement.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>KIWI NG</term>
          <listitem>
            <para>An OS appliance builder.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Virtualization Technology</term>
          <listitem>
            <para>Software simulated computer hardware. A virtual machine acts like
                            a real computer, but is separated from the physical hardware.
                            Within this documentation the QEMU virtualization system is
                            used. Another popular alternative is Virtualbox.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="system-requirements">
      <title>System Requirements</title>
      <para>To use and run KIWI NG, you need:</para>
      <itemizedlist>
        <listitem>
          <para>A recent Linux distribution, see <xref linkend="supported-distributions"/> for
                        details.</para>
        </listitem>
        <listitem>
          <para>Enough free disk space to build and store the image. We recommend a
                        minimum of 15GB.</para>
        </listitem>
        <listitem>
          <para>Python version 3.5 or higher</para>
        </listitem>
        <listitem>
          <para>Git (package <literal>git</literal>) to clone a repository.</para>
        </listitem>
        <listitem>
          <para>Any virtualization technology to start the image. We recommend QEMU.</para>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>
  <chapter xml:id="kiwi-installation" xml:base="installation">
    <title>Installation</title>
    <note>
      <para>This document describes how to install KIWI NG. Apart from the preferred
                method to install KIWI NG via rpm, it is also available on <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://pypi.org/project/kiwi/">pypi</link> and can be installed via pip.</para>
    </note>
    <section xml:id="installation-from-obs">
      <title>Installation from OBS</title>
      <para>The most up to date packages of KIWI NG can be found on the Open Build Service
                in the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder">Virtualization:Appliances:Builder</link>
                project.</para>
      <para>To install KIWI NG, follow these steps:</para>
      <procedure>
        <step>
          <para>Open the URL <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder"/>
                        in your browser.</para>
        </step>
        <step>
          <para>Right-click on the link of your preferred operating system and
                        copy the URL. In Firefox it is the menu <menuchoice><guimenu>Copy link address</guimenu></menuchoice>.</para>
        </step>
        <step>
          <para>Insert the copied URL from the last step into your shell. The <literal>DIST</literal>
                        placeholder contains the respective distribution.
                        Use <command>zypper addrepo</command> to add it to the list of your repositories:</para>
          <screen language="shell-session">$ sudo zypper addrepo http://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder/&lt;DIST&gt; appliance-builder</screen>
          <para>If your distribution is not using <command>zypper</command>, please use your
                        package manager’s appropriate command instead. For <command>dnf</command> that
                        is:</para>
          <screen language="shell-session">$ sudo dnf config-manager --add-repo https://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder/&lt;DIST&gt;/Virtualization:Appliances:Builder.repo</screen>
        </step>
        <step>
          <para>Add the repositories’ signing-key to your package manager’s
                        database. For rpm run:</para>
          <screen language="shell-session">$ sudo rpm --import https://build.opensuse.org/projects/Virtualization:Appliances:Builder/public_key</screen>
          <para>And verify that you got the correct key:</para>
          <screen language="shell-session">$ rpm -qi gpg-pubkey-74cbe823-* | gpg2
gpg: WARNING: no command supplied.  Trying to guess what you mean ...
pub   dsa1024 2009-05-04 [SC] [expires: 2020-10-09]
      F7E82012C74FD0B85F5334DC994B195474CBE823
uid           Virtualization:Appliances OBS Project &lt;Virtualization:Appliances@build.opensuse.org&gt;</screen>
        </step>
        <step>
          <para>Install KIWI NG:</para>
          <screen language="shell-session">$ sudo zypper in python3-kiwi</screen>
        </step>
      </procedure>
    </section>
    <section xml:id="installation-from-your-distribution-s-repositories">
      <title>Installation from your distribution’s repositories</title>
      <note>
        <para>There are many packages that contain the name KIWI NG in their name, some
                    of these are even python packages. Please double check the packages’
                    description whether it is actually the KIWI NG Appliance builder before
                    installing it.</para>
      </note>
      <para>Some Linux distributions ship KIWI NG in their official repositories. These
                include openSUSE Tumbleweed, openSUSE Leap, and Fedora since
                version 28. Note, these packages tend to not be as up to date as the
                packages from OBS, so some features described here might not exist yet.</para>
      <para>To install KIWI NG on openSUSE, run the following command:</para>
      <screen language="shell-session">$ sudo zypper install python3-kiwi</screen>
      <para>On Fedora, use the following command instead:</para>
      <screen language="shell-session">$ sudo dnf install kiwi-cli</screen>
    </section>
    <section xml:id="installation-from-pypi">
      <title>Installation from PyPI</title>
      <para>KIWI NG can be obtained from the Python Package Index (PyPi) via Python’s
                package manager pip:</para>
      <screen language="shell-session">$ pip install kiwi</screen>
    </section>
    <section xml:id="example-descriptions">
      <title>Example Appliance Descriptions</title>
      <para>There is a GitHub project hosting example appliance descriptions to be used
                with the next generation KIWI NG. Users who need an example to start with
                should clone the project as follows:</para>
      <screen language="shell-session">$ git clone https://github.com/OSInside/kiwi-descriptions</screen>
    </section>
  </chapter>
  <chapter xml:id="quick-start" xml:base="quickstart">
    <title>Quick Start</title>
    <note>
      <para>
        <emphasis role="bold">Abstract</emphasis>
      </para>
      <para>This document describes how to start working with KIWI NG, an OS appliance
                builder.
                This description applies for version 9.23.11.</para>
    </note>
    <section xml:id="before-you-start">
      <title>Before you start</title>
      <procedure>
        <step>
          <para>Install KIWI NG first, either via your distributions’ package manager (see
                        <xref linkend="kiwi-installation"/>) or via:</para>
          <screen language="bash">$ pip install kiwi</screen>
        </step>
        <step>
          <para>Clone the repository containing example appliances (see
                        <xref linkend="example-descriptions"/>):</para>
          <screen language="bash">$ git clone https://github.com/OSInside/kiwi-descriptions</screen>
        </step>
      </procedure>
    </section>
    <section xml:id="choose-a-first-image">
      <title>Choose a First Image</title>
      <para>Take a look which images are available in the example appliances repository
                and select one that matches your desired image as close as possible. Or
                just use the one given in the examples below.</para>
    </section>
    <section xml:id="build-your-first-image">
      <title>Build your First Image</title>
      <para>Your first image will be a simple system disk image which can run
                in any full virtualization system like QEMU. Invoke the following KIWI NG
                command in order to build it:</para>
      <screen language="bash">$ sudo kiwi-ng --profile=Disk --type oem system build \
    --description kiwi-descriptions/suse/x86_64/suse-leap-15.1 \
    --target-dir /tmp/myimage</screen>
      <para>The resulting image will be placed into the folder <literal>/tmp/myimage</literal>
                with the suffix <literal>.raw</literal>.</para>
      <para>If you don’t wish to create a openSUSE Leap 15.1 image,
                substitute the folder following the <literal>--description</literal> option with another
                folder that contains the image description which you selected.</para>
    </section>
    <section xml:id="run-your-image">
      <title>Run your Image</title>
      <para>Running an image actually means booting the operating system. In order to
                do that attach the disk image to a virtual system. In this example we use
                QEMU and boot it as follows:</para>
      <screen language="bash">$ qemu -boot c \
    -drive file=Leap-15.1_appliance.x86_64-1.15.1.raw,format=raw,if=virtio \
    -m 4096</screen>
    </section>
    <section xml:id="tweak-and-customize-your-image">
      <title>Tweak and Customize your Image</title>
      <para>Now that you have successfully built and started your first image, you can
                start tweaking it to match your needs.</para>
    </section>
  </chapter>
  <chapter xml:id="working-from-the-command-line" xml:base="commands">
    <title>Working from the Command Line</title>
    <note>
      <para>This document provides a list of the existing KIWI Next Generation (KIWI NG) commands
                for version 9.23.11.</para>
    </note>
    <section xml:id="kiwi-ng" xml:base="commands/kiwi">
      <title>kiwi-ng</title>
      <section xml:id="db-commands-kiwi-synopsis">
        <title>SYNOPSIS</title>
        <screen language="bash">kiwi-ng [global options] service &lt;command&gt; [&lt;args&gt;]

kiwi-ng -h | --help
kiwi-ng [--profile=&lt;name&gt;...]
        [--type=&lt;build_type&gt;]
        [--logfile=&lt;filename&gt;]
        [--debug]
        [--color-output]
    image &lt;command&gt; [&lt;args&gt;...]
kiwi-ng [--debug]
        [--color-output]
    result &lt;command&gt; [&lt;args&gt;...]
kiwi-ng [--profile=&lt;name&gt;...]
        [--shared-cache-dir=&lt;directory&gt;]
        [--type=&lt;build_type&gt;]
        [--logfile=&lt;filename&gt;]
        [--debug]
        [--color-output]
    system &lt;command&gt; [&lt;args&gt;...]
kiwi-ng compat &lt;legacy_args&gt;...
kiwi-ng -v | --version
kiwi-ng help</screen>
      </section>
      <section xml:id="db-commands-kiwi-desc">
        <title>DESCRIPTION</title>
        <para>KIWI NG is an imaging solution that is based on an image XML description.
                Such a description is represented by a directory which includes at least
                one <literal>config.xml</literal> or <literal>.kiwi</literal> file and may as well include other files like
                scripts or configuration data.</para>
        <para>A collection of example image descriptions can be found on the github
                repository here: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/OSInside/kiwi-descriptions"/>. Most of the
                descriptions provide a so called appliance image. Appliance means that it’s a small, text only based
                image including a predefined remote source setup to allow installation of missing software
                components at a later point in time.</para>
        <para>KIWI NG operates in two steps. The system build command combines
                both steps into one to make it easier to start with KIWI NG. The first
                step is the preparation step and if that step was successful, a
                creation step follows which is able to create different image output
                types.</para>
        <para>In the preparation step, you prepare a directory including the contents
                of your new filesystem based on one or more software package source(s)
                The creation step is based on the result of the preparation step and
                uses the contents of the new image root tree to create the output
                image.</para>
        <para>KIWI NG supports the creation of the following image types:</para>
        <itemizedlist>
          <listitem>
            <para>ISO Live Systems</para>
          </listitem>
          <listitem>
            <para>Virtual Disk for e.g cloud frameworks</para>
          </listitem>
          <listitem>
            <para>OEM Expandable Disk for system deployment from ISO or the network</para>
          </listitem>
          <listitem>
            <para>File system images for deployment in a pxe boot environment</para>
          </listitem>
        </itemizedlist>
        <para>Depending on the image type a variety of different disk formats and
                architectures are supported.</para>
      </section>
      <section xml:id="db-commands-kiwi-opts">
        <title>GLOBAL OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term>
              <option>--color-output</option>
            </term>
            <listitem>
              <para>Use Escape Sequences to print different types of information
                            in colored output. The underlaying terminal has to understand
                            those escape characters. Error messages appear red, warning
                            messages yellow and debugging information will be printed light
                            grey.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--debug</option>
            </term>
            <listitem>
              <para>Print debug information on the commandline.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--logfile</option>
            </term>
            <listitem>
              <para>Specify log file. the logfile contains detailed information about
                            the process.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--profile</option>
            </term>
            <listitem>
              <para>Select profile to use. The specified profile must be part of the
                            XML description. The option can be specified multiple times to
                            allow using a combination of profiles</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--shared-cache-dir</option>
            </term>
            <listitem>
              <para>Specify an alternative shared cache directory. The directory
                            is shared via bind mount between the build host and image
                            root system and contains information about package repositories
                            and their cache and meta data. The default location is set
                            to /var/cache/kiwi</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--type</option>
            </term>
            <listitem>
              <para>Select image build type. The specified build type must be configured
                            as part of the XML description.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--version</option>
            </term>
            <listitem>
              <para>Show program version</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-commands-kiwi-example">
        <title>EXAMPLE</title>
        <screen language="bash">$ git clone https://github.com/OSInside/kiwi-descriptions

$ kiwi --type oem system build \
    --description kiwi-descriptions/suse/x86_64/suse-leap-15.1 \
    --target-dir /tmp/myimage</screen>
      </section>
      <section xml:id="db-commands-kiwi-compat">
        <title>COMPATIBILITY</title>
        <para>This version of KIWI NG uses a different caller syntax compared to
                former versions. However there is a compatibility mode which allows
                to use a legacy KIWI NG commandline as follows:</para>
        <screen language="bash">$ kiwi compat \
    --build kiwi-descriptions/suse/x86_64/suse-leap-15.1 \
    --type oem -d /tmp/myimage</screen>
      </section>
    </section>
    <section xml:id="kiwi-ng-result-list" xml:base="commands/result_list">
      <title>kiwi-ng result list</title>
      <section xml:id="db-kiwi-result-list-synopsis">
        <title>SYNOPSIS</title>
        <screen language="bash">kiwi-ng [global options] service &lt;command&gt; [&lt;args&gt;]

kiwi-ng result list -h | --help
kiwi-ng result list --target-dir=&lt;directory&gt;
kiwi-ng result list help</screen>
      </section>
      <section xml:id="db-kiwi-result-list-desc">
        <title>DESCRIPTION</title>
        <para>List build results from a previous build or create command.
                Please note if you build an image several times with the same
                target directory the build result information will be overwritten
                each time you build the image. Therefore the build result list
                is valid for the last build</para>
      </section>
      <section xml:id="db-kiwi-result-list-opts">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term>
              <option>--target-dir</option>
            </term>
            <listitem>
              <para>directory containing the kiwi build results</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-ng-result-bundle" xml:base="commands/result_bundle">
      <title>kiwi-ng result bundle</title>
      <section xml:id="db-kiwi-result-bundle-synopsis">
        <title>SYNOPSIS</title>
        <screen language="bash">kiwi-ng [global options] service &lt;command&gt; [&lt;args&gt;]

kiwi-ng result bundle -h | --help
kiwi-ng result bundle --target-dir=&lt;directory&gt; --id=&lt;bundle_id&gt; --bundle-dir=&lt;directory&gt;
    [--zsync_source=&lt;download_location&gt;]
kiwi-ng result bundle help</screen>
      </section>
      <section xml:id="db-kiwi-result-bundle-desc">
        <title>DESCRIPTION</title>
        <para>Create result bundle from the image build results in the specified target
                directory. Each result image will contain the specified bundle identifier
                as part of its filename. Uncompressed image files will also become xz
                compressed and a sha sum will be created from every result image.</para>
      </section>
      <section xml:id="db-kiwi-result-bundle-opts">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term>
              <option>--bundle-dir</option>
            </term>
            <listitem>
              <para>directory containing the bundle results, compressed versions of
                            image results and their sha sums</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--id</option>
            </term>
            <listitem>
              <para>bundle id, could be a free form text and is appended to the image
                            version information if present as part of the result image filename</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--target-dir</option>
            </term>
            <listitem>
              <para>directory containing the kiwi build results</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--zsync_source</option>
            </term>
            <listitem>
              <para>Specify the download location from which the bundle file(s)
                            can be fetched from. The information is effective if <literal>zsync</literal> is
                            used to sync the bundle.</para>
              <itemizedlist>
                <listitem>
                  <para>The zsync control file is only created for those bundle files
                                    which are marked for compression because in a KIWI NG build only those
                                    are meaningful for a partial binary file download.</para>
                </listitem>
                <listitem>
                  <para>It is expected that all files from a bundle are placed to the same
                                    download location</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-ng-system-prepare" xml:base="commands/system_prepare">
      <title>kiwi-ng system prepare</title>
      <section xml:id="db-kiwi-system-prepare-synopsis">
        <title>SYNOPSIS</title>
        <screen language="bash">kiwi-ng [global options] service &lt;command&gt; [&lt;args&gt;]

kiwi-ng system prepare -h | --help
kiwi-ng system prepare --description=&lt;directory&gt; --root=&lt;directory&gt;
    [--allow-existing-root]
    [--clear-cache]
    [--ignore-repos]
    [--ignore-repos-used-for-build]
    [--set-repo=&lt;source,type,alias,priority,imageinclude,package_gpgcheck&gt;]
    [--add-repo=&lt;source,type,alias,priority,imageinclude,package_gpgcheck&gt;...]
    [--add-package=&lt;name&gt;...]
    [--add-bootstrap-package=&lt;name&gt;...]
    [--delete-package=&lt;name&gt;...]
    [--signing-key=&lt;key-file&gt;...]
kiwi-ng system prepare help</screen>
      </section>
      <section xml:id="db-kiwi-system-prepare-desc">
        <title>DESCRIPTION</title>
        <para>Create a new image root directory. The prepare step builds a new image
                root directory from the specified XML description. The specified
                root directory is the root directory of the new image root system.
                As the root user you can enter this system via chroot as follows:</para>
        <screen language="bash">$ chroot &lt;directory&gt; bash</screen>
      </section>
      <section xml:id="db-kiwi-system-prepare-opts">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term>
              <option>--add-bootstrap-package</option>
            </term>
            <listitem>
              <para>specify package to install as part of the early kiwi bootstrap phase.
                            The option can be specified multiple times</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--add-package</option>
            </term>
            <listitem>
              <para>specify package to add(install). The option can be specified
                            multiple times</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--add-repo</option>
            </term>
            <listitem>
              <para>See the kiwi::system::build manual page for further details</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--allow-existing-root</option>
            </term>
            <listitem>
              <para>allow to re-use an existing image root directory</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--clear-cache</option>
            </term>
            <listitem>
              <para>delete repository cache for each of the used repositories
                            before installing any package. This is useful if an image build
                            should take and validate the signature of the package from the
                            original repository source for any build. Some package managers
                            unconditionally trust the contents of the cache, which is ok for
                            cache data dedicated to one build but in case of kiwi the cache
                            is shared between multiple image builds on that host for performance
                            reasons.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--delete-package</option>
            </term>
            <listitem>
              <para>specify package to delete. The option can be specified
                            multiple times</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--description</option>
            </term>
            <listitem>
              <para>Path to the kiwi XML description. Inside of that directory there
                            must be at least a config.xml of *.kiwi XML description.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--ignore-repos</option>
            </term>
            <listitem>
              <para>Ignore all repository configurations from the XML description.
                            Using that option is usally done with a sequence of –add-repo
                            options otherwise there are no repositories available for the
                            image build which would lead to an error.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--ignore-repos-used-for-build</option>
            </term>
            <listitem>
              <para>Works the same way as –ignore-repos except that repository
                            configurations which has the imageonly attribute set to true
                            will not be ignored.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--root</option>
            </term>
            <listitem>
              <para>Path to create the new root system.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--set-repo</option>
            </term>
            <listitem>
              <para>See the kiwi::system::build manual page for further details</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--signing-key</option>
            </term>
            <listitem>
              <para>set the key file to be trusted and imported into the package
                            manager database before performing any opertaion. This is useful
                            if an image build should take and validate repository and package
                            signatures during build time. This option can be specified multiple
                            times.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-ng-system-update" xml:base="commands/system_update">
      <title>kiwi-ng system update</title>
      <section xml:id="db-kiwi-system-update-synopsis">
        <title>SYNOPSIS</title>
        <screen language="bash">kiwi-ng [global options] service &lt;command&gt; [&lt;args&gt;]

kiwi-ng system update -h | --help
kiwi-ng system update --root=&lt;directory&gt;
    [--add-package=&lt;name&gt;...]
    [--delete-package=&lt;name&gt;...]
kiwi-ng system update help</screen>
      </section>
      <section xml:id="db-kiwi-system-update-desc">
        <title>DESCRIPTION</title>
        <para>Update a previously prepare image root tree. The update command
                refreshes the contents of the root directory with potentially new
                versions of the packages according to the repository setup of the
                image XML description. In addition the update command also allows
                to add or remove packages from the image root tree</para>
      </section>
      <section xml:id="db-kiwi-system-update-opts">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term>
              <option>--add-package</option>
            </term>
            <listitem>
              <para>specify package to add(install). The option can be specified
                            multiple times</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--delete-package</option>
            </term>
            <listitem>
              <para>specify package to delete. The option can be specified
                            multiple times</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--root</option>
            </term>
            <listitem>
              <para>Path to the root directory of the image.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-system-build" xml:base="commands/system_build">
      <title>kiwi-ng system build</title>
      <section xml:id="db-kiwi-system-build-synopsis">
        <title>SYNOPSIS</title>
        <screen language="bash">kiwi-ng [global options] service &lt;command&gt; [&lt;args&gt;]

kiwi-ng system build -h | --help
kiwi-ng system build --description=&lt;directory&gt; --target-dir=&lt;directory&gt;
    [--allow-existing-root]
    [--clear-cache]
    [--ignore-repos]
    [--ignore-repos-used-for-build]
    [--set-repo=&lt;source,type,alias,priority,imageinclude,package_gpgcheck&gt;]
    [--add-repo=&lt;source,type,alias,priority,imageinclude,package_gpgcheck&gt;...]
    [--add-package=&lt;name&gt;...]
    [--add-bootstrap-package=&lt;name&gt;...]
    [--delete-package=&lt;name&gt;...]
    [--signing-key=&lt;key-file&gt;...]
kiwi-ng system build help</screen>
      </section>
      <section xml:id="db-kiwi-system-build-desc">
        <title>DESCRIPTION</title>
        <para>build an image in one step. The build command combines kiwi’s prepare and
                create steps in order to build an image with just one command call. The
                build command creates the root directory of the image below
                <literal>&lt;target-dir&gt;/build/image-root</literal> and if not specified differently writes
                a log file <literal>&lt;target-dir&gt;/build/image-root.log</literal>. The result image files
                are created in the specified target-dir.</para>
      </section>
      <section xml:id="db-kiwi-system-build-opts">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term>
              <option>--add-bootstrap-package</option>
            </term>
            <listitem>
              <para>specify package to install as part of the early kiwi bootstrap phase.
                            The option can be specified multiple times</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--add-package</option>
            </term>
            <listitem>
              <para>specify package to add(install). The option can be specified
                            multiple times</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--add-repo</option>
            </term>
            <listitem>
              <para>Add a new repository to the existing repository setup in the XML
                            description. This option can be specified multiple times.
                            For details about the provided option values see the <emphasis role="bold">–set-repo</emphasis>
                            information below</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--allow-existing-root</option>
            </term>
            <listitem>
              <para>Allow to use an existing root directory from an earlier
                            build attempt. Use with caution this could cause an inconsistent
                            root tree if the existing contents does not fit to the
                            former image type setup</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--clear-cache</option>
            </term>
            <listitem>
              <para>delete repository cache for each of the used repositories
                            before installing any package. This is useful if an image build
                            should take and validate the signature of the package from the
                            original repository source for any build. Some package managers
                            unconditionally trust the contents of the cache, which is ok for
                            cache data dedicated to one build but in case of kiwi the cache
                            is shared between multiple image builds on that host for performance
                            reasons.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--delete-package</option>
            </term>
            <listitem>
              <para>specify package to delete. The option can be specified
                            multiple times</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--description</option>
            </term>
            <listitem>
              <para>Path to the XML description. This is a directory containing at least
                            one _config.xml_ or _*.kiwi_ XML file.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--ignore-repos</option>
            </term>
            <listitem>
              <para>Ignore all repository configurations from the XML description.
                            Using that option is usally done with a sequence of –add-repo
                            options otherwise there are no repositories available for the
                            image build which would lead to an error.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--ignore-repos-used-for-build</option>
            </term>
            <listitem>
              <para>Works the same way as –ignore-repos except that repository
                            configurations which has the imageonly attribute set to true
                            will not be ignored.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--set-repo</option>
            </term>
            <listitem>
              <para>Overwrite the first repository entry in the XML description with the
                            provided information:</para>
              <itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="bold">source</emphasis>
                  </para>
                  <para>source url, pointing to a package repository which must be in a format
                                    supported by the selected package manager. See the URI_TYPES section for
                                    details about the supported source locators.</para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="bold">type</emphasis>
                  </para>
                  <para>repository type, could be one of <literal>rpm-md</literal>, <literal>rpm-dir</literal> or <literal>yast2</literal>.</para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="bold">alias</emphasis>
                  </para>
                  <para>An alias name for the repository. If not specified kiwi calculates
                                    an alias name as result from a sha sum. The sha sum is used to uniquely
                                    identify the repository, but not very expressive. We recommend to
                                    set an expressive and uniq alias name.</para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="bold">priority</emphasis>
                  </para>
                  <para>A number indicating the repository priority. How the value is evaluated
                                    depends on the selected package manager. Please refer to the package
                                    manager documentation for details about the supported priority ranges
                                    and their meaning.</para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="bold">imageinclude</emphasis>
                  </para>
                  <para>Set to either <emphasis role="bold">true</emphasis> or <emphasis role="bold">false</emphasis> to specify if this repository
                                    should be part of the system image repository setup or not.</para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="bold">package_gpgcheck</emphasis>
                  </para>
                  <para>Set to either <emphasis role="bold">true</emphasis> or <emphasis role="bold">false</emphasis> to specify if this repository
                                    should validate the package signatures.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--signing-key</option>
            </term>
            <listitem>
              <para>set the key file to be trusted and imported into the package
                            manager database before performing any opertaion. This is useful
                            if an image build should take and validate repository and package
                            signatures during build time. This option can be specified multiple
                            times</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--target-dir</option>
            </term>
            <listitem>
              <para>Path to store the build results.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-system-build-uri">
        <title>URI_TYPES</title>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">http://</emphasis> | <emphasis role="bold">https://</emphasis> | <emphasis role="bold">ftp://</emphasis></para>
            <para>remote repository delivered via http or ftp protocol.</para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">obs://</emphasis>
            </para>
            <para>Open Buildservice repository. The source data is translated into
                        an http url pointing to <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="http://download.opensuse.org"/>.</para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">ibs://</emphasis>
            </para>
            <para>Internal Open Buildservice repository. The source data is translated into
                        an http url pointing to download.suse.de.</para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">iso://</emphasis>
            </para>
            <para>Local iso file. kiwi loop mounts the file and uses the mount point
                        as temporary directory source type</para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">dir://</emphasis>
            </para>
            <para>Local directory</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
    <section xml:id="kiwi-system-create" xml:base="commands/system_create">
      <title>kiwi-ng system create</title>
      <section xml:id="db-kiwi-system-create-synopsis">
        <title>SYNOPSIS</title>
        <screen language="bash">kiwi-ng [global options] service &lt;command&gt; [&lt;args&gt;]

kiwi-ng system create -h | --help
kiwi-ng system create --root=&lt;directory&gt; --target-dir=&lt;directory&gt;
    [--signing-key=&lt;key-file&gt;...]
kiwi-ng system create help</screen>
      </section>
      <section xml:id="db-kiwi-system-create-desc">
        <title>DESCRIPTION</title>
        <para>Create an image from a previously prepared image root directory.
                The kiwi create call is usually issued after a kiwi prepare command
                and builds the requested image type in the specified target directory</para>
      </section>
      <section xml:id="db-kiwi-system-create-opts">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term>
              <option>--root</option>
            </term>
            <listitem>
              <para>Path to the image root directory. This directory is usually created
                            by the kiwi prepare command. If a directory is used which was not
                            created by kiwi’s prepare command, it’s important to know that kiwi
                            stores image build metadata below the image/ directory which needs
                            to be present in order to let the create command operate correctly.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--target-dir</option>
            </term>
            <listitem>
              <para>Path to store the build results.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--signing-key</option>
            </term>
            <listitem>
              <para>set the key file to be trusted and imported into the package
                            manager database before performing any opertaion. This is useful
                            if an image build should take and validate repository and package
                            signatures during build time. In create step this option only
                            affects the boot image. This option can be specified multiple
                            times</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="db-kiwi-image-resize" xml:base="commands/image_resize">
      <title>kiwi-ng image resize</title>
      <section xml:id="db-kiwi-image-resize-synopsis">
        <title>SYNOPSIS</title>
        <screen language="bash">kiwi-ng [global options] service &lt;command&gt; [&lt;args&gt;]

kiwi-ng image resize -h | --help
kiwi-ng image resize --target-dir=&lt;directory&gt; --size=&lt;size&gt;
    [--root=&lt;directory&gt;]
kiwi-ng image resize help</screen>
      </section>
      <section xml:id="db-kiwi-image-resize-desc">
        <title>DESCRIPTION</title>
        <para>For disk based images, allow to resize the image to a new disk geometry.
                The additional space is free and not in use by the image. In order to
                make use of the additional free space a repartition process is required
                like it is provided by kiwi’s oem boot code. Therefore the resize operation
                is useful for oem image builds most of the time.</para>
      </section>
      <section xml:id="db-kiwi-image-resize-opts">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term>
              <option>--root</option>
            </term>
            <listitem>
              <para>The path to the root directory, if not specified kiwi
                            searches the root directory in build/image-root below
                            the specified target directory</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--size</option>
            </term>
            <listitem>
              <para>New size of the image. The value is either a size in bytes
                            or can be specified with m=MB or g=GB. Example: 20g</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--target-dir</option>
            </term>
            <listitem>
              <para>Directory containing the kiwi build results</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-ng-image-info" xml:base="commands/image_info">
      <title>kiwi-ng image info</title>
      <section xml:id="db-image-info-synopsis">
        <title>SYNOPSIS</title>
        <screen language="bash">kiwi-ng [global options] service &lt;command&gt; [&lt;args&gt;]

kiwi-ng image info -h | --help
kiwi-ng image info --description=&lt;directory&gt;
    [--resolve-package-list]
    [--ignore-repos]
    [--add-repo=&lt;source,type,alias,priority&gt;...]
    [--print-xml|--print-yaml]
kiwi-ng image info help</screen>
      </section>
      <section xml:id="db-image-info-desc">
        <title>DESCRIPTION</title>
        <para>Provides information about the specified image description.
                If no specific info option is provided the command just
                lists basic information about the image which could also be
                directly obtained by reading the image XML description file.
                Specifying an extension option like <literal>resolve-package-list</literal>
                will cause a dependency resolver to run over the list of
                packages and thus provides more detailed information about
                the image description.</para>
      </section>
      <section xml:id="db-image-info-opts">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term>
              <option>--add-repo</option>
            </term>
            <listitem>
              <para>Add repository with given source, type, alias and priority.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--description</option>
            </term>
            <listitem>
              <para>The description must be a directory containing a kiwi XML
                            description and optional metadata files.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--ignore-repos</option>
            </term>
            <listitem>
              <para>Ignore all repository configurations from the XML description.
                            Using that option is usally done with a sequence of –add-repo
                            options otherwise there are no repositories available for the
                            processing the requested image information which could lead
                            to an error.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--resolve-package-list</option>
            </term>
            <listitem>
              <para>Solve package dependencies and return a list of all
                            packages including their attributes e.g size,
                            shasum, and more.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--print-xml</option>
            </term>
            <listitem>
              <para>Print image description in XML format. The given image
                            description is read in, transformed internally to XML and
                            send to the XSLT stylesheet processor. From there the result
                            gets validated using the RelaxNG schema and the schematron
                            rules. This result data will then be displayed. The typical
                            use case for this command is to turn an old image description
                            to the latest schema.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>--print-yaml</option>
            </term>
            <listitem>
              <para>Behaves the same like <literal>--print-xml</literal> except that after
                            validation the result data will be transformed into the
                            YAML format and displayed. Due to this processing the
                            command can be used for different operations:</para>
              <itemizedlist>
                <listitem>
                  <para>Conversion of a given image description from or into
                                    different formats. It’s required to install the <literal>anymarkup</literal>
                                    python module for this to work. The module is not a
                                    hard requirement and loaded on demand. If not available
                                    and a request to convert into a format different from XML
                                    is made an exception will be thrown.</para>
                </listitem>
                <listitem>
                  <para>Update of an old image description to the latest schema</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
  </chapter>
  <chapter xml:id="self-contained" xml:base="self_contained">
    <title>Building in a Self-Contained Environment</title>
    <note>
      <para>
        <emphasis role="bold">Abstract</emphasis>
      </para>
      <para>Users building images with KIWI NG face problems if they want
                to build an image matching one of the following criteria:</para>
      <itemizedlist>
        <listitem>
          <para>build should happen as non root user.</para>
        </listitem>
        <listitem>
          <para>build should happen on a host system distribution for which
                        no KIWI NG packages exists.</para>
        </listitem>
        <listitem>
          <para>build happens on an incompatible host system distribution
                        compared to the target image distribution. For example
                        building an apt/dpkg  based system on an rpm based system.</para>
        </listitem>
        <listitem>
          <para>run more than one build process at the same time on the
                        same host.</para>
        </listitem>
      </itemizedlist>
      <para>This document describes how to perform the build process in
                a self contained environment using fast booting virtual
                machines to address the issues listed above.</para>
      <para>The changes on the machine to become a build host will
                be reduced to the requirements of the KIWI NG <literal>boxed plugin</literal></para>
    </note>
    <section xml:id="requirements">
      <title>Requirements</title>
      <para>Add the KIWI NG repo from the Open Build Service. For details see
                <xref linkend="installation-from-obs"/>. The following KIWI NG plugin needs to be
                installed on the build system:</para>
      <screen language="bash">$ sudo zypper in python3-kiwi_boxed_plugin</screen>
    </section>
    <section xml:id="building-with-the-boxbuild-command">
      <title>Building with the boxbuild command</title>
      <para>The installation of the KIWI NG boxed plugin has registered a new kiwi
                command named <literal>boxbuild</literal>. The command implementation uses KVM as
                virtualization technology and runs the KIWI NG <literal>build</literal> command inside of
                a KVM controlled virtual machine. For running the build process in a
                virtual machine it’s required to provide VM images that are suitable
                to perform this job. We call the VM images <literal>boxes</literal> and they contain
                kiwi itself as well as all other components needed to build appliances.
                Those boxes are hosted in the Open Build Service and are publicly
                available at the <literal>Subprojects</literal> tab in the: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:SelfContained">Virtualization:Appliances:SelfContained</link>
                project.</para>
      <para>As a user you don’t need to work with the boxes because this is all done
                by the plugin and provided as a service by the KIWI NG team. The <literal>boxbuild</literal>
                command knows where to fetch the box and also cares for an update of the
                box when it has changed.</para>
      <para>Building an image with the <literal>boxbuild</literal> command is similar to building with
                the <literal>build</literal> command. The plugin validates the given command call with the
                capabilities of the <literal>build</literal> command. Thus one part of the <literal>boxbuild</literal> command
                is exactly the same as with the <literal>build</literal> command. The separation between
                <literal>boxbuild</literal> and <literal>build</literal> options is done using the <literal>--</literal> separator like
                shown in the following example:</para>
      <screen language="bash">$ kiwi-ng --type iso system boxbuild --box suse -- \
      --description kiwi-descriptions/suse/x86_64/suse-leap-15.1 \
      --target-dir /tmp/myimage</screen>
      <note>
        <para>The provided <literal>--description</literal> and <literal>--target-dir</literal> options are
                    setup as shared folders between the host and the guest. No other
                    data will be shared with the host.</para>
      </note>
    </section>
  </chapter>
  <chapter xml:id="concept-and-workflow" xml:base="concept_and_workflow">
    <title>Concept and Workflow</title>
    <note>
      <para>
        <emphasis role="bold">Abstract</emphasis>
      </para>
      <para>The following sections describe the concept and general workflow
                of building appliances with KIWI NG 9.23.11.</para>
    </note>
    <section xml:id="repositories" xml:base="concept_and_workflow/repository_setup">
      <title>Setting up Repositories</title>
      <para>A crucial part of each appliance is the repository
            selection. KIWI NG allows the end user to completely customize the selection
            of repositories and packages via the <literal>repository</literal> element.</para>
      <section xml:id="adding-repositories">
        <title>Adding repositories</title>
        <para>KIWI NG installs packages into your appliance from the repositories defined in
                the image description. Therefore at least one repository <emphasis role="bold">must</emphasis> be
                defined, as KIWI NG will otherwise not be able to fetch any packages.</para>
        <para>A repository is added to the description via the <literal>repository</literal> element,
                which is a child of the top-level <literal>image</literal> element:</para>
        <screen language="xml">&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
    &lt;!-- snip --&gt;
    &lt;repository type="rpm-md" alias="kiwi" priority="1"&gt;
        &lt;source path="obs://Virtualization:Appliances:Builder/openSUSE_Leap_15.1"/&gt;
    &lt;/repository&gt;
    &lt;repository type="rpm-md" alias="OS" imageinclude="true"&gt;
        &lt;source path="obs://openSUSE:Leap:15.1/standard"/&gt;
    &lt;/repository&gt;
&lt;/image&gt;</screen>
        <para>In the above snippet we defined two repositories:</para>
        <procedure>
          <step>
            <para>The repository belonging to the KIWI NG project:
                        <emphasis>obs://Virtualization:Appliances:Builder/openSUSE_Leap_15.1</emphasis> at the Open Build Service (OBS)</para>
          </step>
          <step>
            <para>The RPM repository belonging to the OS project:
                        <emphasis>obs://openSUSE:Leap:15.1/standard</emphasis>, at the Open Build Service (OBS). The translated
                        http URL will also be included in the final appliance.</para>
          </step>
        </procedure>
        <para>The <literal>repository</literal> element accepts one <literal>source</literal> child element, which
                contains the URL to the repository in an appropriate format and the
                following optional attributes:</para>
        <itemizedlist>
          <listitem>
            <para><literal>imageinclude</literal>: Specify whether this repository should be added to the
                        resulting image, defaults to false.</para>
          </listitem>
          <listitem>
            <para><literal>imageonly</literal>: A repository with <literal>imageonly="true"</literal> will not be available
                        during image build, but only in the resulting appliance. Defaults to
                        false.</para>
          </listitem>
          <listitem>
            <para><literal>priority</literal>: An integer priority for all packages in this repository. If
                        the same package is available in more than one repository, then the one
                        with the highest priority is used.</para>
          </listitem>
          <listitem>
            <para><literal>alias</literal>: Name to be used for this repository, it will appear as the
                        repository’s name in the image, which is visible via <literal>zypper repos</literal> or
                        <literal>dnf repolist</literal>. KIWI NG will construct an alias from the path in the
                        <literal>source</literal> child element (replacing each <literal>/</literal> with a <literal>_</literal>), if no value is
                        given.</para>
          </listitem>
          <listitem>
            <para><literal>repository_gpgcheck</literal>: Specify whether or not this specific repository is
                        configured to to run repository signature validation. If not set, the
                        package manager’s default is used.</para>
          </listitem>
          <listitem>
            <para><literal>package_gpgcheck</literal>: Boolean value that specifies whether each package’s
                        GPG signature will be verified. If omitted, the package manager’s default
                        will be used</para>
          </listitem>
          <listitem>
            <para><literal>components</literal>: Distribution components used for <literal>deb</literal> repositories,
                        defaults to <literal>main</literal>.</para>
          </listitem>
          <listitem>
            <para><literal>distribution</literal>: Distribution name information, used for deb repositories.</para>
          </listitem>
          <listitem>
            <para><literal>profiles</literal>: List of profiles to which this repository applies.</para>
          </listitem>
        </itemizedlist>
        <section xml:id="supported-repository-paths">
          <title>Supported repository paths</title>
          <para>The actual location of a repository is specified in the <literal>source</literal> child
                    element of <literal>repository</literal> via its only attribute <literal>path</literal>. KIWI NG supports the
                    following paths types:</para>
          <itemizedlist>
            <listitem>
              <para><literal>http://URL</literal> or <literal>https://URL</literal> or <literal>ftp://URL</literal>: a URL to the repository
                            available via HTTP(s) or FTP.</para>
            </listitem>
            <listitem>
              <para><literal>obs://$PROJECT/$REPOSITORY</literal>: evaluates to the repository <literal>$REPOSITORY</literal>
                            of the project <literal>$PROJECT</literal> available on the Open Build Service (OBS). By
                            default KIWI NG will look for projects on <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org">build.opensuse.org</link>, but this can be overridden using the
                            runtime configuration file (see <xref linkend="runtime-config"/>).
                            Note that it is not possible to add repositories using the <literal>obs://</literal> path
                            from <emphasis role="bold">different</emphasis> OBS instances (use direct URLs to the <literal>.repo</literal>
                            file instead in this case).</para>
            </listitem>
            <listitem>
              <para><literal>obsrepositories:/</literal>: special path only available for builds using the
                            Open Build Service. The repositories configured for the OBS project in
                            which the KIWI NG image resides will be available inside the appliance. This
                            allows you to configure the repositories of your image from OBS itself
                            and not having to modify the image description.</para>
            </listitem>
            <listitem>
              <para><literal>dir:///path/to/directory</literal> or <literal>file:///path/to/file</literal>: an absolute path to
                            a local directory or file available on the host building the
                            appliance.</para>
            </listitem>
            <listitem>
              <para><literal>iso:///path/to/image.iso</literal>: the specified ISO image will be mounted
                            during the build of the KIWI NG image and a repository will be created
                            pointing to the mounted ISO.</para>
            </listitem>
          </itemizedlist>
        </section>
      </section>
    </section>
    <section xml:id="packages" xml:base="concept_and_workflow/packages">
      <title>Adding and Removing Packages</title>
      <para>On top of the <xref linkend="repositories"/> setup the package setup is
            required. KIWI NG allows the end user to completely customize the selection
            of packages via the <literal>packages</literal> element.</para>
      <screen language="xml">&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
    &lt;packages type="bootstrap"&gt;
        &lt;package name="udev"/&gt;
        &lt;package name="filesystem"/&gt;
        &lt;package name="openSUSE-release"/&gt;
        &lt;!-- additional packages installed before the chroot is created --&gt;
    &lt;/packages&gt;
    &lt;packages type="image"&gt;
        &lt;package name="patterns-openSUSE-base"/&gt;
        &lt;!-- additional packages to be installed into the chroot --&gt;
    &lt;/packages&gt;
&lt;/image&gt;</screen>
      <para>The <literal>packages</literal> element provides a collection of different child elements
            that instruct KIWI NG when and how to perform package installation or
            removal. Each <literal>packages</literal> element acts as a group, whose behavior can be
            configured via the following attributes:</para>
      <itemizedlist>
        <listitem>
          <para>: either <literal>bootstrap</literal>, <literal>image</literal>, <literal>delete</literal>, <literal>uninstall</literal> or one of the
                    following build types: <literal>docker</literal>, <literal>iso</literal>, <literal>oem</literal>, <literal>kis</literal>, <literal>oci</literal>.</para>
          <para>Packages for <literal>type="bootstrap"</literal> are pre-installed to populate the images’
                    root file system before chrooting into it.</para>
          <para>Packages in <literal>type="image"</literal> are installed immediately after the initial
                    chroot into the new root file system.</para>
          <para>Packages in <literal>type="delete"</literal> and <literal>type="uninstall"</literal> are removed from the
                    image, for details see <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#uninstall-system-packages">Uninstall System Packages</link>.</para>
          <para>And packages which belong to a build type are only installed when that
                    specific build type is currently processed by KIWI NG.</para>
        </listitem>
        <listitem>
          <para><literal>profiles</literal>: a list of profiles to which this package selection applies
                    (see <xref linkend="image-profiles"/>).</para>
        </listitem>
        <listitem>
          <para><literal>patternType</literal>: selection type for patterns, supported values are:
                    <literal>onlyRequired</literal>, <literal>plusRecommended</literal>, see:
                    <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#product-and-namedcollection-element">The product and namedCollection element</link>.</para>
        </listitem>
      </itemizedlist>
      <para>The following sections describes the different child elements of
            a <literal>packages</literal> group.</para>
      <section xml:id="package-element">
        <title>The <literal>package</literal> element</title>
        <para>The <literal>package</literal> element represents a single package to be installed (or
                removed), whose name is specified via the mandatory <literal>name</literal> attribute:</para>
        <screen language="xml">&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
    &lt;!-- snip --&gt;
    &lt;packages type="bootstrap"&gt;
        &lt;package name="udev"/&gt;
    &lt;/packages&gt;
&lt;/image&gt;</screen>
        <para>which adds the package <literal>udev</literal> to the list of packages to be added to the
                initial filesystem. Note, that the value that you pass via the <literal>name</literal>
                attribute is passed directly to the used package manager. Thus, if the
                package manager supports other means how packages can be specified, you may
                pass them in this context too. For example, RPM based package managers
                (like <command>dnf</command> or <command>zypper</command>) can install packages via their
                <literal>Provides:</literal>. This can be used to add a package that provides a certain
                capability (e.g. <literal>Provides: /usr/bin/my-binary</literal>) via:</para>
        <screen language="xml">&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
    &lt;!-- snip --&gt;
    &lt;packages type="bootstrap"&gt;
        &lt;package name="/usr/bin/my-binary"/&gt;
    &lt;/packages&gt;
&lt;/image&gt;</screen>
        <para>Whether this works depends on the package manager and on the environment
                that is being used. In the Open Build Service, certain <literal>Provides</literal> either
                are not visible or cannot be properly extracted from the KIWI NG
                description. Therefore, relying on <literal>Provides</literal> is not recommended.</para>
        <para>Packages can also be included only on specific host architectures via the
                <literal>arch</literal> attribute. KIWI NG compares the <literal>arch</literal> attributes value with the host
                architecture that builds the image according to the output of <literal>uname -m</literal>.</para>
        <screen language="xml">&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
    &lt;!-- snip --&gt;
    &lt;packages type="image"&gt;
        &lt;package name="grub2"/&gt;
        &lt;package name="grub2-x86_64-efi" arch="x86_64"/&gt;
        &lt;package name="shim" arch="x86_64"/&gt;
    &lt;/packages&gt;
&lt;/image&gt;</screen>
        <para>which results in <literal>grub2-x86_64-efi</literal> and <literal>shim</literal> being only installed if the
                build host is a 64bit x86 machine, but <literal>grub2</literal> will be installed independent
                of the architecture.</para>
      </section>
      <section xml:id="archive-element">
        <title>The <literal>archive</literal> element</title>
        <para>It is sometimes necessary to include additional packages into the image
                which are not available in the package manager’s native format. KIWI NG
                supports the inclusion of ordinary tar archives via the <literal>archive</literal> element,
                whose <literal>name</literal> attribute specifies the filename of the archive (KIWI NG looks
                for the archive in the image description folder).</para>
        <screen language="xml">&lt;packages type="image"&gt;
    &lt;archive name="custom-program1.tgz"/&gt;
    &lt;archive name="custom-program2.tar"/&gt;
&lt;/packages&gt;</screen>
        <para>KIWI NG will extract the archive into the root directory of the image using
                <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.gnu.org/software/tar/">GNU tar</link>, thus only archives
                supported by it can be included. When multiple <literal>archive</literal> elements are
                specified then they will be applied in a top to bottom order. If a file is
                already present in the image, then the file from the archive will overwrite
                it (same as with the image overlay).</para>
      </section>
      <section xml:id="uninstall-system-packages">
        <title>Uninstall System Packages</title>
        <para>KIWI NG supports two different methods how packages can be removed from the
                appliance:</para>
        <procedure>
          <step>
            <para>Packages present as a child element of <literal>&lt;packages type="uninstall"&gt;</literal>
                        will be gracefully uninstalled by the package manager alongside with
                        dependent packages and orphaned dependencies.</para>
          </step>
          <step>
            <para>Packages present as a child element of <literal>&lt;packages type="delete"&gt;</literal> will
                        be removed by RPM/DPKG without any dependency check, thus potentially
                        breaking dependencies and compromising the underlying package database.</para>
          </step>
        </procedure>
        <para>Both types of removals take place after <literal>config.sh</literal> is run in the
                <xref linkend="prepare-step"/>
                (see also <xref linkend="working-with-kiwi-user-defined-scripts"/>).</para>
        <warning>
          <para>An <literal>uninstall</literal> packages request deletes:</para>
          <itemizedlist>
            <listitem>
              <para>the listed packages,</para>
            </listitem>
            <listitem>
              <para>the packages dependent on the listed ones, and</para>
            </listitem>
            <listitem>
              <para>any orphaned dependency of the listed packages.</para>
            </listitem>
          </itemizedlist>
          <para>Use this feature with caution as it can easily cause the removal of
                    sensitive tools leading to failures in later build stages.</para>
        </warning>
        <para>Removing packages via <literal>type="uninstall"</literal> can be used to completely remove a
                build time tool (e.g. a compiler) without having to specify a all
                dependencies of that tool (as one would have when using
                <literal>type="delete"</literal>). Consider the following example where we wish to compile a
                custom program in <literal>config.sh</literal>. We ship its source code via an
                <literal>archive</literal> element and add the build tools (<literal>ninja</literal>, <literal>meson</literal> and <literal>clang</literal>) to
                <literal>&lt;packages type="image"&gt;</literal> and <literal>&lt;packages type="uninstall"&gt;</literal>:</para>
        <screen language="xml">&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
    &lt;!-- snip --&gt;
    &lt;packages type="image"&gt;
        &lt;package name="ca-certificates"/&gt;
        &lt;package name="coreutils"/&gt;
        &lt;package name="ninja"/&gt;
        &lt;package name="clang"/&gt;
        &lt;package name="meson"/&gt;
        &lt;archive name="foo_app_sources.tar.gz"/&gt;
    &lt;/packages&gt;
    &lt;!-- These packages will be uninstalled after running config.sh --&gt;
    &lt;packages type="uninstall"&gt;
        &lt;package name="ninja"/&gt;
        &lt;package name="meson"/&gt;
        &lt;package name="clang"/&gt;
    &lt;/packages&gt;
&lt;/image&gt;</screen>
        <para>The tools <literal>meson</literal>, <literal>clang</literal> and <literal>ninja</literal> are then available during the
                <xref linkend="prepare-step"/> and can thus be used in
                <literal>config.sh</literal> (for further details, see
                <xref linkend="working-with-kiwi-user-defined-scripts"/>), for example to build
                <literal>foo_app</literal>:</para>
        <screen language="bash">pushd /opt/src/foo_app
mkdir build
export CC=clang
meson build
cd build &amp;&amp; ninja &amp;&amp; ninja install
popd</screen>
        <para>The <literal>&lt;packages type="uninstall"&gt;</literal> element will make sure that the final
                appliance will no longer contain our tools required to build <literal>foo_app</literal>,
                thus making our image smaller.</para>
        <para>There are also other use cases for <literal>type="uninstall"</literal>, especially for
                specialized appliances. For containers one can often remove the package
                <literal>shadow</literal> (it is required to setup new user accounts) or any left over
                partitioning tools (<literal>parted</literal> or <literal>fdisk</literal>). All networking tools can be
                safely uninstalled in images for embedded devices without a network
                connection.</para>
      </section>
      <section xml:id="product-and-namedcollection-element">
        <title>The <literal>product</literal> and <literal>namedCollection</literal> element</title>
        <para>KIWI NG supports the inclusion of openSUSE products or of namedCollections
                (<emphasis>patterns</emphasis> in SUSE based distributions or <emphasis>groups</emphasis> for RedHat based
                distributions). These can be added via the <literal>product</literal> and <literal>namedCollection</literal>
                child elements, which both take the mandatory <literal>name</literal> attribute and the
                optional <literal>arch</literal> attribute.</para>
        <para><literal>product</literal> and <literal>namedCollection</literal> can be utilized to shorten the list of
                packages that need to be added to the image description tremendously. A
                named pattern, specified with the namedCollection element is a
                representation of a predefined list of packages. Specifying a pattern will
                install all packages listed in the named pattern. Support for patterns is
                distribution specific and available in SLES, openSUSE, CentOS, RHEL and
                Fedora. The optional <literal>patternType</literal> attribute on the packages element allows
                you to control the installation of dependent packages. You may assign one
                of the following values to the <literal>patternType</literal> attribute:</para>
        <itemizedlist>
          <listitem>
            <para><literal>onlyRequired</literal>: Incorporates only patterns and packages that the
                        specified patterns and packages require. This is a “hard dependency” only
                        resolution.</para>
          </listitem>
          <listitem>
            <para><literal>plusRecommended</literal>: Incorporates patterns and packages that are required
                        and recommended by the specified patterns and packages.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="the-ignore-element">
        <title>The <literal>ignore</literal> element</title>
        <para>Packages can be explicitly marked to be ignored for installation inside a
                <literal>packages</literal> collection. This useful to exclude certain packages from being
                installed when using patterns with <literal>patternType="plusRecommended"</literal> as shown
                in the following example:</para>
        <screen language="xml">&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
    &lt;packages type="image" patternType="plusRecommended"&gt;
        &lt;namedCollection name="network-server"/&gt;
        &lt;package name="grub2"/&gt;
        &lt;package name="kernel"/&gt;
        &lt;ignore name="ejabberd"/&gt;
        &lt;ignore name="puppet-server"/&gt;
    &lt;/packages&gt;
&lt;/image&gt;</screen>
        <para>Packages can be marked as ignored during the installation by adding a
                <literal>ignore</literal> child element with the mandatory <literal>name</literal> attribute set to the
                package’s name. Optionally one can also specify the architecture via the
                <literal>arch</literal> similarly to <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#package-element">The package element</link>.</para>
        <warning>
          <para>Adding <literal>ignore</literal> elements as children of a <literal>&lt;packages type="delete"&gt;</literal> or
                    a <literal>&lt;packages type="uninstall"&gt;</literal> element has no effect! The packages will
                    still get deleted.</para>
        </warning>
      </section>
    </section>
    <section xml:id="image-profiles" xml:base="concept_and_workflow/profiles">
      <title>Image Profiles</title>
      <para>A <emphasis>profile</emphasis> is a namespace for additional settings that can be applied by
            KIWI NG on top of the default settings (or other profiles), thereby allowing
            to build multiple appliances with the same build type but with different
            configurations.</para>
      <para>The use of profiles is advisable to distinguish image builds of the same
            type but with different settings. In the following example, two virtual
            machine images of the <literal>oem</literal> type are configured: one for QEMU (using the
            <literal>qcow2</literal> format) and one for VMWare (using the <literal>vmdk</literal> format).</para>
      <screen language="xml">&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
    &lt;profiles&gt;
        &lt;profile name="QEMU" description="virtual machine for QEMU"/&gt;
        &lt;profile name="VMWare" description="virtual machine for VMWare"/&gt;
    &lt;/profiles&gt;
    &lt;preferences&gt;
        &lt;version&gt;15.0&lt;/version&gt;
        &lt;packagemanager&gt;zypper&lt;/packagemanager&gt;
    &lt;/preferences&gt;
    &lt;preferences profiles="QEMU"&gt;
        &lt;type image="oem" format="qcow2" filesystem="ext4"&gt;
    &lt;/preferences&gt;
    &lt;preferences profiles="VMWare"&gt;
        &lt;type image="oem" format="vmdk" filesystem="ext4"&gt;
    &lt;/preferences&gt;
&lt;/image&gt;</screen>
      <para>Each profile is declared via the element , which itself must be a
            child of <literal>profiles</literal> and must contain the <literal>name</literal> and <literal>description</literal>
            attributes. The <literal>description</literal> is only present for documentation purposes,
            <literal>name</literal> on the other hand is used to instruct KIWI NG which profile to build
            via the command line. Additionally, one can provide the boolean attribute
            <literal>import</literal>, which defines whether this profile should be used by default when
            KIWI NG is invoked via the command line.</para>
      <para>A profile inherits the default settings which do not belong to any
            profile. It applies only to elements that contain the profile in their
            <literal>profiles</literal> attribute. The attribute <literal>profiles</literal> expects a comma separated
            list of profiles for which the settings of this element apply.</para>
      <para>Profiles can furthermore inherit settings from another profile via the
            <literal>requires</literal> sub-element:</para>
      <screen language="xml">&lt;profiles&gt;
    &lt;profile name="VM" description="virtual machine"/&gt;
    &lt;profile name="QEMU" description="virtual machine for QEMU"&gt;
        &lt;requires profile="VM"/&gt;
    &lt;/profile&gt;
&lt;/profiles&gt;</screen>
      <para>The profile <literal>QEMU</literal> would inherit the settings from <literal>VM</literal> in the above
            example.</para>
      <para>For further details on the usage of <emphasis>profiles</emphasis> see
            <xref linkend="building-build-with-profiles"/></para>
    </section>
    <section xml:id="adding-users" xml:base="concept_and_workflow/users">
      <title>Adding Users</title>
      <para>User accounts can be added or modified via the <literal>users</literal> element, which
            supports a list of multiple <literal>user</literal> child elements:</para>
      <screen language="xml">&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
    &lt;users&gt;
        &lt;user
            password="this_is_soo_insecure"
            home="/home/me" name="me"
            groups="users" pwdformat="plain"
        /&gt;
        &lt;user
            password="$1$wYJUgpM5$RXMMeASDc035eX.NbYWFl0"
            home="/root" name="root" groups="root"
        /&gt;
    &lt;/users&gt;
&lt;/image&gt;</screen>
      <para>Each <literal>user</literal> element represents a specific user that is added or
            modified. The following attributes are mandatory:</para>
      <itemizedlist>
        <listitem>
          <para><literal>name</literal>: the UNIX username</para>
        </listitem>
        <listitem>
          <para><literal>password</literal>: The password for this user account. It can be provided either
                    in cleartext form (<literal>pwdformat="plain"</literal>) or in ’ed form
                    (<literal>pwdformat="encrypted"</literal>). Plain passwords are discouraged, as everyone
                    with access to the image description would know the password. It is
                    recommended to generate a hash of your password using <literal>openssl</literal> as
                    follows:</para>
          <screen language="bash">$ openssl passwd -1 -salt 'xyz' YOUR_PASSWORD</screen>
        </listitem>
      </itemizedlist>
      <para>Additionally, the following optional attributes can be specified:</para>
      <itemizedlist>
        <listitem>
          <para><literal>home</literal>: the path to the user’s home directory</para>
        </listitem>
        <listitem>
          <para><literal>groups</literal>: A comma separated list of UNIX groups. The first element of the
                    list is used as the user’s primary group. The remaining elements are
                    appended to the user’s supplementary groups. When no groups are assigned
                    then the system’s default primary group will be used.</para>
        </listitem>
        <listitem>
          <para>: The numeric user id of this account.</para>
        </listitem>
        <listitem>
          <para><literal>pwdformat</literal>: The format in which <literal>password</literal> is provided, either <literal>plain</literal>
                    or <literal>encrypted</literal> (the latter is the default).</para>
        </listitem>
      </itemizedlist>
    </section>
    <section xml:id="working-with-kiwi-user-defined-scripts" xml:base="concept_and_workflow/shell_scripts">
      <title>User Defined Scripts</title>
      <note>
        <para>
          <emphasis role="bold">Abstract</emphasis>
        </para>
        <para>This chapter describes the purpose of the user defined scripts
                <literal>config.sh</literal>, <literal>image.sh</literal> and <literal>disk.sh</literal>, which can
                be used to further customize an image in ways that are not possible
                via the image description alone.</para>
      </note>
      <para>KIWI NG supports the following optional scripts that it runs in a
            root environment (chroot) containing your new appliance:</para>
      <variablelist>
        <varlistentry>
          <term>config.sh</term>
          <listitem>
            <para>runs at the end of the <xref linkend="prepare-step"/>
                        and after users have been set and the <emphasis>overlay tree directory</emphasis>
                        has been applied. It is usually used to apply a permanent and final
                        change of data in the root tree, such as modifying a package provided
                        config file.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>images.sh</term>
          <listitem>
            <para>is executed at the beginning of the <xref linkend="create-step"/>. It runs in the same image root tree
                        that has been created by the prepare step but is invoked any
                        time an image should be created from that root tree. It is usually
                        used to apply image type specific changes to the root tree such as
                        a modification to a config file that should be done when building
                        a live iso but not when building a virtual disk image.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>disk.sh</term>
          <listitem>
            <para>is executed for the disk image type <literal>oem</literal> only and runs after the
                        synchronisation of the root tree into the disk image loop file.
                        At call time of the script the device name of the currently mapped
                        root device is passed as a parameter. The chroot environment for
                        this script call is the virtual disk itself and not the root tree
                        as with <literal>config.sh</literal> and <literal>images.sh</literal>. The script <literal>disk.sh</literal>
                        is usually used to apply changes at parts of the system that are not an
                        element of the file based root tree such as the partition table, the
                        bootloader or filesystem attributes.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>KIWI NG executes scripts via the operating system if their executable
            bit is set (in that case a shebang is mandatory) otherwise they will be
            invoked via the BASH. If a script exits with a non-zero exit code
            then KIWI NG will report the failure and abort the image creation.</para>
      <section xml:id="script-template-for-config-sh-images-sh">
        <title>Script Template for config.sh / images.sh</title>
        <para>KIWI NG provides a collection of methods and variables that supports users
                with custom operations. For details see <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#image-customization-methods">Functions and Variables Provided by KIWI NG</link>.
                The following template shows how to import this information in your
                script:</para>
        <screen language="bash">#======================================
# Include functions &amp; variables
#--------------------------------------
test -f /.kconfig &amp;&amp; . /.kconfig
test -f /.profile &amp;&amp; . /.profile

...</screen>
        <warning>
          <para>Modifications of the unpacked root tree</para>
          <para>Keep in mind that there is only one unpacked root tree the
                    script operates in. This means that all changes are permanent
                    and will not be automatically restored!</para>
        </warning>
      </section>
      <section xml:id="image-customization-methods">
        <title>Functions and Variables Provided by KIWI NG</title>
        <para>KIWI NG creates the <literal>.kconfig</literal> and <literal>.profile</literal> files to be sourced
                by the shell scripts <literal>config.sh</literal> and <literal>images.sh</literal>.
                <literal>.kconfig</literal> contains various helper functions which can be used to
                simplify the image configuration and <literal>.profile</literal> contains environment
                variables which get populated from the settings provided in the image
                description.</para>
        <section xml:id="functions">
          <title>Functions</title>
          <para>The <literal>.kconfig</literal> file provides a common set of functions.  Functions
                    specific to SUSE Linux Enterprise and openSUSE begin with the name
                    <literal>suse</literal>, functions applicable to all Linux distributions start with the
                    name <literal>base</literal>.</para>
          <para>The following list describes all functions provided by <literal>.kconfig</literal>:</para>
          <variablelist>
            <varlistentry>
              <term>baseCleanMount</term>
              <listitem>
                <para>Unmount the filesystems <literal>/proc</literal>, <literal>/dev/pts</literal>, <literal>/sys</literal> and
                                <literal>/proc/sys/fs/binfmt_misc</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseGetPackagesForDeletion</term>
              <listitem>
                <para>Return the name(s) of the packages marked for deletion in the image
                                description.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseGetProfilesUsed</term>
              <listitem>
                <para>Return the name(s) of profiles used to build this image.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseSetRunlevel {value}</term>
              <listitem>
                <para>Set the default run level.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseSetupUserPermissions</term>
              <listitem>
                <para>Set the ownership of all home directories and their content to the correct
                                users and groups listed in <literal>/etc/passwd</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseStripAndKeep {list of info-files to keep}</term>
              <listitem>
                <para>Helper function for the <literal>baseStrip*</literal> functions, reads the list of files
                                to check from stdin for removing
                                params: files which should be kept</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseStripDocs {list of docu names to keep}</term>
              <listitem>
                <para>Remove all documentation files, except for the ones given as the
                                parameter.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseStripInfos {list of info-files to keep}</term>
              <listitem>
                <para>Remove all info files, except for the one given as the parameter.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseStripLocales {list of locales}</term>
              <listitem>
                <para>Remove all locales, except for the ones given as the parameter.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseStripTranslations {list of translations}</term>
              <listitem>
                <para>Remove all translations, except for the ones given as the parameter.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseStripMans {list of manpages to keep}</term>
              <listitem>
                <para>Remove all manual pages, except for the ones given as the parameter.</para>
                <para>Example:</para>
                <screen language="bash">baseStripMans more less</screen>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>suseImportBuildKey</term>
              <listitem>
                <para>Add the SUSE build keys to the RPM database.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseStripUnusedLibs</term>
              <listitem>
                <para>Remove libraries which are not directly linked against applications
                                in the bin directories.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseUpdateSysConfig {filename} {variable} {value}</term>
              <listitem>
                <para>Update the contents of a sysconfig variable</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>suseConfig</term>
              <listitem>
                <para>This function is deprecated and is a NOP.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseSystemdServiceInstalled {service}</term>
              <listitem>
                <para>Prints the path of the first found systemd unit or mount with name passed
                                as the first parameter.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseSysVServiceInstalled {service}</term>
              <listitem>
                <para>Prints the name <literal>${service}</literal> if a SysV init service with that name is
                                found, otherwise it prints nothing.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseSystemdCall {service_name} {args}</term>
              <listitem>
                <para>Calls <literal>systemctl ${args} ${service_name}</literal> if a systemd unit, a systemd
                                mount or a SysV init service with the <literal>${service_name}</literal> exist.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseInsertService {servicename}</term>
              <listitem>
                <para>Activate the given service via <command>systemctl</command>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseRemoveService {servicename}</term>
              <listitem>
                <para>Deactivate the given service via <command>systemctl</command>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseService {servicename} {on|off}</term>
              <listitem>
                <para>Activate or deactivate a service via <command>systemctl</command>.
                                The function requires the service name and the value <literal>on</literal> or <literal>off</literal> as
                                parameters.</para>
                <para>Example to enable the sshd service on boot:</para>
                <screen language="bash">baseService sshd on</screen>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>suseInsertService {servicename}</term>
              <listitem>
                <para>Calls baseInsertService and exists only for
                                compatibility reasons.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>suseRemoveService {servicename}</term>
              <listitem>
                <para>Calls baseRemoveService and exists only for
                                compatibility reasons.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>suseService {servicename} {on|off}</term>
              <listitem>
                <para>Calls baseService and exists only for compatibility
                                reasons.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>suseActivateDefaultServices</term>
              <listitem>
                <para>Activates the <literal>network</literal> and <literal>cron</literal> services to run at boot.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>suseSetupProduct</term>
              <listitem>
                <para>Creates the <literal>/etc/products.d/baseproduct</literal> link
                                pointing to the product referenced by either <literal>/etc/SuSE-brand</literal> or
                                <literal>/etc/os-release</literal> or the latest <literal>prod</literal> file available in
                                <literal>/etc/products.d</literal></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>suseSetupProductInformation</term>
              <listitem>
                <para>Uses <command>zypper</command> to search for the installed product
                                and installs all product specific packages. This function fails
                                when <command>zypper</command> is not the appliances package manager.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>baseVagrantSetup</term>
              <listitem>
                <para>Configures the image to work as a vagrant box by performing the following
                                changes:</para>
                <itemizedlist>
                  <listitem>
                    <para>add the <literal>vagrant</literal> user to <literal>/etc/sudoers</literal>
                                        or <literal>/etc/sudoers.d/vagrant</literal></para>
                  </listitem>
                  <listitem>
                    <para>insert the insecure vagrant ssh key, apply recommended
                                        ssh settings and start the ssh daemon</para>
                  </listitem>
                  <listitem>
                    <para>create the default shared folder <literal>/vagrant</literal></para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Debug {message}</term>
              <listitem>
                <para>Helper function to print the supplied message if the variable DEBUG is
                                set to 1 (it is off by default).</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Echo {echo commandline}</term>
              <listitem>
                <para>Helper function to print a message to the controlling terminal.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Rm {list of files}</term>
              <listitem>
                <para>Helper function to delete files and log the deletion.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Rpm {rpm commandline}</term>
              <listitem>
                <para>Helper function for calling <literal>rpm</literal>: forwards all commandline arguments to
                                <literal>rpm</literal> and logs the call.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section xml:id="profile-environment-variables">
          <title>Profile Environment Variables</title>
          <para>The <literal>.profile</literal> environment file is created by KIWI NG and contains a
                    specific set of variables which are listed below.</para>
          <variablelist>
            <varlistentry>
              <term>$kiwi_compressed</term>
              <listitem>
                <para>The value of the <literal>compressed</literal> attribute set in the  element in
                                <literal>config.xml</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>$kiwi_delete</term>
              <listitem>
                <para>A list of all packages which are children of the <literal>packages</literal> element
                                with <literal>type="delete"</literal> in <literal>config.xml</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>$kiwi_drivers</term>
              <listitem>
                <para>A comma separated list of the driver entries as listed in the
                                <literal>drivers</literal> section of the <literal>config.xml</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>$kiwi_iname</term>
              <listitem>
                <para>The name of the image as listed in <literal>config.xml</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>$kiwi_iversion</term>
              <listitem>
                <para>The image version as a string.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>$kiwi_keytable</term>
              <listitem>
                <para>The contents of the keytable setup as done in <literal>config.xml</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>$kiwi_language</term>
              <listitem>
                <para>The contents of the locale setup as done in <literal>config.xml</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>$kiwi_profiles</term>
              <listitem>
                <para>A comma separated list of profiles used to build this image.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>$kiwi_timezone</term>
              <listitem>
                <para>The contents of the timezone setup as done in <literal>config.xml</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>$kiwi_type</term>
              <listitem>
                <para>The image type as extracted from the  element in
                                <literal>config.xml</literal>.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
      </section>
      <section xml:id="configuration-tips">
        <title>Configuration Tips</title>
        <procedure>
          <step>
            <para>
              <emphasis role="bold">Locale configuration:</emphasis>
            </para>
          </step>
        </procedure>
        <para>KIWI in order to set the locale relies on <command>systemd-firstboot</command>,
                    which in turn writes the locale configuration file <literal>/etc/locale.conf</literal>.
                    The values for the locale settings are taken from the description XML
                    file in the <literal>&lt;locale&gt;</literal> element under <literal>&lt;preferences&gt;</literal>.</para>
        <para>KIWI assumes systemd adoption to handle these locale settings, in case the
                    build distribution does not honor <literal>/etc/locale.conf</literal> this is likely to not
                    produce any effect on the locale settings. As an example, in SLE12
                    distribution the locale configuration is already possible by using the
                    systemd toolchain, however this approach overlaps with SUSE specific
                    managers such as YaST. In that case using <command>systemd-firstboot</command>
                    is only effective if locales in <literal>/etc/sysconfig/language</literal> are
                    not set or if the file does not exist at all. In SLE12
                    <literal>/etc/sysconfig/language</literal> has precendence over
                    <literal>/etc/locale.conf</literal> for compatibility reasons and management tools
                    could still relay on  files for locale settings.</para>
        <para>In any case the configuration is still possible in KIWI by using
                    any distribution specific way to configure the locale setting inside the
                    <literal>config.sh</literal> script or by adding any additional configuration file
                    as part of the overlay root-tree.</para>
        <procedure>
          <step>
            <para>
              <emphasis role="bold">Stateless systemd UUIDs:</emphasis>
            </para>
          </step>
        </procedure>
        <para>Machine ID files are created and set (<literal>/etc/machine-id</literal>,
                    <literal>/var/lib/dbus/machine-id</literal>) during the image package installation
                    when <emphasis>systemd</emphasis> and/or <emphasis>dbus</emphasis> are installed. Those UUIDs are intended to
                    be unique and set only once in each deployment. KIWI NG follows the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.freedesktop.org/software/systemd/man/machine-id.html">systemd
                        recommendations</link> and
                    wipes any <literal>/etc/machine-id</literal> content, leaving it as an empty file.
                    Note, this only applies to images based on a dracut initrd, it does not
                    apply for container images.</para>
        <para>In case this setting is also required for a non dracut based image,
                    the same result can achieved by removing <literal>/etc/machine-id</literal> in
                    <literal>config.sh</literal>.</para>
        <note>
          <para>Avoid interactive boot</para>
          <para>It is important to remark that the file <literal>/etc/machine-id</literal> is set
                        to an empty file instead of deleting it. <command>systemd</command> may
                        trigger <command>systemd-firstboot</command> service if this file is not
                        present, which leads to an interactive firstboot where the user is
                        asked to provide some data.</para>
        </note>
        <note>
          <para>Avoid inconsistent <literal>/var/lib/dbus/machine-id</literal></para>
          <para>Note that <literal>/etc/machine-id</literal> and <literal>/var/lib/dbus/machine-id</literal><emphasis role="bold">must</emphasis> contain the same unique ID. On modern systems
                        <literal>/var/lib/dbus/machine-id</literal> is already a symlink to
                        <literal>/etc/machine-id</literal>. However on older systems those might be two
                        different files. This is the case for SLE-12 based images. If you are
                        targeting these older operating systems, it is recommended to add the
                        symlink creation into <literal>config.sh</literal>:</para>
          <screen language="bash">#======================================
# Make machine-id consistent with dbus
#--------------------------------------
if [ -e /var/lib/dbus/machine-id ]; then
    rm /var/lib/dbus/machine-id
fi
ln -s /etc/machine-id /var/lib/dbus/machine-id</screen>
        </note>
      </section>
    </section>
    <section xml:id="runtime-config" xml:base="concept_and_workflow/runtime_configuration">
      <title>The Runtime Configuration File</title>
      <para>KIWI NG supports an additional configuration file for runtime specific
            settings that do not belong into the image description but which are
            persistent and would be unsuitable for command line parameters.</para>
      <para>The runtime configuration file must adhere to the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://yaml.org/">YAML</link> syntax. KIWI NG searches for the runtime configuration
            file in the following locations:</para>
      <procedure>
        <step>
          <para>
            <literal>~/.config/kiwi/config.yml</literal>
          </para>
        </step>
        <step>
          <para>
            <literal>/etc/kiwi.yml</literal>
          </para>
        </step>
      </procedure>
      <para>A default runtime config file in <literal>/etc/kiwi.yml</literal> is provided with
            the python3-kiwi package. The file contains all settings as comments
            including a short description of each setting.</para>
    </section>
    <section xml:id="working-with-kiwi-customizing-the-boot-process" xml:base="concept_and_workflow/customize_the_boot_process">
      <title>Customizing the Boot Process</title>
      <para>Most Linux systems use a special boot image to control the system boot process
            after the system firmware, BIOS or UEFI, hands control of the hardware to the
            operating system. This boot image is called the <literal>initrd</literal>. The Linux kernel
            loads the <literal>initrd</literal>, a compressed cpio initial RAM disk, into the RAM and
            executes <command>init</command> or, if present, <command>linuxrc</command>.</para>
      <para>Depending on the image type, KIWI NG creates the boot image automatically during
            the <literal>create</literal> step. It uses a tool called <literal>dracut</literal> to create this initrd.
            Dracut generated initrd archives can be extended by custom modules to add
            functionality which is not natively provided by dracut itself. In the scope
            of KIWI NG the following dracut modules are used:</para>
      <variablelist>
        <varlistentry>
          <term>
            <literal>kiwi-dump</literal>
          </term>
          <listitem>
            <para>Serves as an image installer. It provides the
                        required implementation to install a KIWI NG image on a selectable target.
                        This module is required if one of the attributes <literal>installiso</literal>, <literal>installstick</literal>
                        or <literal>installpxe</literal> is set to <literal>true</literal> in the image type definition</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <literal>kiwi-dump-reboot</literal>
          </term>
          <listitem>
            <para>Serves to boot the system into the installed image after installation is
                        completed.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <literal>kiwi-live</literal>
          </term>
          <listitem>
            <para>Boots up a KIWI NG live image. This module is required
                        if the <literal>iso</literal> image type is selected</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <literal>kiwi-overlay</literal>
          </term>
          <listitem>
            <para>Allows to boot disk images configured with the
                        attribute <literal>overlayroot</literal> set to <literal>true</literal>. Such a disk has its root partition
                        compressed and readonly and boots up using overlayfs for the root filesystem
                        using an extra partition on the same disk for persistent data.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <literal>kiwi-repart</literal>
          </term>
          <listitem>
            <para>Resizes an OEM disk image after installation onto
                        the target disk to meet the size constraints configured in the <literal>oemconfig</literal>
                        section of the image description. The module takes over the tasks to
                        repartition the disk, resizing of RAID, LVM, LUKS and other layers and
                        resizing of the system filesystems.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <literal>kiwi-lib</literal>
          </term>
          <listitem>
            <para>Provides functions of general use and serves
                        as a library usable by other dracut modules. As the name implies, its
                        main purpose is to function as library for the above mentioned kiwi
                        dracut modules.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>Using Custom Boot Image Support</para>
        <para>Apart from the standard dracut based creation of the boot image, KIWI NG
                supports the use of custom boot images for the image types <literal>oem</literal>
                and <literal>pxe</literal>. The use of a custom boot image is activated by setting the
                following attribute in the image description:</para>
        <screen language="none">&lt;type ... initrd_system="kiwi"/&gt;</screen>
        <para>Along with this setting it is now mandatory to provide a reference to
                a boot image description in the <literal>boot</literal> attribute like in the
                following example:</para>
        <screen language="none">&lt;type ... boot="netboot/suse-leap15.1"/&gt;</screen>
        <para>Such boot descriptions for the OEM and PXE types are currently still
                provided by the KIWI NG packages but will be moved into its own repository
                and package soon.</para>
        <para>The custom boot image descriptions allows a user to completely customize
                what and how the initrd behaves by its own implementation. This concept
                is mostly used in PXE environments which are usually highly customized
                and requires a specific boot and deployment workflow.</para>
      </note>
      <section xml:id="boot-image-hook-scripts">
        <title>Boot Image Hook-Scripts</title>
        <para>The dracut initrd system uses <literal>systemd</literal> to implement a predefined workflow
                of services which are documented in the bootup man page at:</para>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="http://man7.org/linux/man-pages/man7/dracut.bootup.7.html"/>
        </para>
        <para>To hook in a custom boot script into this workflow it’s required to provide
                a dracut module which is picked up by dracut at the time KIWI NG calls it.
                The module files can be either provided as a package or as part of the
                overlay directory in your image description</para>
        <para>The following example demonstrates how to include a custom hook script
                right before the system rootfs gets mounted.</para>
        <procedure>
          <step>
            <para>Create a subdirectory for the dracut module:</para>
            <screen language="bash">$ mkdir -p root/usr/lib/dracut/modules.d/90my-module</screen>
          </step>
          <step>
            <para>Register the dracut module in a configuration file:</para>
            <screen language="bash">$ vi root/etc/dracut.conf.d/90-my-module.conf

add_dracutmodules+=" my-module "</screen>
          </step>
          <step>
            <para>Create the hook script:</para>
            <screen language="bash">$ touch root/usr/lib/dracut/modules.d/90my-module/my-script.sh</screen>
          </step>
          <step>
            <para>Create a module setup file in <literal>root/usr/lib/dracut/modules.d/90my-module/module-setup.sh</literal> with the following content:</para>
            <screen language="bash">#!/bin/bash

# called by dracut
check() {
    # check module integrity
}

# called by dracut
depends() {
    # return list of modules depending on this one
}

# called by dracut
installkernel() {
    # load required kernel modules when needed
    instmods _kernel_module_list_
}

# called by dracut
install() {
    declare moddir=${moddir}
    inst_multiple _tools_my_module_script_needs_

    inst_hook pre-mount 30 "${moddir}/my-script.sh"
}</screen>
          </step>
        </procedure>
        <para>That’s it! At the time KIWI NG calls dracut the <literal>90my-module</literal> will be taken
                into account and is installed into the generated initrd. At boot time
                systemd calls the scripts as part of the <literal>dracut-pre-mount.service</literal>.</para>
        <para>The dracut system offers a lot more possibilities to customize the
                initrd than shown in the example above. For more information, visit
                the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="http://people.redhat.com/harald/dracut.html">dracut project page</link>.</para>
      </section>
      <section xml:id="boot-image-parameters">
        <title>Boot Image Parameters</title>
        <para>A dracut generated initrd in a KIWI NG image build process includes one or
                more of the KIWI NG provided dracut modules. The following list documents
                the available kernel boot parameters for this modules:</para>
        <variablelist>
          <varlistentry>
            <term>
              <literal>rd.kiwi.debug</literal>
            </term>
            <listitem>
              <para>Activates the debug log file for the KIWI NG part of
                            the boot process at <literal>/run/initramfs/log/boot.kiwi</literal>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>rd.kiwi.install.pxe</literal>
            </term>
            <listitem>
              <para>Tells an OEM installation image to lookup the system
                            image on a remote location specified in <literal>rd.kiwi.install.image</literal>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>rd.kiwi.install.image=URI</literal>
            </term>
            <listitem>
              <para>Specifies the remote location of the system image in
                            a PXE based OEM installation</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>rd.kiwi.install.pass.bootparam</literal>
            </term>
            <listitem>
              <para>Tells an OEM installation image to pass an additional
                            boot parameters to the kernel used to boot the installed image. This
                            can be used e.g. to pass on first boot configuration for a PXE image.
                            Note, that options starting with <literal>rd.kiwi</literal> are not passed on to avoid
                            side effects.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>rd.kiwi.oem.maxdisk=size[KMGT]</literal>
            </term>
            <listitem>
              <para>Configures the maximum disk size an unattended OEM
                            installation should consider for image deployment. Unattended OEM
                            deployments default to deploying on <literal>/dev/sda</literal> (more exactly, the first
                            device not filtered out by <literal>oem-device-filter</literal>). With RAID
                            controllers, it can happen that your buch of big JBOD disks is for
                            example <literal>/dev/sda</literal> to <literal>/dev/sdi</literal> and the 480G RAID1 configured for
                            OS deployment is <literal>/dev/sdj</literal>. With <literal>rd.kiwi.oem.maxdisk=500G</literal> the
                            deployment will land on that RAID disk.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>rd.live.overlay.size</literal>
            </term>
            <listitem>
              <para>Tells a live ISO image the size for the <literal>tmpfs</literal> filesystem that is used
                            for the <literal>overlayfs</literal> mount process. If the write area of the overlayfs
                            mount uses this tmpfs, any new data written during the runtime of
                            the system will fillup this space. The default value used is set
                            to <literal>50%</literal> which means one half of the available RAM space can be used
                            for writing new data.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>rd.live.overlay.persistent</literal>
            </term>
            <listitem>
              <para>Tells a live ISO image to prepare a persistent
                            write partition.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>rd.live.overlay.cowfs</literal>
            </term>
            <listitem>
              <para>Tells a live ISO image which filesystem should be
                            used to store data on the persistent write partition.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>rd.live.cowfile.mbsize</literal>
            </term>
            <listitem>
              <para>Tells a live ISO image the size of the COW file in MB.
                            When using tools like <literal>live-grub-stick</literal> the live ISO will be copied
                            as a file on the target device and a GRUB loopback setup is created
                            there to boot the live system from file. In such a case the
                            persistent write setup, which usually creates an extra write
                            partition on the target, will fail in almost all cases because
                            the target has no free and unpartitioned space available.
                            Because of that a cow file(live_system.cow) instead of a partition
                            is created. The cow file will be created in the same directory
                            the live iso image file was read from by grub and takes the
                            configured size or the default size of 500MB.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>rd.live.dir</literal>
            </term>
            <listitem>
              <para>Tells a live ISO image the directory which contains
                            the live OS root directory. Defaults to <literal>LiveOS</literal>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>rd.live.squashimg</literal>
            </term>
            <listitem>
              <para>Tells a live ISO image the name of the squashfs
                            image file which holds the OS root. Defaults to <literal>squashfs.img</literal>.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <section xml:id="boot-debugging">
          <title>Boot Debugging</title>
          <para>If the boot process encounters a fatal error, the default behavior is to
                    stop the boot process without any possibility to interact with the system.
                    Prevent this behavior by activating dracut’s builtin debug mode in combination
                    with the kiwi debug mode as follows:</para>
          <screen language="bash">rd.debug rd.kiwi.debug</screen>
          <para>This should be set at the Kernel command line. With those parameters activated,
                    the system will enter a limited shell environment in case of a fatal error
                    during boot. The shell contains a basic set of commands and allows for a closer
                    look to:</para>
          <screen language="bash">less /run/initramfs/log/boot.kiwi</screen>
        </section>
      </section>
    </section>
    <section xml:id="legacy-kiwi" xml:base="concept_and_workflow/legacy_kiwi">
      <title>Legacy KIWI vs. KIWI Next Generation (KIWI NG)</title>
      <note>
        <para>
          <emphasis role="bold">Abstract</emphasis>
        </para>
        <para>Users currently have the choice for the kiwi legacy version
                or this next generation kiwi. This document describes the
                maintenance state of the legacy kiwi version and under which
                circumstances the use of the legacy kiwi version is required.</para>
      </note>
      <para>There is still the former
            <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/OSInside/kiwi-legacy">KIWI Legacy</link>
            version and we decided to rewrite it.</para>
      <para>The reasons to rewrite software from scratch could be very different
            and should be explained in order to let users understand why it
            makes sense. We are receiving feedback and defect reports from a
            variety of groups with different use cases and requirements. It
            became more and more difficult to handle those requests in good
            quality and without regressions. At some point we asked ourselves:</para>
      <para>
        <literal>Is KIWI Legacy really well prepared for future challenges?</literal>
      </para>
      <para>The conclusion was that the former version has some major weaknesses
            which has to be addressed prior to continue with future development.
            The following issues are most relevant:</para>
      <itemizedlist>
        <listitem>
          <para>Not based on a modern programming language</para>
        </listitem>
        <listitem>
          <para>Major design flaws but hardly any unit tests. The risk for
                    regressions on refactoring is high</para>
        </listitem>
        <listitem>
          <para>No arch specific build integration tests</para>
        </listitem>
        <listitem>
          <para>Lots of legacy code for old distributions</para>
        </listitem>
      </itemizedlist>
      <para>In order to address all of these the questions came up:</para>
      <para>
        <literal>How to modernize the project without producing regressions?</literal>
      </para>
      <para>
        <literal>How to change/drop features without making anybody unhappy?</literal>
      </para>
      <para>As there is no good way to achieve this in the former code base the
            decision was made to start a rewrite of KIWI Legacy with a maintained and
            stable version in the background.</para>
      <para>Users will be able to use both versions in parallel. In addition,
            KIWI NG will be fully compatible with the current format of
            the appliance description. This means, users can build an appliance from
            the same appliance description with KIWI Legacy and
            KIWI NG, if the distribution and all configured features are
            supported by the used version.</para>
      <para>This provides an opportunity for users to test KIWI NG
            with their appliance descriptions without risk. If it builds and works
            as expected, I recommend to switch to the KIWI NG. If not,
            please open an issue on <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/OSInside/kiwi"/>.</para>
      <para>The KIWI Legacy version will be further developed in maintenance mode.
            There won’t be any new features added in that code base though.
            Packages will be available at the known place:
            <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="http://download.opensuse.org/repositories/Virtualization:/Appliances">KIWI Legacy packages</link></para>
      <section xml:id="when-do-i-need-to-use-kiwi-legacy">
        <title>When Do I need to use KIWI Legacy</title>
        <itemizedlist>
          <listitem>
            <para>If you are building images using one of the features of the dropped
                        features list below.</para>
          </listitem>
          <listitem>
            <para>If you are building images for an older distribution compared to
                        the list on the main page, see <xref linkend="supported-distributions"/>.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="dropped-features">
        <title>Dropped Features</title>
        <para>The following features have been dropped. If you make use of them
                consider to use the KIWI Legacy version.</para>
        <variablelist>
          <varlistentry>
            <term>Split systems</term>
            <listitem>
              <para>The KIWI Legacy version supports building of split systems
                            which uses a static definition of files and directories marked
                            as read-only or read-write. Evolving technologies like overlayfs
                            makes this feature obsolete.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ZFS filesystem</term>
            <listitem>
              <para>The successor for ZFS is Btrfs in the opensource world. All major
                            distributions put on Btrfs. This and the proprietary attitude of
                            ZFS obsoletes the feature.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Reiserfs filesystem</term>
            <listitem>
              <para>The number of people using this filesystem is decreasing. For image
                            building reiserfs was an interesting filesystem however with Btrfs and
                            XFS there are good non inode based alternatives out there. Therefore we
                            don’t continue supporting Reiserfs.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Btrfs seed based live systems</term>
            <listitem>
              <para>A Btrfs seed device is an alternative for other copy on write
                            filesystems like overlayfs. Unfortunately the stability of the seed
                            device when used as cow part in a live system was not as good as we
                            provide with overlayfs and clicfs. Therefore this variant is no longer
                            supported. We might think of adding this feature back if people demand
                            it.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>lxc container format</term>
            <listitem>
              <para>lxc has a successor in docker based on the former lxc technology.
                            Many distributions also dropped the lxc tools from the distribution
                            in favour of docker.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>OEM Recovery/Restore</term>
            <listitem>
              <para>Recovery/Restore in the world of images has been moved from the
                            operating system layer into higher layers. For example, in private and
                            public Cloud environments disk and image recovery as well as backup
                            strategies are part of Cloud services. Pure operating system recovery
                            and snapshots for consumer machines are provided as features of the
                            distribution. SUSE as an example provides this via Rear
                            (Relax-and-Recover) and snapshot based filesystems (btrfs+snapper).
                            Therefore the recovery feature offered in the KIWI Legacy version
                            will not be continued.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Partition based install method in OEM install image</term>
            <listitem>
              <para>The section <xref linkend="deployment-methods"/> describes the supported OEM
                            installation procedures. The KIWI Legacy version also provided a method
                            to install an image based on the partitions of the OEM disk image.
                            Instead of selecting one target disk to dump the entire image file to,
                            the user selects target partitions. Target partitions could be located
                            on several disks. Each partition of the OEM disk image must be mapped
                            on a selectable target partition. It turned out, users needed a lot of
                            experience in a very sensitive area of the operating system. This is
                            contrary to the idea of images to be dumped and be happy. Thus the
                            partition based install method will not be continued.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="compatibility">
        <title>Compatibility</title>
        <para>The KIWI Legacy version can be installed and used together with
                KIWI NG.</para>
        <note>
          <para>Automatic Link Creation for <command>kiwi</command> Command</para>
          <para>Note the python3-kiwi package uses the alternatives mechanism to
                    setup a symbolic link named <command>kiwi</command> to the real executable
                    named <command>kiwi-ng</command>. If the link target <literal>/usr/bin/kiwi</literal>
                    already exists on your system, the alternative setup will skip the
                    creation of the link target because it already exists.</para>
        </note>
        <para>From an appliance description perspective, both versions are fully
                compatible. Users can build their appliances with both versions and the
                same appliance description. If the appliance description uses features
                KIWI NG does not provide, the build will fail with an
                exception early. If the appliance description uses next generation
                features like the selection of the initrd system, it’s not possible to
                build that with the KIWI Legacy, unless the appliance description
                properly encapsulates the differences into a profile.</para>
        <para>KIWI NG also provides the <literal>--compat</literal> option and
                the <command>kiwicompat</command> tool to be able to use the same commandline
                as provided with the KIWI Legacy version.</para>
      </section>
    </section>
    <section xml:id="overview">
      <title>Overview</title>
      <para>KIWI NG builds so-called <emphasis>system images</emphasis> (a fully installed and optionally
                configured system in a single file) of a Linux distribution in two steps (for
                further details, see <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#working-with-kiwi-image-building-process">Image Building Process</link>):</para>
      <procedure>
        <step>
          <para><emphasis>Prepare operation</emphasis>: generate an <emphasis>unpacked image tree</emphasis> of your
                        image. The unpacked tree is a directory containing the future file
                        system of your image, generated from your image description.</para>
        </step>
        <step>
          <para><emphasis>Create operation</emphasis>: the unpacked tree generated in step 1 is packaged
                        into the format required for the final usage (e.g. a <literal>qcow2</literal> disk
                        image to launch the image with QEMU).</para>
        </step>
      </procedure>
      <para>KIWI NG executes these steps using the following components, which it expects
                to find in the <emphasis>description directory</emphasis>:</para>
      <variablelist>
        <varlistentry>
          <term><xref linkend="image-description"/>:</term>
          <listitem>
            <para>The <literal>config.xml</literal> file contains the image description, which is a
                            collection of general settings of the final image, like the image layout
                            installed packages, present users, etc.</para>
            <note>
              <para>The filename <literal>config.xml</literal> is not mandatory, the image description
                                file can also have an arbitrary name plus the <literal>*.kiwi</literal> extension.
                                KIWI NG first looks for a <literal>config.xml</literal> file. If it cannot be found,
                                it picks the first <literal>*.kiwi</literal> file.</para>
            </note>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><xref linkend="working-with-kiwi-user-defined-scripts"/>:</term>
          <listitem>
            <para>If present, custom configuration shell scripts run at different
                            stages of the build process. They can be used to fine tune
                            the image in ways that are not possible via the settings provided in
                            <literal>config.xml</literal>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Overlay tree directory:</term>
          <listitem>
            <para>The <emphasis>overlay tree</emphasis> is a folder (called <literal>root</literal>) or a tarball
                            (called <literal>root.tar.gz</literal>) that contains files and directories that
                            will be copied into the <emphasis>unpacked image tree</emphasis> during the <emphasis>Prepare
                                operation</emphasis>.
                            The copying is executed after all the packages included in
                            <literal>config.xml</literal> have been installed. Any already present files are
                            overwritten.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>CD root user data:</term>
          <listitem>
            <para>For live ISO images and install ISO images an optional archive
                            is supported. This is a tar archive matching the name
                            <literal>config-cdroot.tar[.compression_postfix]</literal>.</para>
            <para>If present, the archive will be unpacked as user data on the ISO
                            image. For example, this is used to add license files or user
                            documentation. The documentation can then be read directly from the
                            CD/DVD without booting from the media.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="working-with-kiwi-image-building-process">
      <title>Image Building Process</title>
      <para>KIWI NG creates images in a two step process: The first step, the <emphasis>prepare</emphasis>
                operation, generates a so-called <emphasis>unpacked image tree</emphasis> (directory) using
                the information provided in the <literal>config.xml</literal> configuration file
                (see <xref linkend="image-description"/>)</para>
      <para>The second step, the <emphasis>create</emphasis> operation, creates the <emphasis>packed image</emphasis> or
                <emphasis>image</emphasis> in the specified format based on the unpacked image tree and the
                information provided in the <literal>config.xml</literal> configuration file.</para>
      <figure>
        <title>Image Creation Architecture</title>
        <mediaobject>
          <imageobject role="fo">
            <imagedata fileref="intro.png"/>
          </imageobject>
          <imageobject role="html">
            <imagedata fileref="intro.png"/>
          </imageobject>
        </mediaobject>
      </figure>
      <section xml:id="prepare-step">
        <title>The Prepare Step</title>
        <para>As the first step, KIWI NG creates an <emphasis>unpackaged image tree</emphasis>, also called “root tree”. This
                    directory will be the installation target for software packages to be
                    installed during the image creation process.</para>
        <para>For the package installation, KIWI NG relies on the package manager specified
                    in the <literal>packagemanager</literal> element in <literal>config.xml</literal>. KIWI NG supports the
                    following package managers: <literal>dnf</literal>, <literal>zypper</literal> (default) and <literal>apt-get</literal>.</para>
        <para>The prepare step consists of the following substeps:</para>
        <procedure>
          <step>
            <para>
              <emphasis role="bold">Create Target Root Directory</emphasis>
            </para>
            <para>KIWI NG aborts with an error if the target root tree already exists to
                            avoid accidental deletion of an existing unpacked image.</para>
          </step>
          <step>
            <para>
              <emphasis role="bold">Install Packages</emphasis>
            </para>
            <para>First, KIWI NG configures the package manager to use the repositories
                            specified in the configuration file, via the command line, or
                            both. After the repository setup, the packages specified in the
                            <literal>bootstrap</literal> section of the image description are installed in a
                            temporary directory external to the target root tree. This establishes
                            the initial environment to support the completion of the process in a
                            chroot setting. The essential packages are <literal>filesystem</literal> and
                            <literal>glibc-locale</literal> to specify as part of the bootstrap. The dependency
                            chain of these two packages is usually sufficient to populate the
                            bootstrap environment with all required software to support the
                            installation of packages into the new root tree. The aforementioned two
                            packages might not be enough for every distribution.  Consult the
                            <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/OSInside/kiwi-descriptions/">kiwi-descriptions repository</link> containing examples for
                            various Linux distributions.</para>
            <para>The installation of software packages through the selected package
                            manager may install unwanted packages. Removing these packages can be
                            accomplished by marking them for deletion in the image description, see
                            <xref linkend="uninstall-system-packages"/>.</para>
          </step>
          <step>
            <para>
              <emphasis role="bold">Apply the Overlay Tree</emphasis>
            </para>
            <para>Next, KIWI NG applies all files and directories present in the overlay
                            directory named <literal>root</literal> or in the compressed overlay
                            <literal>root.tar.gz</literal> to the target root tree. Files already present in
                            the target root directory are overwritten. This allows you to
                            overwrite any file that was installed by one of the packages during the
                            installation phase.</para>
          </step>
          <step>
            <para>
              <emphasis role="bold">Apply Archives</emphasis>
            </para>
            <para>All archives specified in the <literal>archive</literal> element of the
                            <literal>config.xml</literal> file are applied in the specified order (top to
                            bottom) after the overlay tree copy operation is complete (see
                            <xref linkend="archive-element"/>). Files and directories are
                            extracted relative to the top level of the new root tree. As with the
                            overlay tree, it is possible to overwrite files already existing in the
                            target root tree.</para>
          </step>
          <step>
            <para>
              <emphasis role="bold">Execute the user-defined script</emphasis>
              <literal>config.sh</literal>
            </para>
            <para>At the end of the preparation stage the script <literal>config.sh</literal> is
                            executed (if present). It is run in the top level directory of the
                            target root tree. The script’s primary function is to complete the
                            system configuration. For more details about custom scripts
                            see <xref linkend="working-with-kiwi-user-defined-scripts"/></para>
          </step>
          <step>
            <para>
              <emphasis role="bold">Modify the Root Tree</emphasis>
            </para>
            <para>The unpacked image tree is now finished to be converted into the final
                            image in the <emphasis>create step</emphasis>. It is possible to make manual modifications
                            to the unpacked tree before it is converted into the final image.</para>
            <para>Since the unpacked image tree is just a directory, it can be modified
                            using the standard tools. Optionally, it is also possible to “change
                            root (<command>chroot</command>)” into it, for instance to invoke the package
                            manager. Beside the standard file system layout, the unpacked image tree
                            contains an additional directory named <literal>/image</literal> that is not
                            present in a regular system. It contains information KIWI NG requires
                            during the create step, including a copy of the <literal>config.xml</literal> file.</para>
            <para>By default, KIWI NG will not stop after the <emphasis>prepare step</emphasis> and will
                            directly proceed with the <emphasis>create step</emphasis>. Therfore to perform manual
                            modifications, proceed as follows:</para>
            <screen language="shell-session">$ kiwi-ng system prepare $ARGS
$ # make your changes
$ kiwi-ng system create $ARGS</screen>
            <warning>
              <para>Modifications of the unpacked root tree</para>
              <para>Do not make any changes to the system, since they are lost when
                                re-running the <literal>prepare</literal> step again. Additionally, you may
                                introduce errors that occur during the <literal>create</literal> step which are
                                difficult to track. The recommended way to apply changes to the
                                unpacked image directory is to change the configuration and re-run
                                the <literal>prepare</literal> step.</para>
            </warning>
          </step>
        </procedure>
      </section>
      <section xml:id="create-step">
        <title>The Create Step</title>
        <para>KIWI NG creates the final image during the <emphasis>create step</emphasis>: it converts the
                    unpacked root tree into one or multiple output files appropriate for the
                    respective build type.</para>
        <para>It is possible to create multiple images from the same unpacked
                    root tree, for example, a self installing OEM
                    image and a virtual machine image from the same image description. The only
                    prerequisite is that both image types are specified in <literal>config.xml</literal>.</para>
        <para>During the <emphasis>create step</emphasis> the following operations are performed by KIWI NG:</para>
        <procedure>
          <step>
            <para>
              <emphasis role="bold">Execute the User-defined Script</emphasis>
              <literal>images.sh</literal>
            </para>
            <para>At the beginning of the image creation process the script named
                            <literal>images.sh</literal> is executed (if present). For more details about
                            custom scripts see <xref linkend="working-with-kiwi-user-defined-scripts"/></para>
          </step>
          <step>
            <para>
              <emphasis role="bold">Create the Requested Image Type</emphasis>
            </para>
            <para>KIWI NG converts the unpacked root into an output format appropriate for
                            the requested build type.</para>
          </step>
        </procedure>
      </section>
    </section>
  </chapter>
  <chapter xml:id="image-description" xml:base="image_description">
    <title>Image Description</title>
    <note>
      <para>This document explains the toplevel structure of the
                KIWI NG image description document for version 9.23.11</para>
    </note>
    <section xml:id="image-description-elements" xml:base="image_description/elements">
      <title>Image Description Elements</title>
      <note>
        <para>This document provides a reference for the elements
                and attributes of the KIWI NG XML document in version 9.23.11</para>
      </note>
      <section xml:id="sec-image">
        <title>&lt;image&gt;</title>
        <para>The toplevel of any KIWI NG image description</para>
        <screen language="xml">&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
    &lt;!-- descendants --&gt;
&lt;/image&gt;</screen>
        <para>The image definition starts with an image tag and requires the schema
                format at version 7.2. The attribute name specifies the name
                of the image which is also used for the filenames created by KIWI. Because
                we don’t want spaces in filenames the name attribute must not have any
                spaces in its name.</para>
        <para>The following optional attributes can be inserted in the image tag:</para>
        <variablelist>
          <varlistentry>
            <term>displayname</term>
            <listitem>
              <para>Allows setup of the boot menu title for the selected boot loader. So
                            you can have <emphasis>suse-SLED-foo</emphasis> as the image name but a different name
                            as the boot display name. Spaces are not allowed in the display name
                            because it causes problems for some boot loaders and kiwi did not
                            take the effort to separate the ones which can display them correctly
                            from the ones which can’t</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>id</term>
            <listitem>
              <para>sets an identification number which appears as file <literal>/etc/ImageID</literal>
                            within the image.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="sec-description">
        <title>&lt;description&gt;</title>
        <para>Provide an image identity.</para>
        <screen language="xml">&lt;description type="system"&gt;
  &lt;author&gt;name&lt;/author&gt;
  &lt;contact&gt;contact&lt;/contact&gt;
  &lt;specification&gt;text&lt;/specification&gt;
&lt;/description&gt;</screen>
        <para>The mandatory description section contains information about the creator
                of this image description. The attribute type could be either of the
                value <literal>system</literal> which indicates this is a system image description or at
                value <literal>boot</literal> for custom kiwi boot image descriptions.</para>
        <para>The following optional sub sections can be inserted below the description tag:</para>
        <variablelist>
          <varlistentry>
            <term>license</term>
            <listitem>
              <para>Specifies the license name which applies to this image description.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="sec-preferences">
        <title>&lt;preferences&gt;</title>
        <para>Setup image type and layout.</para>
        <screen language="xml">&lt;preferences arch="arch"&gt;
  &lt;version&gt;1.2.3&lt;/version&gt;
  &lt;packagemanager name="zypper"/&gt;
  &lt;type image="tbz"/&gt;
&lt;/preferences&gt;</screen>
        <para>The mandatory preferences section contains information about the
                supported image type(s), the used package manager, the version of this
                image, and further optional elements. The preferences section can
                be configured to apply only for a certain architecture. In this
                case specify the <literal>arch</literal> attribute with a value as it is reported
                by <command>uname -m</command></para>
        <section xml:id="preferences-version">
          <title>&lt;preferences&gt;&lt;version&gt;</title>
          <para>The mandatory image version must be a three-part version number of the
                    format: <emphasis role="bold">Major</emphasis>.<emphasis role="bold">Minor</emphasis>.<emphasis role="bold">Release</emphasis>. In case of changes to
                    the image description the following rules should apply:</para>
          <itemizedlist>
            <listitem>
              <para>For smaller image modifications that do not add or remove any new
                            packages, only the release number is incremented. The XML description
                            file(<literal>config.xml</literal>) remains unchanged.</para>
            </listitem>
            <listitem>
              <para>For image changes that involve the addition or removal of packages
                            the minor number is incremented and the release number is reset.</para>
            </listitem>
            <listitem>
              <para>For image changes that changes the behavior or geometry of the
                            image file the major number is incremented.</para>
            </listitem>
          </itemizedlist>
        </section>
        <section xml:id="preferences-packagemanager">
          <title>&lt;preferences&gt;&lt;packagemanager&gt;</title>
          <para>The mandatory packagemanager element specifies which package manager
                    should be used to handle software packages. The packagemanager setup
                    is connected to the distribution used to build the image. The following
                    table shows which package manager is connected to which distributor:</para>
          <informaltable>
            <tgroup cols="2">
              <colspec colname="c0" colwidth="14"/>
              <colspec colname="c1" colwidth="17"/>
              <thead>
                <row>
                  <entry>
                    <para>Distributor</para>
                  </entry>
                  <entry>
                    <para>Package Manager</para>
                  </entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    <para>SUSE</para>
                  </entry>
                  <entry>
                    <para>zypper</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>RedHat</para>
                  </entry>
                  <entry>
                    <para>dnf</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Debian Based</para>
                  </entry>
                  <entry>
                    <para>apt-get</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>Arch Linux</para>
                  </entry>
                  <entry>
                    <para>pacman</para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
          <para>In general the specification of one preferences section is sufficient.
                    However, it’s possible to specify multiple preferences sections and
                    distinguish between the sections via the profiles attribute.</para>
          <para>In combination with the above the preferences element supports the
                    following optional elements:</para>
        </section>
        <section xml:id="preferences-rpm-locale-filtering">
          <title>&lt;preferences&gt;&lt;rpm-locale-filtering&gt;</title>
          <para>locale-filtering can be set to “true” or “false”. If set to “true” it
                    sets the install_lang macro for RPM based installations to the RPM
                    configured locale list. This results in language specific files to
                    become filtered out by <literal>rpm</literal> if they don’t match the configured list.</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;rpm-locale-filtering&gt;true&lt;/rpm-locale-filtering&gt;
&lt;/preferences&gt;</screen>
          <note>
            <para>It depends on the individual package design if the install_lang
                        macro contents apply to the package or not.</para>
          </note>
        </section>
        <section xml:id="preferences-rpm-check-signatures">
          <title>&lt;preferences&gt;&lt;rpm-check-signatures&gt;</title>
          <para>Specifies whether package signatures should be checked or not</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;rpm-check-signatures&gt;true&lt;/rpm-check-signatures&gt;
&lt;/preferences&gt;</screen>
        </section>
        <section xml:id="preferences-rpm-excludedocs">
          <title>&lt;preferences&gt;&lt;rpm-excludedocs&gt;</title>
          <para>Specifies whether files marked as documentation should be skipped
                    during installation</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;rpm-excludedocs&gt;true&lt;/rpm-excludedocs&gt;
&lt;/preferences&gt;</screen>
        </section>
        <section xml:id="preferences-keytable">
          <title>&lt;preferences&gt;&lt;keytable&gt;</title>
          <para>Specifies the name of the console keymap to use. The value
                    corresponds to a map file in <literal>/usr/share/kbd/keymaps/xkb</literal>.</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;keytable&gt;us&lt;/keytable&gt;
&lt;/preferences&gt;</screen>
        </section>
        <section xml:id="preferences-timezone">
          <title>&lt;preferences&gt;&lt;timezone&gt;</title>
          <para>Specifies the time zone. Available time zones are located in the
                    <literal>/usr/share/zoneinfo</literal> directory. Specify the attribute value
                    relative to <literal>/usr/share/zoneinfo</literal>. For example, specify
                    Europe/Berlin for <literal>/usr/share/zoneinfo/Europe/Berlin</literal>.</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;keytable&gt;Europe/Berlin&lt;/keytable&gt;
&lt;/preferences&gt;</screen>
        </section>
        <section xml:id="preferences-locale">
          <title>&lt;preferences&gt;&lt;locale&gt;</title>
          <para>Specifies the name of the UTF-8 locale to use, which defines the
                    contents of the RC_LANG system environment variable used in the
                    image and to run the custom scripts specified as part of the
                    KIWI NG image description. Please note only UTF-8 locales are
                    supported here which also means that the encoding must <emphasis>not</emphasis> be part
                    of the locale information. This means you need to specify the
                    locale using the 4-digit name like the following example: en_US or
                    en_US,de_DE</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;locale&gt;en_US&lt;/locale&gt;
&lt;/preferences&gt;</screen>
        </section>
        <section xml:id="preferences-bootsplash-theme">
          <title>&lt;preferences&gt;&lt;bootsplash-theme&gt;</title>
          <para>Specifies the name of the plymouth bootsplash theme to use</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;bootsplash-theme&gt;bgrt&lt;/bootsplash-theme&gt;
&lt;/preferences&gt;</screen>
        </section>
        <section xml:id="preferences-bootloader-theme">
          <title>&lt;preferences&gt;&lt;bootloader-theme&gt;</title>
          <para>Specifies the name of the bootloader theme to use if that used
                    bootloader has theme support.</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;bootloader-theme&gt;openSUSE&lt;/bootloader-theme&gt;
&lt;/preferences&gt;</screen>
          <para>Along with the version and the packagemanager at least one image type
                    element must be specified to indicate which image type should be build.</para>
        </section>
        <section xml:id="preferences-type">
          <title>&lt;preferences&gt;&lt;type&gt;</title>
          <para>At least one type element must be configured. It is possible to
                    specify multiple type elements in a preferences block. To set a given
                    type description as the default image use the boolean attribute primary
                    and set its value to true:</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;type image="typename" primary="true"/&gt;
&lt;/preferences&gt;</screen>
          <para>The image type to be created is determined by the value of the image
                    attribute. The following list describes the supported types and
                    possible values of the image attribute:</para>
          <variablelist>
            <varlistentry>
              <term>image=”tbz”</term>
              <listitem>
                <para>A simple tar archive image. The tbz type packs the contents of
                                the image root tree into a xz compressed tarball.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>image=”btrfs|ext2|ext3|ext4|squashfs|xfs”</term>
              <listitem>
                <para>A filesystem image. The image root tree data is packed into a
                                filesystem image of the given type. An image of that type can
                                be loop mounted and accessed according to the capabiities of
                                the selected filesystem.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>image=”iso”</term>
              <listitem>
                <para>An iso image which can be dumped on a CD/DVD or USB stick
                                and boots off from this media without interfering with other
                                system storage components. A useful pocket system for testing
                                and demo and debugging purposes.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>image=”oem”</term>
              <listitem>
                <para>An image representing an expandable system disk. This means after
                                deployment the system can resize itself to the new disk geometry.
                                The resize operation is configurable as part of the image description
                                and an installation image for CD/DVD, USB stick and Network deployment
                                can be created in addition. For use in cloud frameworks like
                                Amazon EC2, Google Compute Engine or Microsoft Azure this disk
                                type also supports the common virtual disk formats.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>image=”docker”</term>
              <listitem>
                <para>An archive image suitable for the docker container engine.
                                The image can be loaded via the <literal>docker load</literal> command and
                                works within the scope of the container engine</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>image=”oci”</term>
              <listitem>
                <para>An archive image that builds a container matching the OCI
                                (Open Container Interface) standard. The container should be
                                able to run with any oci compliant container engine.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>image=”appx”</term>
              <listitem>
                <para>An archive image suitable for the Windows Subsystem For Linux
                                container engine. The image can be loaded From a Windows System
                                that has support for WSL activated.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>image=”kis”</term>
              <listitem>
                <para>An optional root filesystem image associated with a kernel and initrd.
                                The use case for this component image type is highly customizable.
                                Many different deployment strategies are possible.</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>For completion of a type description, there could be several other
                    optional attributes and child elements. The  element supports a
                    plethora of optional attributes, some of these are only relevant for
                    certain build types and will be covered in extra chapters that describes
                    the individual image types more detailed. Certain attributes are however
                    useful for nearly all build types and will be covered next:</para>
          <variablelist>
            <varlistentry>
              <term>bootpartition=”true|false”:</term>
              <listitem>
                <para>Boolean parameter notifying KIWI NG whether an extra boot
                                partition should be used or not (the default depends on the current
                                layout). This will override KIWI NG’s default layout.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>bootpartsize=”nonNegativeInteger”:</term>
              <listitem>
                <para>For images with a separate boot partition this attribute
                                specifies the size in MB. If not set the boot partition
                                size is set to 200 MB</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>efipartsize=”nonNegativeInteger”:</term>
              <listitem>
                <para>For images with an EFI fat partition this attribute
                                specifies the size in MB. If not set the EFI partition
                                size is set to 20 MB</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>efiparttable=”msdos|gpt”:</term>
              <listitem>
                <para>For images with an EFI firmware specifies the partition
                                table type to use. If not set defaults to the GPT partition
                                table type</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>btrfs_quota_groups=”true|false”:</term>
              <listitem>
                <para>Boolean parameter to activate filesystem quotas if
                                the filesystem is <literal>btrfs</literal>. By default quotas are inactive.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>btrfs_root_is_snapshot=”true|false”:</term>
              <listitem>
                <para>Boolean parameter that tells KIWI NG to install
                                the system into a btrfs snapshot. The snapshot layout is compatible with
                                snapper. By default snapshots are turned off.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>btrfs_root_is_readonly_snapshot=”true|false”:</term>
              <listitem>
                <para>Boolean parameter notifying KIWI NG that
                                the btrfs root filesystem snapshot has to made read-only. if this option
                                is set to true, the root filesystem snapshot it will be turned into
                                read-only mode, once all data has been placed to it. The option is only
                                effective if <literal>btrfs_root_is_snapshot</literal> is also set to true. By default the
                                root filesystem snapshot is writable.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>compressed=”true|false”:</term>
              <listitem>
                <para>Specifies whether the image output file should be
                                compressed or not. This option is only used for filesystem only images or
                                for the <literal>pxe</literal> or <literal>cpio</literal> types.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>editbootconfig=”file_path”:</term>
              <listitem>
                <para>Specifies the path to a script which is called right
                                before the bootloader is installed. The script runs relative to the
                                directory which contains the image structure.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>editbootinstall=”file_path”:</term>
              <listitem>
                <para>Specifies the path to a script which is called right
                                after the bootloader is installed. The script runs relative to the
                                directory which contains the image structure.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>filesystem=”btrfs|ext2|ext3|ext4|squashfs|xfs”:</term>
              <listitem>
                <para>The root filesystem</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>firmware=”efi|uefi”:</term>
              <listitem>
                <para>Specifies the boot firmware of the appliance, supported
                                options are: <literal>bios</literal>, <literal>ec2</literal>, <literal>efi</literal>, <literal>uefi</literal>, <literal>ofw</literal> and <literal>opal</literal>.
                                This attribute is used to differentiate the image according to the
                                firmware which boots up the system. It mostly impacts the disk
                                layout and the partition table type. By default <literal>bios</literal> is used on x86,
                                <literal>ofw</literal> on PowerPC and <literal>efi</literal> on ARM.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>force_mbr=”true|false”:</term>
              <listitem>
                <para>Boolean parameter to force the usage of a MBR partition
                                table even if the system would default to GPT. This is occasionally
                                required on ARM systems that use a EFI partition layout but which must
                                not be stored in a GPT. Note that forcing a MBR partition table incurs
                                limitations with respect to the number of available partitions and their
                                sizes.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>fsmountoptions=”option_string”:</term>
              <listitem>
                <para>Specifies the filesystem mount options which are passed
                                via the <literal>-o</literal> flag to <command>mount</command> and are included in
                                <literal>/etc/fstab</literal>.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>fscreateoptions=”option_string”:</term>
              <listitem>
                <para>Specifies the filesystem options used to create the
                                filesystem. In KIWI NG the filesystem utility to create a filesystem is
                                called without any custom options. The default options are filesystem
                                specific and are provided along with the package that provides the
                                filesystem utility. For the Linux <literal>ext[234]</literal> filesystem, the default
                                options can be found in the <literal>/etc/mke2fs.conf</literal> file. Other
                                filesystems provides this differently and documents information
                                about options and their defaults in the respective manual page, e.g
                                <command>man mke2fs</command>. With the <literal>fscreateoptions</literal> attribute it’s possible
                                to directly influence how the filesystem will be created. The options
                                provided as a string are passed to the command that creates the
                                filesystem without any further validation by KIWI NG. For example, to turn
                                off the journal on creation of an ext4 filesystem the following option
                                would be required:</para>
                <screen language="xml">&lt;preferences&gt;
  &lt;type fscreateoptions="-O ^has_journal"/&gt;
&lt;/preferences&gt;</screen>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>kernelcmdline=”string”:</term>
              <listitem>
                <para>Additional kernel parameters passed to the kernel by the
                                bootloader.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>luks=”passphrase”:</term>
              <listitem>
                <para>Supplying a value will trigger the encryption of the partitions
                                using the LUKS extension and using the provided string as the
                                password. Note that the password must be entered when booting the
                                appliance!</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>target_blocksize=”number”:</term>
              <listitem>
                <para>Specifies the image blocksize in bytes which has to
                                match the logical blocksize of the target storage device. By default 512
                                Bytes is used, which works on many disks. You can obtain the blocksize
                                from the <literal>SSZ</literal> column in the output of the following command:</para>
                <screen language="shell-session">blockdev --report $DEVICE</screen>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>target_removable=”true|false”:</term>
              <listitem>
                <para>Indicate if the target disk for oem images is deployed
                                to a removable device e.g a USB stick or not. This only
                                affects the EFI setup if requested and in the end avoids
                                the creation of a custom boot menu entry in the firmware
                                of the target machine. By default the target disk is
                                expected to be non-removable</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>spare_part=”number”:</term>
              <listitem>
                <para>Request a spare partition right before the root partition
                                of the requested size. The attribute takes a size value
                                and allows a unit in MB or GB, e.g 200M. If no unit is given
                                the value is considered to be mbytes. A spare partition
                                can only be configured for the disk image type oem</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>spare_part_mountpoint=”dir_path”:</term>
              <listitem>
                <para>Specify mount point for spare partition in the system.
                                Can only be configured for the disk image type oem</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>spare_part_fs=”btrfs|ext2|ext3|ext4|xfs”:</term>
              <listitem>
                <para>Specify filesystem for spare partition in the system.
                                Can only be configured for the disk image type oem</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>spare_part_fs_attributes=”attribute_list”:</term>
              <listitem>
                <para>Specify filesystem attributes for the spare partition.
                                Attributes can be specified as comma separated list.
                                Currently the attributes <literal>no-copy-on-write</literal> and <literal>synchronous-updates</literal>
                                are available. Can only be configured for the disk image
                                type oem</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>spare_part_is_last=”true|false”:</term>
              <listitem>
                <para>Specify if the spare partition should be the last one in
                                the partition table. Can only be configured for the <literal>oem</literal>
                                type with oem-resize switched off. By default the root
                                partition is the last one and the spare partition lives
                                before it. With this attribute that setup can be toggled.
                                However, if the root partition is no longer the last one
                                the oem repart/resize code can no longer work because
                                the spare part would block it. Because of that moving
                                the spare part at the end of the disk is only applied
                                if oem-resize is switched off. There is a runtime
                                check in the KIWI NG code to check this condition</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>devicepersistency=”by-uuid|by-label|by-path”:</term>
              <listitem>
                <para>Specifies which method to use for persistent device names.
                                This will affect all files written by kiwi that includes
                                device references for example <literal>etc/fstab</literal> or the <literal>root=</literal>
                                parameter in the kernel commandline. By default by-uuid
                                is used</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>squashfscompression=”uncompressed|gzip|lzo|lz4|xz|zstd”:</term>
              <listitem>
                <para>Specifies the compression type for mksquashfs</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>overlayroot=”true|false”</term>
              <listitem>
                <para>For the <literal>oem</literal> type only, specifies to use an <literal>overlayfs</literal> based root
                                filesystem consisting out of a squashfs compressed read-only root
                                filesystem combined with a write-partition or tmpfs.
                                The optional kernel boot parameter <literal>rd.root.overlay.readonly</literal> can
                                be used to point the write area into a <literal>tmpfs</literal> instead of
                                the existing persistent write-partition. In this mode all
                                written data is temporary until reboot of the system. The kernel
                                boot parameter <literal>rd.root.overlay.size</literal> can be used to configure
                                the size for the <literal>tmpfs</literal> that is used for the <literal>overlayfs</literal> mount
                                process if <literal>rd.root.overlay.readonly</literal> is requested. That size
                                basically configures the amount of space available for writing
                                new data during the runtime of the system. The default value
                                is set to <literal>50%</literal> which means one half of the available RAM space can
                                be used for writing new data. By default the persistent
                                write-partition is used. The size of that partition can be
                                influenced via the optional <literal>&lt;size&gt;</literal> element in the <literal>&lt;type&gt;</literal>
                                section or via the optional <literal>&lt;oem-resize&gt;</literal> element in the
                                <literal>&lt;oemconfig&gt;</literal> section of the XML description. Setting a fixed
                                <literal>&lt;size&gt;</literal> value will set the size of the image disk to that
                                value and results in an image file of that size. The available
                                space for the write partition is that size reduced by the
                                size the squashfs read-only system needs. If the <literal>&lt;oem-resize&gt;</literal>
                                element is set to <literal>true</literal> an eventually given <literal>&lt;size&gt;</literal> element
                                will not have any effect because the write partition will be
                                resized on first boot to the available disk space.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>bootfilesystem=”ext2|ext3|ext4|fat32|fat16”:</term>
              <listitem>
                <para>If an extra boot partition is required this attribute
                                specify which filesystem should be used for it. The
                                type of the selected bootloader might overwrite this
                                setting if there is no alternative possible though.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>flags=”overlay|dmsquash”</term>
              <listitem>
                <para>For the iso image type specifies the live iso technology and
                                dracut module to use. If set to overlay the kiwi-live dracut
                                module will be used to support a live iso system based on
                                squashfs+overlayfs. If set to dmsquash the dracut standard
                                dmsquash-live module will be used to support a live iso
                                system based on the capabilities of the upstream dracut
                                module.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>format=”gce|ova|qcow2|vagrant|vmdk|vdi|vhd|vhdx|vhd-fixed”:</term>
              <listitem>
                <para>For disk image type oem, specifies the format of
                                the virtual disk such that it can run on the desired target
                                virtualization platform.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>formatoptions=”string”:</term>
              <listitem>
                <para>Specifies additional format options passed on to qemu-img
                                formatoptions is a comma separated list of format specific
                                options in a name=value format like qemu-img expects it.
                                kiwi will take the information and pass it as parameter to
                                the -o option in the qemu-img call</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>fsmountoptions=”string”:</term>
              <listitem>
                <para>Specifies the filesystem mount options which also ends up in fstab
                                The string given here is passed as value to the -o option of mount</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>fscreateoptions=”string”:</term>
              <listitem>
                <para>Specifies options to use at creation time of the filesystem</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>force_mbr=”true|false”:</term>
              <listitem>
                <para>Force use of MBR (msdos table) partition table even if the
                                use of the GPT would be the natural choice. On e.g some
                                arm systems an EFI partition layout is required but must
                                not be stored in a GPT. For those rare cases this attribute
                                allows to force the use of the msdos table including all
                                its restrictions in max partition size and amount of
                                partitions</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>gpt_hybrid_mbr=”true|false”:</term>
              <listitem>
                <para>For GPT disk types only: Create a hybrid GPT/MBR partition table</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>hybridpersistent=”true|false”:</term>
              <listitem>
                <para>For the live ISO type, triggers the creation of a partition for
                                a COW file to keep data persistent over a reboot</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>hybridpersistent_filesystem=”ext4|xfs”:</term>
              <listitem>
                <para>For the live ISO type, set the filesystem to use for persistent
                                writing if a hybrid image is used as disk on e.g a USB Stick.
                                By default the ext4 filesystem is used.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>initrd_system=”kiwi|dracut”:</term>
              <listitem>
                <para>Specify which initrd builder to use, default is set to <literal>dracut</literal></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>metadata_path=”dir_path”:</term>
              <listitem>
                <para>Specifies a path to additional metadata required for the selected
                                image type or its tools used to create that image type.</para>
                <note>
                  <para>Currently this is only effective for the appx container image type.</para>
                </note>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>installboot=”failsafe-install|harddisk|install”:</term>
              <listitem>
                <para>Specifies the bootloader default boot entry for the initial
                                boot of a KIWI NG install image.</para>
                <note>
                  <para>This value is only evaluated for grub</para>
                </note>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>install_continue_on_timeout=”true|false”:</term>
              <listitem>
                <para>Specifies the boot timeout handling for the KIWI NG
                                install image. If set to “true” the configured timeout
                                or its default value applies. If set to “false” no
                                timeout applies in the boot menu of the install image.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>installprovidefailsafe=”true|false”:</term>
              <listitem>
                <para>Specifies if the bootloader menu should provide an
                                failsafe entry with special kernel parameters or not</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>installiso=”true|false”</term>
              <listitem>
                <para>Specifies if an install iso image should be created.
                                This attribute is only available for the <literal>oem</literal> type.
                                The generated ISO image is an hybrid ISO which can be
                                used as disk on e.g a USB stick or as ISO.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>installpxe=”true|false”:</term>
              <listitem>
                <para>Specifies if a tarball that contains all data for a pxe network
                                installation should be created. This attribute is only available
                                for the <literal>oem</literal> type.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>mediacheck=”true|false”:</term>
              <listitem>
                <para>For ISO images, specifies if the bootloader menu should provide an
                                mediacheck entry to verify ISO integrity or not. Disabled by default
                                and only available for the x86 arch family.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>mdraid=”mirroring|striping”:</term>
              <listitem>
                <para>Setup software raid in degraded mode with one disk
                                Thus only mirroring and striping is possible</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>primary=”true|false”:</term>
              <listitem>
                <para>Specifies this type to be the primary type. If no type option
                                is given on the commandline, KIWI NG will build this type</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>ramonly=”true|false”:</term>
              <listitem>
                <para>For all images that are configured to use the overlay filesystem
                                this setting forces any COW(Copy-On-Write) action to happen in RAM.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>rootfs_label=”string”:</term>
              <listitem>
                <para>Label name to set for the root filesystem. By default <literal>ROOT</literal> is used</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>volid=”string”:</term>
              <listitem>
                <para>For the ISO type only, specifies the volume ID (volume name or label)
                                to be written into the master block. There is space for 32 characters.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>vhdfixedtag=”GUID_string”:</term>
              <listitem>
                <para>For the VHD disk format, specifies the GUID</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>derived_from=”string”:</term>
              <listitem>
                <para>For container images, specifies the image URI of the container image.
                                The image created by KIWI NG will use the specified container as the
                                base root to work on.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>publisher=”string”:</term>
              <listitem>
                <para>For ISO images, specifies the publisher name of the ISO.</para>
              </listitem>
            </varlistentry>
          </variablelist>
          <para>The following sections shows the supported child elements of the 
                    element including references to their usage in a detailed type setup:</para>
        </section>
        <section xml:id="preferences-type-bootloader">
          <title>&lt;preferences&gt;&lt;type&gt;&lt;bootloader&gt;</title>
          <para>Used to describe the bootloader setup in the oem disk image type.
                    For details see: <xref linkend="disk-bootloader"/></para>
        </section>
        <section xml:id="preferences-type-containerconfig">
          <title>&lt;preferences&gt;&lt;type&gt;&lt;containerconfig&gt;</title>
          <para>Used to describe the container configuration metadata in docker or wsl
                    image types. For details see: <xref linkend="building-docker-build"/> and:
                    <xref linkend="building-wsl-build"/></para>
        </section>
        <section xml:id="preferences-type-vagrantconfig">
          <title>&lt;preferences&gt;&lt;type&gt;&lt;vagrantconfig&gt;</title>
          <para>Used to describe vagrant configuration metadata in a disk image
                    that is being used as a vagrant box. For details see: <xref linkend="setup-vagrant"/></para>
        </section>
        <section xml:id="preferences-type-systemdisk">
          <title>&lt;preferences&gt;&lt;type&gt;&lt;systemdisk&gt;</title>
          <para>Used to describe the geometry, partitions and volumes, in a
                    disk image. For details see: <xref linkend="custom-volumes"/></para>
        </section>
        <section xml:id="preferences-type-oemconfig">
          <title>&lt;preferences&gt;&lt;type&gt;&lt;oemconfig&gt;</title>
          <para>Used to customize the deployment process in an oem disk image.
                    For details see: <xref linkend="oem-customize"/></para>
        </section>
        <section xml:id="preferences-type-size">
          <title>&lt;preferences&gt;&lt;type&gt;&lt;size&gt;</title>
          <para>Used to customize the size of the resulting disk image in an
                    oem image. For details see: <xref linkend="disk-the-size-element"/></para>
        </section>
        <section xml:id="preferences-type-machine">
          <title>&lt;preferences&gt;&lt;type&gt;&lt;machine&gt;</title>
          <para>Used to customize the virtual machine configuration which describes
                    the components of an emulated hardware.
                    For details see: <xref linkend="disk-the-machine-element"/></para>
        </section>
        <section xml:id="preferences-type-installmedia">
          <title>&lt;preferences&gt;&lt;type&gt;&lt;installmedia&gt;</title>
          <para>Used to customize the installation media images created for oem images
                    deployment.
                    For details see: <xref linkend="installmedia-customize"/></para>
        </section>
      </section>
      <section xml:id="sec-repository">
        <title>&lt;repository&gt;</title>
        <para>Setup software sources for the image.</para>
        <screen language="xml">&lt;repository&gt;
  &lt;source path="uri"/&gt;
&lt;/repository&gt;</screen>
        <para>The mandatory repository element specifies the location and type of a
                repository to be used by the package manager as a package installation
                source. KIWI NG supports apt, dnf, pacman and zypper as package managers,
                specified with the packagemanager element. The repository element has
                the following optional attributes:</para>
        <variablelist>
          <varlistentry>
            <term>alias=”name”</term>
            <listitem>
              <para>Specifies an alternative name for the configured repository. If the
                            attribute is not specified KIWI NG will generate a random alias name
                            for the repository.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>components=”name”</term>
            <listitem>
              <para>Used for Debian (apt) based repositories only. Specifies the
                            component name that should be used from the repository. By default
                            the <literal>main</literal> component is used</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>distribution=”name”</term>
            <listitem>
              <para>Used for Debian (apt) based repositories only. Specifies the
                            distribution name to be used on call of <literal>debootstrap</literal></para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>imageonly=”true|false”</term>
            <listitem>
              <para>Specifies whether or not this repository should be configured in
                            the resulting image without using it at build time. By default
                            the value is set to false</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>repository_gpgcheck=”true|false”</term>
            <listitem>
              <para>Specifies whether or not this specific repository is configured to
                            to run repository signature validation. If not set, no value is
                            appended into the repository configuration file. If set the
                            relevant key information needs to be provided on the KIWI NG
                            commandline using the <literal>--signing-key</literal> option</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>imageinclude=”true|false”</term>
            <listitem>
              <para>Specifies whether the given repository should be configured as a
                            repository in the image or not. The default behavior is that
                            repositories used to build an image are not configured as a
                            repository inside the image. This feature allows you to change the
                            behavior by setting the value to true.</para>
              <note>
                <para>Scope of repository uri’s</para>
                <para>The repository is configured in the image according to the source
                                path as specified with the path attribute of the source element.
                                Therefore, if the path is not a fully qualified URL, you may need
                                to adjust the repository file in the image to accommodate the
                                expected location. It is recommended that you use the alias
                                attribute in combination with the imageinclude attribute to
                                avoid having unpredictable random names assigned to the
                                repository you wish to include in the image.</para>
              </note>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>password=”string”</term>
            <listitem>
              <para>Specifies a password for the given repository. The password attribute
                            must be used in combination with the username attribute. Dependent on
                            the repository location this information may not be used.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>username=”name”</term>
            <listitem>
              <para>Specifies a user name for the given repository. The username
                            attribute must be used in combination with the password attribute.
                            Dependent on the repository location this information may not be
                            used.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>prefer-license=”true|false”</term>
            <listitem>
              <para>The repository providing this attribute will be used primarily to
                            install the license tarball if found on that repository. If no
                            repository with a preferred license attribute exists, the search
                            happens over all repositories. It’s not guaranteed in that case that
                            the search order follows the repository order like they are written
                            into the XML description.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>priority=”number”</term>
            <listitem>
              <para>Specifies the repository priority for this given repository. Priority
                            values are treated differently by different package managers.
                            Repository priorities allow the package management system to
                            disambiguate packages that may be contained in more than one of the
                            configured repositories. The zypper package manager for example
                            prefers packages from a repository with a <emphasis>lower</emphasis> priority over
                            packages from a repository with higher priority values.
                            The value 99 means “no priority is set”. For other package managers
                            please refer to the individual documentation about repository priorities.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>sourcetype=”baseurl|metalink|mirrorlist”</term>
            <listitem>
              <para>Specifies the source type of the repository path. Depending on if the
                            source path is a simple url or a pointer to a metadata file or mirror
                            list, the configured package manager needs to be setup appropriately.
                            By default the source is expected to be a simple repository baseurl.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>use_for_bootstrap=”true|false”</term>
            <listitem>
              <para>Used for Debian (apt) based repositories only. It specifies whether
                            this repository should be the one used for bootstrapping or not.
                            It is set to ‘false’ by default. Only a single repository is allowed
                            to be used for bootstrapping, if no repository is set for the bootstrap
                            the last one in the description XML is used.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <section xml:id="repository-source">
          <title>&lt;repository&gt;&lt;source&gt;</title>
          <para>The location of a repository is specified by the path attribute of the
                    mandatory source child element:</para>
          <screen language="xml">&lt;repository alias="kiwi"&gt;
  &lt;source path="obs://Virtualization:Appliances:Builder/openSUSE_Leap_15.1"/&gt;
&lt;/repository&gt;</screen>
          <para>The location specification may include
                    the <literal>%arch</literal> macro which will expand to the architecture of the image
                    building host. The value for the path attribute may begin with any of
                    the following location indicators:</para>
          <itemizedlist>
            <listitem>
              <para><literal>dir:///local/path</literal>
                            An absolute path to a directory accessible through the local file system.</para>
            </listitem>
            <listitem>
              <para><literal>ftp://&lt;ftp://&gt;</literal>
                            A ftp protocol based network location.</para>
            </listitem>
            <listitem>
              <para><literal>http://&lt;http://&gt;</literal>
                            A http protocol based network location.</para>
            </listitem>
            <listitem>
              <para><literal>https://&lt;https://&gt;</literal>
                            A https protocol based network location.</para>
              <note>
                <para>https repositories</para>
                <para>When specifying a https location for a repository it is generally
                                necessary to include the openssl certificates and a cracklib word
                                dictionary as package entries in the bootstrap section of the
                                image configuration. The names of the packages to include are
                                individual to the used distribution. On SUSE systems as one example
                                this would be <literal>openssl-certs</literal> and <literal>cracklib-dict-full</literal></para>
              </note>
            </listitem>
            <listitem>
              <para><literal>iso://&lt;iso://&gt;</literal>
                            An absolute path to an .iso file accessible via the local file
                            system. KIWI NG will loop mount the the .iso file to a temporary
                            directory with a generated name. The generated path is provided to
                            the specified package manager as a directory based repository location.</para>
            </listitem>
            <listitem>
              <para><literal>obs://Open:Build:Service:Project:Name</literal>
                            A reference to a project in the Open Build Service (OBS). KIWI NG
                            translates the given project path into a remote url at which
                            the given project hosts the packages.</para>
            </listitem>
            <listitem>
              <para><literal>obsrepositories:/</literal>
                            A placeholder for the Open Build Service (OBS) to indicate that all
                            repositories are taken from the project configuration in OBS.</para>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section xml:id="sec-packages">
        <title>&lt;packages&gt;</title>
        <para>Setup software components to be installed in the image.</para>
        <screen language="xml">&lt;packages type="type"/&gt;</screen>
        <para>The mandatory packages element specifies the setup of a packages
                group for the given type. The value of the type attribute specifies
                at which state in the build process the packages group gets handled,
                supported values are as follows:</para>
        <variablelist>
          <varlistentry>
            <term>type=”bootstrap”</term>
            <listitem>
              <para>Bootstrap packages, list of packages to be installed first into
                            a new (empty) root tree. The packages list the required components
                            to support a chroot environment from which further software
                            components can be installed</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>type=”image”</term>
            <listitem>
              <para>Image packages, list of packages to be installed as part of a chroot
                            operation inside of the new root tree.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>type=”uninstall|delete”</term>
            <listitem>
              <para>Packages to be uninstalled or deleted. For further details
                            see <xref linkend="uninstall-system-packages"/></para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>type=”<emphasis>image_type_name</emphasis>”</term>
            <listitem>
              <para>Packages to be installed for the given image type name. For example
                            if set to type=”iso”, the packages in this group will only be
                            installed if the iso image type is build.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>The packages element must contain at least one child element of the
                following list to provide specific configuration information for the
                specified packages group:</para>
        <section xml:id="packages-package">
          <title>&lt;packages&gt;&lt;package&gt;</title>
          <screen language="xml">&lt;packages type="image"/&gt;
  &lt;package name="name" arch="arch"/&gt;
&lt;/packages&gt;</screen>
          <para>The package element installs the given package name. The optional
                    <literal>arch</literal> attribute can be used to limit the installation of the package
                    to the host architecture from which KIWI NG is called. The <literal>arch</literal>
                    attribute is also available in all of the following elements.</para>
        </section>
        <section xml:id="packages-namedcollection">
          <title>&lt;packages&gt;&lt;namedCollection&gt;</title>
          <screen language="xml">&lt;packages type="image" patternType="onlyRequired"&gt;
  &lt;namedCollection name="base"/&gt;
&lt;/packages&gt;</screen>
          <para>The namedCollection element is used to install a number of packages
                    grouped together under a name. This is a feature of the individual
                    distribution and used in the implementation of the KIWI NG package
                    manager backend. At the moment collections are only supported for
                    SUSE and RedHat based distributions. The optional <literal>patternType</literal> attribute
                    is used to control the behavior of the dependency resolution of
                    the package collection. <literal>onlyRequired</literal> installs only the collection
                    and its required packages. <literal>plusRecommended</literal> installs the collection,
                    any of its required packages and any recommended packages.</para>
          <note>
            <para>Collections on SUSE</para>
            <para>On SUSE based distributions collections are names patterns and are
                        just simple packages. To get the names of the patterns such that
                        they can be used in a namedCollection type the following command:
                        <literal>$ zypper patterns</literal>. If for some reason the collection name cannot
                        be used it is also possible to add the name of the package that
                        provides the collection as part of a <literal>package</literal> element. To get the
                        names of the pattern packages type the following command:
                        <literal>$ zypper search patterns</literal>. By convention all packages that starts
                        with the name “patterns-” are representing a pattern package.</para>
          </note>
          <note>
            <para>Collections on RedHat</para>
            <para>On RedHat based distributions collections are named groups and are
                        extra metadata. To get the names of these groups type the following
                        command: <literal>$ dnf group list</literal>. Please note that group names are allowed
                        to contain whitespace characters.</para>
          </note>
        </section>
        <section xml:id="packages-archive">
          <title>&lt;packages&gt;&lt;archive&gt;</title>
          <screen language="xml">&lt;packages type="image"/&gt;
  &lt;archive name="name"/&gt;
&lt;/packages&gt;</screen>
          <para>The archive element takes the <literal>name</literal> attribute and looks up the
                    given name as file on the system. If specified relative KIWI NG
                    looks up the name in the image description directory. The archive
                    is installed using the <literal>tar</literal> program. Thus the file name is
                    expected to be a tar archive. The compression of the archive is
                    detected automatically by the tar program.</para>
        </section>
        <section xml:id="packages-ignore">
          <title>&lt;packages&gt;&lt;ignore&gt;</title>
          <screen language="xml">&lt;packages type="image"/&gt;
  &lt;ignore name="name"/&gt;
&lt;/packages&gt;</screen>
          <para>The ignore element instructs the used package manager to ignore the
                    given package name at installation time. Please note whether or not
                    the package can be ignored is up to the package manager. Packages
                    that are hard required by other packages in the install procedure
                    cannot be ignored and the package manager will simply ignore the
                    request.</para>
        </section>
        <section xml:id="packages-product">
          <title>&lt;packages&gt;&lt;product&gt;</title>
          <screen language="xml">&lt;packages type="image"&gt;
  &lt;product name="name"/&gt;
&lt;/packages&gt;</screen>
          <para>The product element instructs the used package manager to install
                    the given product. What installation of a product means is up to
                    the package manager and also distribution specific. This feature
                    currently only works on SUSE based distributions</para>
        </section>
      </section>
      <section xml:id="sec-users">
        <title>&lt;users&gt;</title>
        <para>Setup image users.</para>
        <screen language="xml">&lt;users&gt;
  &lt;user
    name="user"
    groups="group_list"
    home="dir"
    id="number"
    password="text"
    pwdformat="encrypted|plain"
    realname="name"
    shell="path"
  /&gt;
&lt;/users&gt;</screen>
        <para>The optional users element contains the user setup KIWI NG should create
                in the system. At least one user child element must be specified as
                part of the users element. Multiple user elements may be specified.</para>
        <para>Each <literal>user</literal> element represents a specific user that is added or
                modified. The following attributes are mandatory:</para>
        <variablelist>
          <varlistentry>
            <term>name=”name”:</term>
            <listitem>
              <para>the UNIX username</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>password=”string”</term>
            <listitem>
              <para>The password for this user account. It can be provided either
                            in cleartext form or encrypted. An encrypted password can be created
                            using <literal>openssl</literal> as follows:</para>
              <screen language="default">$ openssl passwd -1 -salt xyz PASSWORD</screen>
              <para>It is also possible to specify the password as a non encrypted string
                            by using the pwdformat attribute and setting it’s value to <literal>plain</literal>.
                            KIWI NG will then encrypt the password prior to the user being added
                            to the system.</para>
              <warning>
                <para>plain text passwords</para>
                <para>We do not recommend plain passwords as they will be readable in
                                the image configuration in plain text</para>
              </warning>
              <para>All specified users and groups will be created if they do not already
                            exist. The defined users will be part of the group(s) specified
                            with the groups attribute or belong to the default group as configured
                            in the system. If specified the first entry in the groups list is used
                            as the login group.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>Additionally, the following optional attributes can be specified:</para>
        <variablelist>
          <varlistentry>
            <term>home=”path”:</term>
            <listitem>
              <para>The path to the user’s home directory</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>groups=”group_a,group_b”:</term>
            <listitem>
              <para>A comma separated list of UNIX groups. The first element of the
                            list is used as the user’s primary group. The remaining elements are
                            appended to the user’s supplementary groups. When no groups are assigned
                            then the system’s default primary group will be used.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>id=”number”:</term>
            <listitem>
              <para>The numeric user id of this account.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>pwdformat=”plain|encrypted”:</term>
            <listitem>
              <para>The format in which <literal>password</literal> is provided. The default if not
                            specified is <literal>encrypted</literal>.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="sec-profiles">
        <title>&lt;profiles&gt;</title>
        <para>Manage image namespace(s).</para>
        <screen language="xml">&lt;profiles&gt;
  &lt;profile name="name" description="text"/&gt;
&lt;/profiles&gt;</screen>
        <para>The optional profiles section lets you maintain one image description
                while allowing for variation of other sections that are included. A
                separate profile element must be specified for each variation. The
                profile child element, which has name and description attributes,
                specifies an alias name used to mark sections as belonging to a profile,
                and a short description explaining what this profile does.</para>
        <para>For example to mark a set of packages as belonging to a profile, simply
                annotate them with the profiles attribute as shown below:</para>
        <screen language="xml">&lt;packages type="image" profiles="profile_name"&gt;
  &lt;package name="name"/&gt;
&lt;/packages&gt;</screen>
        <para>It is also possible to mark sections as belonging to multiple profiles
                by separating the names in the profiles attribute with a comma:</para>
        <screen language="xml">&lt;packages type="image" profiles="profile_A,profile_B"&gt;
  &lt;package name="name"/&gt;
&lt;/packages&gt;</screen>
        <para>If a section tag does not have a profiles attribute, it is globally
                present in the configuration. If global sections and profiled sections
                contains the same sub-sections, the profiled sections will overwrite
                the global sections in the order of the provided profiles. For a better
                overview of the result configuration when profiles are used we
                recommend to put data that applies in any case to non profiled (global)
                sections and only extend those global sections with profiled data.
                For example:</para>
        <screen language="xml">&lt;preferences&gt;
  &lt;version&gt;1.2.3&lt;/version&gt;
  &lt;packagemanager name="zypper"/&gt;
&lt;/preferences&gt;

&lt;preferences profiles="oem_qcow_format"&gt;
  &lt;type image="oem" filesystem="ext4" format="qcow2"/&gt;
&lt;/preferences&gt;

&lt;preferences profiles="oem_vmdk_format"&gt;
  &lt;type image="oem" filesystem="ext4" format="vmdk"/&gt;
&lt;/preferences&gt;</screen>
        <para>The above example configures two version of the same oem type.
                One builds a disk in qcow2 format the other builds a disk in
                vmdk format. The global preferences section without a profile
                assigned will be used in any case and defines those preferences
                settings that are common to any build process. A user can
                select both profiles at a time but that will result in building
                the disk format that is specified last because one is overwriting
                the other.</para>
        <para>Use of one or more profile(s) during image generation is triggered
                by the use of the <literal>--profile</literal> command line argument. multiple profiles
                can be selected by passing this option multiple times.</para>
      </section>
    </section>
    <section xml:id="main-root">
      <title>Main Root</title>
      <screen language="xml">&lt;image/&gt;</screen>
      <para>The mandatory <xref linkend="sec-image"/> element represents the root (top-level element) of
                an image description. All other elements must be descendants of this
                element. There can be only one <literal>image</literal> element.</para>
    </section>
    <section xml:id="image-identity">
      <title>Image Identity</title>
      <screen language="xml">&lt;description/&gt;</screen>
      <para>The mandatory <xref linkend="sec-description"/> element contains information about the author,
                contact, license and the specification about the use case of this
                image. All data together forms the identity card of the image.
                There can be only one <literal>description</literal> element</para>
    </section>
    <section xml:id="image-preferences">
      <title>Image Preferences</title>
      <screen language="xml">&lt;preferences/&gt;</screen>
      <para>The mandatory <xref linkend="sec-preferences"/> element contains information to classify
                the image and to describe the layout. All data about the image type, its
                version, the partition layout and much more is specified here. There can be
                multiple <literal>preferences</literal> elements</para>
    </section>
    <section xml:id="image-software-sources">
      <title>Image Software Sources</title>
      <screen language="xml">&lt;repository/&gt;</screen>
      <para>The mandatory <xref linkend="sec-repository"/> element contains information where to find the
                software packages that are used to build the image. There can be
                multiple <literal>repository</literal> elements</para>
    </section>
    <section xml:id="image-content-setup">
      <title>Image Content Setup</title>
      <screen language="xml">&lt;packages/&gt;</screen>
      <para>The mandatory <xref linkend="sec-packages"/> element contains information to list which
                software should be installed from the configured repositories
                into the image. Software can be defined as names for packages,
                collections, archives or products. There can be multiple
                <literal>packages</literal> elements</para>
    </section>
    <section xml:id="image-users">
      <title>Image Users</title>
      <screen language="xml">&lt;users/&gt;</screen>
      <para>The optional <xref linkend="sec-users"/> element contains information about system users
                to be created inside of the image. There can be multiple <literal>users</literal>
                elements</para>
    </section>
    <section xml:id="image-namespace">
      <title>Image Namespace</title>
      <screen language="xml">&lt;profiles/&gt;</screen>
      <para>The optional <xref linkend="sec-profiles"/> element contains information to create one
                or more namespaces to an image description. The namespace can be
                used with any of the above elements and therefore tie them into
                a namespace which can be selected at call time of KIWI NG</para>
    </section>
  </chapter>
  <chapter xml:id="image-types" xml:base="image_types_and_results">
    <title>Image Types</title>
    <note>
      <para>Before building an image with KIWI NG it’s important to understand
                the different image types and their meaning. This document provides
                an overview about the supported KIWI NG image types, their results
                and some words about the environment to run the build.</para>
    </note>
    <variablelist>
      <varlistentry>
        <term>ISO Hybrid Live Image</term>
        <listitem>
          <para>An iso image which can be dumped on a CD/DVD or USB stick
                        and boots off from this media without interfering with other
                        system storage components. A useful pocket system for testing
                        and demo and debugging purposes. For further details refer
                        to <xref linkend="hybrid-iso"/></para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Virtual Disk Image</term>
        <listitem>
          <para>An image representing the system disk, useful for cloud frameworks
                        like Amazon EC2, Google Compute Engine or Microsoft Azure.
                        For further details refer to <xref linkend="simple-disk"/></para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>OEM Expandable Disk Image</term>
        <listitem>
          <para>An image representing an expandable system disk. This means after
                        deployment the system can resize itself to the new disk geometry.
                        The resize operation is configurable as part of the image description
                        and an installation image for CD/DVD, USB stick and Network deployment
                        can be created in addition. For further details refer to: <xref linkend="expandable-disk"/></para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Docker Container Image</term>
        <listitem>
          <para>An archive image suitable for the docker container engine.
                        The image can be loaded via the <literal>docker load</literal> command and
                        works within the scope of the container engine.
                        For further details refer to: <xref linkend="building-docker-build"/></para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>WSL Container Image</term>
        <listitem>
          <para>An archive image suitable for the Windows Subsystem For Linux
                        container engine. The image can be loaded From a Windows System
                        that has support for WSL activated. For further details refer
                        to: <xref linkend="building-wsl-build"/></para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>KIS Root File System Image</term>
        <listitem>
          <para>An optional root filesystem image associated with a kernel and initrd.
                        The use case for this component image type is highly customizable.
                        Many different deployment strategies are possible.
                        For further details refer to: <xref linkend="kis"/></para>
        </listitem>
      </varlistentry>
    </variablelist>
    <section xml:id="image-results">
      <title>Image Results</title>
      <para>KIWI NG execution results in an appliance image after a successful run of
                <xref linkend="kiwi-system-build"/> or <xref linkend="kiwi-system-create"/> command.
                The result is the image binary in addition a couple of metadata files that can
                be handy to describe or identify the resulting image. The output files follow
                this naming convention:</para>
      <para>
        <literal>&lt;image-name&gt;.&lt;arch&gt;-&lt;version&gt;.&lt;extension&gt;</literal>
      </para>
      <para>where <literal>&lt;image-name&gt;</literal> is the name stated in the <xref linkend="image-description"/> as an
                attribute of the <xref linkend="sec-image"/> element. The <literal>&lt;arch&gt;</literal> is the CPU
                architecture used for the build, <literal>&lt;version&gt;</literal> is the image version defined in
                <xref linkend="sec-preferences"/> element of the image description
                and the <literal>&lt;extension&gt;</literal> is dependent on the image type and its definition.</para>
      <para>Any KIWI NG appliance build results in, at least, the following output files:</para>
      <procedure>
        <step>
          <para>The image binary, <literal>&lt;image-name&gt;.&lt;arch&gt;-&lt;version&gt;.&lt;image-extension&gt;</literal>:</para>
          <para>This is the file containig the actual image binary, depending
                        on the image type and its definition it can be a virtual disk image
                        file, and ISO image, a tarball, etc.</para>
        </step>
        <step>
          <para>The <literal>&lt;image-name&gt;.&lt;arch&gt;-&lt;version&gt;.packages</literal> file:</para>
          <para>This file includes a sorted list of the packages
                        that are included into the image. In fact this is normalized dump of the
                        package manager database. It follows the following cvs format where each
                        line is represented by:</para>
          <para>
            <literal>&lt;name&gt;|&lt;epoch&gt;|&lt;version&gt;|&lt;release&gt;|&lt;arch&gt;|&lt;disturl&gt;|&lt;license&gt;</literal>
          </para>
          <para>The values represented here are mainly based on RPM packages metadata.
                        Other package managers may not provide all of these values, in such cases
                        the format is the same and the fields that cannot be provided are set as
                         value. This list can be used to track changes across multiple
                        builds of the same image description over time by diffing the
                        packages installed.</para>
        </step>
        <step>
          <para>The <literal>&lt;image-name&gt;.&lt;arch&gt;-&lt;version&gt;.verified</literal> file:</para>
          <para>This file is the output of a verification done by the package manager
                        against the package data base. More specific it is the output of
                        the <command>rpm</command> verification process or <command>dpkg</command> verification
                        depending on the packaging technology selected for the image.
                        In both cases the output follows the RPM verification syntax. This
                        provides an overview of all packages status right before any boot of
                        the image.</para>
        </step>
      </procedure>
      <para>More specific  the result files for a given image name and version such
                as <literal>Leap-15.1_appliance</literal> and <literal>1.15.1</literal> will be:</para>
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">image packages</emphasis>:
                        <literal>Leap-15.1_appliance.x86_64-1.15.1.packages</literal></para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">image verified</emphasis>:
                        <literal>Leap-15.1_appliance.x86_64-1.15.1.verified</literal></para>
        </listitem>
      </itemizedlist>
      <para>In addition to the image binaries itself that depend on the image type:</para>
      <variablelist>
        <varlistentry>
          <term>image=”tbz”</term>
          <listitem>
            <para>For this image type the result is mainly a root tree packed in a tarball:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">root archive</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.tar.xz</literal></para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>image=”btrfs|ext2|ext3|ext4|squashfs|xfs”</term>
          <listitem>
            <para>The image root tree data is packed into a filesystem image of the given
                            type, hence the resutl for an <literal>ext4</literal> image would be:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">filesystem image</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.ext4</literal></para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>image=”iso”</term>
          <listitem>
            <para>The image result is an ISO file:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">live image</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.iso</literal></para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>image=”oem”</term>
          <listitem>
            <para>An image representing an expandable disk image. KIWI NG can also produce an
                            installation ISO for this disk image by setting <literal>installiso="true"</literal> in
                            the <xref linkend="sec-preferences"/>) section or a tarball
                            including the artifacts for a network deployment by setting <literal>installiso="true"</literal>.
                            For further details see <xref linkend="expandable-disk"/>. The results for <literal>oem</literal>
                            can be:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">disk image</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.raw</literal></para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">installation image (optional)</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.install.iso</literal></para>
              </listitem>
              <listitem>
                <para><emphasis role="bold">installation pxe archive (optional)</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.install.tar</literal></para>
              </listitem>
            </itemizedlist>
            <para>The disk image can also be provided in one of the various virtual disk
                            formats which can be specified in  attribute of the
                            <xref linkend="sec-preferences"/> section. For further
                            details see <xref linkend="simple-disk"/>. The result for e.g  <literal>format="qcow2"</literal>
                            would be:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">disk image</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.qcow2</literal></para>
              </listitem>
            </itemizedlist>
            <para>instead of the <literal>raw</literal> default disk format.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>image=”docker”</term>
          <listitem>
            <para>An archive image suitable for the docker container engine. The result is
                            a loadable (<command>docker load -i &lt;image&gt;</command>) tarball:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">container</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.docker.tar.xz</literal></para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>image=”oci”</term>
          <listitem>
            <para>An archive image that builds a container matching the OCI
                            (Open Container Interface) standard. The result is a tarball matching OCI
                            standards:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">container</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.oci.tar.xz</literal></para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>image=”appx”</term>
          <listitem>
            <para>An archive image suitable for the Windows Subsystem For Linux
                            container engine. The result is an <literal>appx</literal> binary file:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">container</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.appx</literal></para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>image=”kis”</term>
          <listitem>
            <para>An optional root filesystem image associated with a kernel and initrd.
                            All three binaries are packed in a tarball, see <xref linkend="kis"/> for further
                            details about the kis archive:</para>
            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">kis archive</emphasis>:
                                    <literal>Leap-15.1_appliance.x86_64-1.15.1.tar.xz</literal></para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="supported-distributions">
      <title>Build Host Constraints</title>
      <para>For building images a host system is required that runs the build process.
                Tools to create the image are used from that host and this creates an
                indirect dependency to the target image. For example; Building an
                Ubuntu image requires the apt and dpkg tools and metadata to be available
                and functional on the host to build an Ubuntu image. There are many more
                of those host vs. image dependencies and not all of them can be resolved
                in a clear and clean way.</para>
      <para>The most compatible environment is provided if the build host is of the same
                distribution than the target image. This always applies for the Open Build
                Service (OBS). In other cases our recommendation is that the build host
                is of the same distribution than the target and near to the major
                version (+-1) compared to the target.</para>
      <para>In general, our goal is to support any major distribution with KIWI NG. However
                for building images we rely on core tools which are not under our control.
                Also several design aspects of distributions like <emphasis role="bold">secure boot</emphasis> and working
                with <emphasis role="bold">upstream projects</emphasis> are different and not influenced by us. There
                are many side effects that can be annoying especially if the build host
                is not of the same distribution vendor than the image target.</para>
    </section>
    <section xml:id="architectures">
      <title>Architectures</title>
      <para>As described in the section above one requirement between the build host
                and the image when it comes to architecture support is, that the image
                architecture should match the build host architecture. Cross arch building
                would require any core tool that is used to build an image to be cross
                arch capable. To patch e.g an x86_64 system such that it can build an
                aarch64 image would require some work on binutils and hacks as well as
                performance tweaks which is all not worth the effort and still can lead
                to broken results. Thus we recommend to provide native systems for the
                target architecture and build there. One possible alternative is to
                use the kiwi boxed plugin as documented here: <xref linkend="self-contained"/>
                together with a box created for the desired architecture. However keep
                in mind the performance problematic when running a VM of a different
                architecture.</para>
      <para>The majority of the image builds are based on the x86 architecture.
                As mentioned KIWI NG also supports other architectures, shown in the
                table below:</para>
      <informaltable>
        <tgroup cols="2">
          <colspec colname="c0" colwidth="14"/>
          <colspec colname="c1" colwidth="21"/>
          <thead>
            <row>
              <entry>
                <para>Architecture</para>
              </entry>
              <entry>
                <para>Supported</para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>x86_64</para>
              </entry>
              <entry>
                <para>yes</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ix86</para>
              </entry>
              <entry>
                <para>yes <emphasis role="bold">note:distro</emphasis></para>
              </entry>
            </row>
            <row>
              <entry>
                <para>s390/s390x</para>
              </entry>
              <entry>
                <para>yes <emphasis role="bold">note:distro</emphasis></para>
              </entry>
            </row>
            <row>
              <entry>
                <para>arm/aarch64</para>
              </entry>
              <entry>
                <para>yes <emphasis role="bold">note:distro</emphasis></para>
              </entry>
            </row>
            <row>
              <entry>
                <para>ppc64</para>
              </entry>
              <entry>
                <para>no (alpha-phase)</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
  </chapter>
  <chapter xml:id="building-types" xml:base="building_images">
    <title>Building Images for Supported Types</title>
    <note>
      <para>This document provides an overview how to build and use
                the KIWI NG supported image types.</para>
    </note>
    <section xml:id="hybrid-iso" xml:base="building_images/build_live_iso">
      <title>Build an ISO Hybrid Live Image</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page explains how to build a live image. It contains:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>how to build an ISO image</para>
        </listitem>
        <listitem>
          <para>how to run it with QEMU</para>
        </listitem>
      </itemizedlist>
      <para>A Live ISO image is a system on a removable media, e.g CD/DVD or USB stick.
            Once built and deployed it boots off from this media without interfering
            with other system storage components making it a useful pocket system for
            testing and demo- and debugging-purposes.</para>
      <para>To add a live ISO build to your appliance, create a  element with
            <literal>image</literal> set to <literal>iso</literal> in your <literal>config.xml</literal> as shown below:</para>
      <screen language="xml">&lt;image schemaversion="7.2" name="Tumbleweed_appliance"&gt;
  &lt;!-- snip --&gt;
  &lt;preferences&gt;
    &lt;type image="iso" primary="true" flags="overlay" hybridpersistent_filesystem="ext4" hybridpersistent="true"/&gt;
    &lt;!-- additional preferences --&gt;
  &lt;/preferences&gt;
  &lt;!-- snip --&gt;
&lt;/image&gt;</screen>
      <para>The following attributes of the  element are relevant when building
            live ISO images:</para>
      <itemizedlist>
        <listitem>
          <para><literal>flags</literal>: Specifies the live ISO technology and dracut module to use, can
                    be set to <literal>overlay</literal> or to <literal>dmsquash</literal>.</para>
          <para>If set to <literal>overlay</literal>, the kiwi-live dracut module will be used to support a
                    live ISO system based on squashfs and overlayfs.
                    If set to <literal>dmsquash</literal>, the dracut standard dmsquash-live module will be
                    used to support a live ISO system based on squashfs and the device
                    mapper. Note, both modules support a different set of live features.
                    For details see <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#live-features">Decision for a live ISO technology</link></para>
        </listitem>
        <listitem>
          <para><literal>hybridpersistent</literal>: Accepts <literal>true</literal> or <literal>false</literal>, if set to <literal>true</literal> then the
                    resulting image will be created with a COW file to keep data persistent
                    over a reboot</para>
        </listitem>
        <listitem>
          <para><literal>hybridpersistent_filesystem</literal>: The filesystem used for the COW
                    file. Possible values are <literal>ext4</literal> or <literal>xfs</literal>, with <literal>ext4</literal> being the default.</para>
        </listitem>
      </itemizedlist>
      <para>With the appropriate settings present in <literal>config.xml</literal> KIWI NG can now
            build the image:</para>
      <screen language="bash">$ sudo kiwi-ng --type iso system build \
      --description kiwi-descriptions/suse/x86_64/suse-leap-15.1 \
      --target-dir /tmp/myimage</screen>
      <para>The resulting image is saved in the folder <literal>/tmp/myimage</literal> and can
            be tested with QEMU:</para>
      <screen language="bash">$ qemu -cdrom Leap-15.1_appliance.x86_64-1.15.1.iso -m 4096</screen>
      <para>The image is now complete and ready to use. See <xref linkend="iso-to-usb-stick"/> and
            <xref linkend="iso-as-file-to-usb-stick"/> for further information concerning
            deployment.</para>
      <section xml:id="live-features">
        <title>Decision for a live ISO technology</title>
        <para>The decision for the <literal>overlay</literal> vs. <literal>dmsquash</literal> dracut module depends on
                the features one wants to use. From a design perspective the <literal>overlay</literal>
                module is conceived for live ISO deployments on disk devices which
                allows the creation of a write partition or cow file. The <literal>dmsquash</literal>
                module is conceived as a generic mapping technology using device-mapper
                snapshots. The following list describes important live ISO features and
                their support status compared to the <literal>overlay</literal> and <literal>dmsquash</literal> modules.</para>
        <variablelist>
          <varlistentry>
            <term>ISO scan</term>
            <listitem>
              <para>Usable in the same way with both dracut modules. This feature allows
                            to boot the live ISO as a file from a grub loopback configured bootloader.
                            The <literal>live-grub-stick</literal> tool is just one example that uses this feature.
                            For details how to setup ISO scan with the <literal>overlay</literal> module see
                            <xref linkend="iso-as-file-to-usb-stick"/></para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ISO in RAM completely</term>
            <listitem>
              <para>Usable with the <literal>dmsquash</literal> module through <literal>rd.live.ram</literal>. The <literal>overlay</literal>
                            module does not support this mode but KIWI NG supports RAM only systems
                            as OEM deployment into RAM from an install ISO media. For details how
                            to setup RAM only deployments in KIWI NG see: <xref linkend="ramdisk-deployment"/></para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Overlay based on overlayfs</term>
            <listitem>
              <para>Usable with the <literal>overlay</literal> module. A squashfs compressed readonly root
                            gets overlayed with a readwrite filesystem using the kernel overlayfs
                            filesystem.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Overlay based on device mapper snapshots</term>
            <listitem>
              <para>Usable with the <literal>dmsquash</literal> module. A squashfs compressed readonly root
                            gets overlayed with a readwrite filesystem using a device mapper
                            snapshot. This method was the preferred one before overlayfs existed
                            in the Linux kernel.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Media Checksum Verification</term>
            <listitem>
              <para>Boot the live iso only for ISO checksum verification. This is possible
                            with both modules but the <literal>overlay</literal> module uses the <literal>checkmedia</literal> tool
                            whereas the upstream <literal>dmsquash</literal> module uses <literal>checkisomd5</literal>. The activation
                            of the verification process is done by passing the kernel option
                            <literal>mediacheck</literal> for the <literal>overlay</literal> module and <literal>rd.live.check</literal> for
                            the <literal>dmsquash</literal> module.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Live ISO through PXE boot</term>
            <listitem>
              <para>Boot the live image via the network. This is possible with both
                            modules but uses different technologies. The <literal>overlay</literal> module supports
                            network boot only in combination with the AoE (Ata Over Ethernet) protocol.
                            For details see <xref linkend="network-live-boot"/>. The <literal>dmsquash</literal> module supports
                            network boot by fetching the ISO image into memory from <literal>root=live:</literal>
                            using the <literal>livenet</literal> module.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Persistent Data</term>
            <listitem>
              <para>Keep new data persistent on a writable storage device. This can be done
                            with both modules but in different ways. The <literal>overlay</literal> module activates
                            persistency with the kernel boot parameter <literal>rd.live.overlay.persistent</literal>.
                            If the persistent setup cannot be created the fallback to the non persistent
                            mode applies automatically. The <literal>overlay</literal> module auto detects if it is
                            used on a disk or ISO scan loop booted from a file. If booted as disk,
                            persistency is setup on a new partition of that disk. If loop booted
                            from file, persistency is setup on a new cow file. The cow file/partition
                            setup can be influenced with the kernel boot parameters:
                            <literal>rd.live.overlay.cowfs</literal> and <literal>rd.live.cowfile.mbsize</literal>. The <literal>dmsquash</literal>
                            module configures persistency through the <literal>rd.live.overlay</literal> option
                            exclusively and does not support the automatic creation of a write
                            partition in disk mode.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="simple-disk" xml:base="building_images/build_simple_disk">
      <title>Build a Virtual Disk Image</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page explains how to build a simple disk image.
                It contains how to:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>define a simple disk image in the image description</para>
        </listitem>
        <listitem>
          <para>build a simple disk image</para>
        </listitem>
        <listitem>
          <para>run it with QEMU</para>
        </listitem>
      </itemizedlist>
      <para>A simple Virtual Disk Image is a compressed system disk with additional
            metadata useful for cloud frameworks like Amazon EC2, Google Compute Engine,
            or Microsoft Azure. It is used as the native disk of a system and does
            not require an extra installation workflow or a complex first boot setup
            procedure which is why we call it a <emphasis>simple</emphasis> disk image.</para>
      <para>To instruct KIWI NG to build a simple disk image add a  element with
            <literal>image="oem"</literal> in <literal>config.xml</literal> that has the <literal>oem-resize</literal> feature
            disabled. An example configuration for a 42 GB large VMDK image with
            512 MB RAM, an IDE controller and a bridged network interface is shown
            below:</para>
      <screen language="xml">&lt;image schemaversion="7.2" name="Tumbleweed_appliance"&gt;
  &lt;!-- snip --&gt;
  &lt;preferences&gt;
    &lt;type image="oem" filesystem="ext4" format="vmdk"&gt;
      &lt;bootloader name="grub2" timeout="0"/&gt;
      &lt;size unit="G"&gt;42&lt;/size&gt;
      &lt;oemconfig&gt;
          &lt;oem-resize&gt;false&lt;/oem-resize&gt;
      &lt;/oemconfig&gt;
      &lt;machine memory="512" guestOS="suse" HWversion="4"&gt;
        &lt;vmdisk id="0" controller="ide"/&gt;
        &lt;vmnic driver="e1000" interface="0" mode="bridged"/&gt;
      &lt;/machine&gt;
    &lt;/type&gt;
    &lt;!-- additional preferences --&gt;
  &lt;/preferences&gt;
  &lt;!-- snip --&gt;
&lt;/image&gt;</screen>
      <para>The following attributes of the  element are of special interest
            when building simple disk images:</para>
      <itemizedlist>
        <listitem>
          <para>: Specifies the format of the virtual disk, possible values are:
                    <literal>gce</literal>, <literal>ova</literal>, <literal>qcow2</literal>, <literal>vagrant</literal>, <literal>vmdk</literal>, <literal>vdi</literal>, <literal>vhd</literal>, <literal>vhdx</literal> and
                    <literal>vhd-fixed</literal>.</para>
        </listitem>
        <listitem>
          <para><literal>formatoptions</literal>: Specifies additional format options passed to
                    <command>qemu-img</command>. <literal>formatoptions</literal> is a comma separated list of format
                    specific options in a <literal>name=value</literal> format like <command>qemu-img</command>
                    expects it. KIWI NG will forward the settings from this attribute as a
                    parameter to the <literal>-o</literal> option in the <command>qemu-img</command> call.</para>
        </listitem>
      </itemizedlist>
      <para>The <literal>bootloader</literal>, <literal>size</literal> and <literal>machine</literal> child-elements of  can be
            used to customize the virtual machine image further. We describe them in
            the following sections: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#disk-bootloader">Setting up the Bootloader of the Image</link>, <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#disk-the-size-element">Modifying the Size of the Image</link>
            and <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#disk-the-machine-element">Customizing the Virtual Machine</link></para>
      <para>Once your image description is finished (or you are content with a image
            from the <xref linkend="example-descriptions"/> and use one of
            them) build the image with KIWI NG:</para>
      <screen language="bash">$ sudo kiwi-ng --type oem system build \
    --description kiwi-descriptions/suse/x86_64/suse-leap-15.1 \
    --target-dir /tmp/myimage</screen>
      <para>The created image will be in the target directory <literal>/tmp/myimage</literal> with
            the file extension <literal>.raw</literal>.</para>
      <para>The live image can then be tested with QEMU:</para>
      <screen language="bash">$ qemu \
    -drive file=Leap-15.1_appliance.x86_64-1.15.1.raw,format=raw,if=virtio \
    -m 4096</screen>
      <para>For further information how to setup the image to work within a cloud
            framework see:</para>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="setup-for-ec2"/>
          </para>
        </listitem>
        <listitem>
          <para>
            <xref linkend="setup-for-azure"/>
          </para>
        </listitem>
        <listitem>
          <para>
            <xref linkend="setup-for-gce"/>
          </para>
        </listitem>
      </itemizedlist>
      <para>For information how to setup a Vagrant box, see: <xref linkend="setup-vagrant"/>.</para>
      <section xml:id="disk-bootloader">
        <title>Setting up the Bootloader of the Image</title>
        <screen language="xml">&lt;preferences&gt;
  &lt;bootloader name="grub2"/&gt;
&lt;/preferences&gt;</screen>
        <para>The <literal>bootloader</literal> element is used to select the bootloader. At the moment
                <literal>grub2</literal>, <literal>isolinux</literal>, <literal>zipl</literal> and <literal>grub2_s390x_emu</literal> (a combination of zipl
                and a userspace GRUB2) are supported. The special <literal>custom</literal> entry allows
                to skip the bootloader configuration and installation and leaves this up
                to the user which can be done by using the <literal>editbootinstall</literal> and
                <literal>editbootconfig</literal> custom scripts.</para>
        <para>In addition to the mandatory name attribute the following optional
                attributes are supported:</para>
        <variablelist>
          <varlistentry>
            <term>console=”console|gfxterm|serial”:</term>
            <listitem>
              <para>Specifies the bootloader console. The attribute is available for the
                            grub and isolinux bootloader types. By default a graphics console
                            setup is used</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>serial_line=”string”:</term>
            <listitem>
              <para>Specifies the bootloader serial line setup. The setup
                            is effective if the bootloader console is set to use
                            the serial line. The attribute is available for the grub
                            bootloader only</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>timeout=”number”:</term>
            <listitem>
              <para>Specifies the boot timeout in seconds prior to launching
                            the default boot option. By default the timeout is set to 10 seconds. It
                            makes sense to set this value to <literal>0</literal> for images intended to be started
                            non-interactively (e.g. virtual machines).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>timeout_style=”countdown|hidden”:</term>
            <listitem>
              <para>Specifies the boot timeout style to control the way in which
                            the timeout interacts with displaying the menu. If set the
                            display of the bootloader menu is delayed after the timeout
                            expired. In countdown mode an indication of the remaining time
                            is displayed. The attribute is available for the grub loader only</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>targettype=”CDL|LDL|FBA|SCSI”:</term>
            <listitem>
              <para>Specifies the device type of the disk zipl should boot.
                            On zFCP devices use <literal>SCSI</literal>, on DASD devices use <literal>CDL</literal> or <literal>LDL</literal> on
                            emulated DASD devices use <literal>FBA</literal>. The attribute is available for the
                            zipl loader only</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="disk-the-size-element">
        <title>Modifying the Size of the Image</title>
        <para>The <literal>size</literal> child element of  specifies the size of the resulting
                disk image. The following example shows a image description where 20 GB are
                added to the virtual machine image of which 5 GB are left unpartitioned:</para>
        <screen language="xml">&lt;preferences&gt;
  &lt;type image="oem" format="vmdk"&gt;
    &lt;size unit="G" additive="true" unpartitioned="5"&gt;20&lt;/size&gt;
    &lt;oemconfig&gt;
        &lt;oem-resize&gt;false&lt;/oem-resize&gt;
    &lt;/oemconfig&gt;
  &lt;/type&gt;
&lt;/preferences&gt;</screen>
        <para>The following optional attributes can be used to customize the image size
                further:</para>
        <itemizedlist>
          <listitem>
            <para><literal>unit</literal>: Defines the unit used for the provided numerical value, possible
                        settings are <literal>M</literal> for megabytes and <literal>G</literal> for gigabytes. The default unit
                        are megabytes.</para>
          </listitem>
          <listitem>
            <para><literal>additive</literal>: boolean value that determines whether the provided value will
                        be added to the current image’s size (<literal>additive="true"</literal>) or whether it is
                        the total size (<literal>additive="false"</literal>). The default is <literal>false</literal>.</para>
          </listitem>
          <listitem>
            <para><literal>unpartitioned</literal>: Specifies the image space in the image that will not be
                        partitioned. This value uses the same unit as defined in the attribute
                        <literal>unit</literal> or the default.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="disk-the-machine-element">
        <title>Customizing the Virtual Machine</title>
        <para>The <literal>machine</literal> child element of  can be used to customize the virtual
                machine configuration which is used when the image is run, like the number
                of CPUs or the connected network interfaces.</para>
        <para>The following attributes are supported by the <literal>machine</literal> element:</para>
        <itemizedlist>
          <listitem>
            <para><literal>ovftype</literal>: The OVF configuration type. The Open Virtualization Format is
                        a standard for describing virtual appliances and distribute them in an
                        archive called Open Virtual Appliance (OVA). The standard describes the
                        major components associated with a disk image. The exact specification
                        depends on the product using the format.</para>
            <para>Supported values are <literal>zvm</literal>, <literal>powervm</literal>, <literal>xen</literal> and <literal>vmware</literal>.</para>
          </listitem>
          <listitem>
            <para><literal>HWversion</literal>: The virtual machine’s hardware version (<literal>vmdk</literal> and <literal>ova</literal>
                        formats only), see <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://kb.vmware.com/s/article/1003746"/> for further
                        details which value to choose.</para>
          </listitem>
          <listitem>
            <para><literal>arch</literal>: the VM architecture (<literal>vmdk</literal> format only), possible values are:
                        <literal>ix86</literal> (= <literal>i585</literal> and <literal>i686</literal>) and <literal>x86_64</literal>.</para>
          </listitem>
          <listitem>
            <para><literal>xen_loader</literal>: the Xen target loader which is expected to load this guest,
                        supported values are: <literal>hvmloader</literal>, <literal>pygrub</literal> and <literal>pvgrub</literal>.</para>
          </listitem>
          <listitem>
            <para><literal>guestOS</literal>: The virtual guest OS’ identification string for the VM (only
                        applicable for <literal>vmdk</literal> and <literal>ova</literal> formats, note that the name designation
                        is different for the two formats).</para>
          </listitem>
          <listitem>
            <para><literal>min_memory</literal>: The virtual machine’s minimum memory in MB (<literal>ova</literal> format
                        only).</para>
          </listitem>
          <listitem>
            <para><literal>max_memory</literal>: The virtual machine’s maximum memory in MB (<literal>ova</literal> format
                        only).</para>
          </listitem>
          <listitem>
            <para><literal>min_cpu</literal>: The virtual machine’s minimum CPU count (<literal>ova</literal> format only).</para>
          </listitem>
          <listitem>
            <para><literal>max_cpu</literal>: The virtual machine’s maximum CPU count (<literal>ova</literal> format only).</para>
          </listitem>
          <listitem>
            <para><literal>memory</literal>: The virtual machine’s memory in MB (all formats).</para>
          </listitem>
          <listitem>
            <para><literal>ncpus</literal>: The umber of virtual CPUs available to the virtual machine (all
                        formats).</para>
          </listitem>
        </itemizedlist>
        <para>Additionally, <literal>machine</literal> supports additional child elements that are covered
                in the following subsections.</para>
        <section xml:id="modifying-the-vm-configuration-directly">
          <title>Modifying the VM Configuration Directly</title>
          <para>The <literal>vmconfig-entry</literal> element is used to add entries directly into the
                    virtual machine’s configuration file. This is currently only supported for
                    the <literal>vmdk</literal> format where the provided strings are directly pasted into the
                    <literal>.vmx</literal> file.</para>
          <para>The <literal>vmconfig-entry</literal> element has no attributes and can appear multiple
                    times, the entries are added to the configuration file in the provided
                    order. Note, that KIWI NG does not check the entries for correctness. KIWI NG only
                    forwards them.</para>
          <para>The following example adds the two entries <literal>numvcpus = "4"</literal> and
                    <literal>cpuid.coresPerSocket = "2"</literal> into the VM configuration file:</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;type image="oem" filesystem="ext4" format="vmdk"&gt;
    &lt;machine memory="512" guestOS="suse" HWversion="4"&gt;
      &lt;vmconfig-entry&gt;numvcpus = "4"&lt;/vmconfig-entry&gt;
      &lt;vmconfig-entry&gt;cpuid.coresPerSocket = "2"&lt;/vmconfig-entry&gt;
    &lt;/machine&gt;
  &lt;/type&gt;
&lt;/preferences&gt;</screen>
        </section>
        <section xml:id="adding-network-interfaces-to-the-vm">
          <title>Adding Network Interfaces to the VM</title>
          <para>Network interfaces can be explicitly specified for the VM when required via
                    the <literal>vmnic</literal> element. This can be used to add another bridged interface or
                    to specify the driver which is being used.</para>
          <para>Note, that this element is only used for the <literal>vmdk</literal> image format.</para>
          <para>In the following example we add a bridged network interface using the
                    <literal>e1000</literal> driver:</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;type image="oem" filesystem="ext4" format="vmdk"&gt;
    &lt;machine memory="4096" guestOS="suse" HWversion="4"&gt;
      &lt;vmnic driver="e1000" interface="0" mode="bridged"/&gt;
    &lt;/machine&gt;
  &lt;/type&gt;
&lt;/preferences&gt;</screen>
          <para>The <literal>vmnic</literal> element supports the following attributes:</para>
          <itemizedlist>
            <listitem>
              <para><literal>interface</literal>: <emphasis role="bold">mandatory</emphasis> interface ID for the VM’s network interface.</para>
            </listitem>
            <listitem>
              <para><literal>driver</literal>: optionally the driver which will be used can be specified</para>
            </listitem>
            <listitem>
              <para><literal>mac</literal>: this interfaces’ MAC address</para>
            </listitem>
            <listitem>
              <para><literal>mode</literal>: this interfaces’ mode.</para>
            </listitem>
          </itemizedlist>
          <para>Note that KIWI NG will <emphasis role="bold">not</emphasis> verify the values that are passed to these
                    attributes, it will only paste them into the appropriate configuration
                    files.</para>
        </section>
        <section xml:id="specifying-disks-and-disk-controllers">
          <title>Specifying Disks and Disk Controllers</title>
          <para>The <literal>vmdisk</literal> element can be used to customize the disks and disk
                    controllers for the virtual machine. This element can be specified multiple
                    times, each time for each disk or disk controller present.</para>
          <para>Note that this element is only used for <literal>vmdk</literal> and <literal>ova</literal> image formats.</para>
          <para>The following example adds a disk with the ID 0 using an IDE controller:</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;type image="oem" filesystem="ext4" format="vmdk"&gt;
    &lt;machine memory="512" guestOS="suse" HWversion="4"&gt;
      &lt;vmdisk id="0" controller="ide"/&gt;
    &lt;/machine&gt;
  &lt;/type&gt;
&lt;/preferences&gt;</screen>
          <para>Each <literal>vmdisk</literal> element can be further customized via the following optional
                    attributes:</para>
          <itemizedlist>
            <listitem>
              <para><literal>controller</literal>: The disk controller used for the VM guest (<literal>vmdk</literal> format
                            only). Supported values are: <literal>ide</literal>, <literal>buslogic</literal>, <literal>lsilogic</literal>, <literal>lsisas1068</literal>,
                            <literal>legacyESX</literal> and <literal>pvscsi</literal>.</para>
            </listitem>
            <listitem>
              <para><literal>device</literal>: The disk device to appear in the guest (<literal>xen</literal> format only).</para>
            </listitem>
            <listitem>
              <para><literal>diskmode</literal>: The disk mode (<literal>vmdk</literal> format only), possible values are:
                            <literal>monolithicSparse</literal>, <literal>monolithicFlat</literal>, <literal>twoGbMaxExtentSparse</literal>,
                            <literal>twoGbMaxExtentFlat</literal> and <literal>streamOptimized</literal> (see also
                            <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.vmware.com/support/developer/converter-sdk/conv60_apireference/vim.OvfManager.CreateImportSpecParams.DiskProvisioningType.html"/>).</para>
            </listitem>
            <listitem>
              <para><literal>disktype</literal>: The type of the disk as it is internally handled by the VM
                            (<literal>ova</literal> format only). This attribute is currently unused.</para>
            </listitem>
            <listitem>
              <para>: The disk ID of the VM disk (<literal>vmdk</literal> format only).</para>
            </listitem>
          </itemizedlist>
        </section>
        <section xml:id="adding-cd-dvd-drives">
          <title>Adding CD/DVD Drives</title>
          <para>KIWI NG supports the addition of IDE and SCSCI CD/DVD drives to the virtual
                    machine using the <literal>vmdvd</literal> element for the <literal>vmdk</literal> image format. In the
                    following example we add two drives: one with a SCSCI and another with a
                    IDE controller:</para>
          <screen language="xml">&lt;preferences&gt;
  &lt;type image="oem" filesystem="ext4"&gt;
    &lt;machine memory="512" xen_loader="hvmloader"&gt;
      &lt;vmdvd id="0" controller="scsi"/&gt;
      &lt;vmdvd id="1" controller="ide"/&gt;
    &lt;/machine&gt;
  &lt;/type&gt;
&lt;/preferences&gt;</screen>
          <para>The <literal>vmdvd</literal> element features just these two <emphasis role="bold">mandatory</emphasis> attributes:</para>
          <itemizedlist>
            <listitem>
              <para>: The CD/DVD ID of the drive</para>
            </listitem>
            <listitem>
              <para><literal>controller</literal>: The CD/DVD controller used for the VM guest, supported
                            values are <literal>ide</literal> and <literal>scsi</literal>.</para>
            </listitem>
          </itemizedlist>
        </section>
      </section>
    </section>
    <section xml:id="expandable-disk" xml:base="building_images/build_expandable_disk">
      <title>Build an Expandable Disk Image</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page explains how to build an expandable disk image.
                It contains how to:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>build an expandable disk image</para>
        </listitem>
        <listitem>
          <para>deploy an expandable disk image</para>
        </listitem>
        <listitem>
          <para>run the deployed system</para>
        </listitem>
      </itemizedlist>
      <para>An expandable disk represents the system disk with the capability to auto
            expand the disk and its filesystem to a custom disk geometry. This
            allows deploying the same disk image on target systems with different
            hardware setup.</para>
      <para>The following example shows how to build and deploy such a disk image
            based on openSUSE Leap using a QEMU virtual machine as the target
            system:</para>
      <procedure>
        <step>
          <para>Make sure you have checked out the example image descriptions,
                    see <xref linkend="example-descriptions"/>.</para>
        </step>
        <step>
          <para>Build the image with KIWI NG:</para>
          <screen language="bash">$ sudo kiwi-ng --type oem system build \
    --description kiwi-descriptions/suse/x86_64/suse-leap-15.1 \
    --target-dir /tmp/myimage</screen>
          <para>Find the following result images below <literal>/tmp/myimage</literal>.</para>
          <itemizedlist>
            <listitem>
              <para>The disk image with the suffix <literal>.raw</literal> is an expandable
                            virtual disk. It can expand itself to a custom disk geometry.</para>
            </listitem>
            <listitem>
              <para>The installation image with the suffix <literal>install.iso</literal> is a
                            hybrid installation system which contains the disk image and is
                            capable to install this image on any target disk.</para>
            </listitem>
          </itemizedlist>
        </step>
      </procedure>
      <section xml:id="deployment-methods">
        <title>Deployment Methods</title>
        <para>The basic idea behind an expandable disk image is to provide the virtual
                disk data for OEM vendors to support easy deployment of the system to
                physical storage media.</para>
        <para>There are the following basic deployment strategies:</para>
        <procedure>
          <step>
            <para>
              <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#deploy-manually">Manual Deployment</link>
            </para>
            <para>Manually deploy the disk image onto the target disk.</para>
          </step>
          <step>
            <para>
              <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#deploy-from-iso">CD/DVD Deployment</link>
            </para>
            <para>Boot the installation image and let KIWI NG’s installer
                        deploy the disk image from CD/DVD or USB stick onto the target disk.</para>
          </step>
          <step>
            <para>
              <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#deploy-from-network">Network Deployment</link>
            </para>
            <para>PXE boot the target system and let KIWI NG’s installer
                        deploy the disk image from the network onto the target disk.</para>
          </step>
        </procedure>
      </section>
      <section xml:id="deploy-manually">
        <title>Manual Deployment</title>
        <para>The manual deployment method can be tested using virtualization software
                such as QEMU, and an additional virtual target disk of a larger size.
                The following steps shows how to do it:</para>
        <procedure>
          <step>
            <para>Create a target disk</para>
            <screen language="bash">$ qemu-img create target_disk 20g</screen>
            <note>
              <para>Retaining the Disk Geometry</para>
              <para>If the target disk geometry is less or equal to the geometry of
                            the disk image itself, the disk expansion performed for a physical
                            disk install during the boot workflow will be skipped and the
                            original disk geometry stays untouched.</para>
            </note>
          </step>
          <step>
            <para>Dump disk image on target disk.</para>
            <screen language="bash">$ dd if=Leap-15.1_appliance.x86_64-1.15.1.raw of=target_disk conv=notrunc</screen>
          </step>
          <step>
            <para>Boot the target disk</para>
            <screen language="bash">$ qemu -hda target_disk -m 4096</screen>
            <para>At first boot of the target_disk the system is expanded to the
                        configured storage layout. By default the system root partition
                        and filesystem is resized to the maximum free space available.</para>
          </step>
        </procedure>
      </section>
      <section xml:id="deploy-from-iso">
        <title>CD/DVD Deployment</title>
        <para>The deployment from CD/DVD via the installation image can
                also be tested using virtualization software such as QEMU.
                The following steps shows how to do it:</para>
        <procedure>
          <step>
            <para>Create a target disk</para>
            <para>Follow the steps above to create a virtual target disk</para>
          </step>
          <step>
            <para>Boot the installation image as CD/DVD with the
                        target disk attached.</para>
            <screen language="bash">$ qemu -cdromLeap-15.1_appliance.x86_64-1.15.1.install.iso -hda target_disk -boot d -m 4096</screen>
            <note>
              <para>USB Stick Deployment</para>
              <para>Like any other ISO image built with KIWI NG, also the installation
                            image is a hybrid image. Thus it can also be used on USB stick and
                            serve as installation stick image like it is explained in
                            <xref linkend="hybrid-iso"/></para>
            </note>
          </step>
        </procedure>
      </section>
      <section xml:id="deploy-from-network">
        <title>Network Deployment</title>
        <para>The deployment from the network downloads the disk image from a
                PXE boot server. This requires a PXE network boot server to be setup
                as explained in <xref linkend="network-boot-server"/></para>
        <para>If the PXE server is running the following steps shows how to test the
                deployment process over the network using a QEMU virtual machine as
                target system:</para>
        <procedure>
          <step>
            <para>Make sure to create an installation PXE TAR archive along with your
                        disk image by replacing the following setup in
                        kiwi-descriptions/suse/x86_64/suse-leap-15.1/config.xml</para>
            <para>Instead of</para>
            <screen language="xml">&lt;type image="oem" installiso="true"/&gt;</screen>
            <para>setup</para>
            <screen language="xml">&lt;type image="oem" installpxe="true"/&gt;</screen>
          </step>
          <step>
            <para>Rebuild the image, unpack the resulting
                        <literal>Leap-15.1_appliance.x86_64-1.15.1.install.tar.xz</literal>
                        file to a temporary directory and copy the initrd and kernel images to
                        the PXE server:</para>
            <procedure>
              <step>
                <para>Unpack installation tarball</para>
                <screen language="bash">mkdir /tmp/pxe &amp;&amp; cd /tmp/pxe
tar -xf Leap-15.1_appliance.x86_64-1.15.1.install.tar.xz</screen>
              </step>
              <step>
                <para>Copy kernel and initrd used for pxe boot</para>
                <screen language="bash">scp pxeboot.Leap-15.1_appliance.x86_64-1.15.1.initrd.xz PXE_SERVER_IP:/srv/tftpboot/boot/initrd
scp pxeboot.Leap-15.1_appliance.x86_64-1.15.1.kernel PXE_SERVER_IP:/srv/tftpboot/boot/linux</screen>
              </step>
            </procedure>
          </step>
          <step>
            <para>Copy the disk image, MD5 file, system kernel, initrd and bootoptions to
                        the PXE boot server:</para>
            <para>Activation of the deployed system is done via <literal>kexec</literal> of the kernel
                        and initrd provided here.</para>
            <procedure>
              <step>
                <para>Copy system image and MD5 checksum</para>
                <screen language="bash">scp Leap-15.1_appliance.x86_64-1.15.1.xz PXE_SERVER_IP:/srv/tftpboot/image/
scp Leap-15.1_appliance.x86_64-1.15.1.md5 PXE_SERVER_IP:/srv/tftpboot/image/</screen>
              </step>
              <step>
                <para>Copy kernel, initrd and bootoptions used for booting the system via kexec</para>
                <screen language="bash">scp Leap-15.1_appliance.x86_64-1.15.1.initrd PXE_SERVER_IP:/srv/tftpboot/image/
scp Leap-15.1_appliance.x86_64-1.15.1.kernel PXE_SERVER_IP:/srv/tftpboot/image/
scp Leap-15.1_appliance.x86_64-1.15.1.config.bootoptions PXE_SERVER_IP:/srv/tftpboot/image/</screen>
                <note>
                  <para>The config.bootoptions file is used together with kexec to boot the
                                    previously dumped image. The information in that file references the
                                    root of the dumped image and can also include any other type of
                                    boot options. The file provided with the KIWI NG built image is
                                    by default connected to the image present in the PXE TAR archive.
                                    If other images got deployed the contents of this file must be
                                    adapted to match the correct root reference.</para>
                </note>
              </step>
            </procedure>
          </step>
          <step>
            <para>Add/Update the kernel command line parameters</para>
            <para>Edit your PXE configuration (for example <literal>pxelinux.cfg/default</literal>) on
                        the PXE server and add these parameters to the append line, typically
                        looking like this:</para>
            <screen language="bash">append initrd=boot/initrd rd.kiwi.install.pxe rd.kiwi.install.image=tftp://192.168.100.16/image/Leap-15.1_appliance.x86_64-1.15.1.xz</screen>
            <para>The location of the image is specified as a source URI which can point
                        to any location supported by the <literal>curl</literal> command. KIWI NG calls <literal>curl</literal> to fetch
                        the data from this URI. This also means your image, MD5 file, system kernel
                        and initrd could be fetched from any server and doesn’t have to be stored
                        on the <literal>PXE_SERVER</literal>.</para>
            <para>By default KIWI NG does not use specific <literal>curl</literal> options or flags. However it
                        is possible to add custom ones by adding the
                        <literal>rd.kiwi.install.pxe.curl_options</literal> flag into the kernel command line.
                        <literal>curl</literal> options are passed as comma separated values. Consider the following
                        example:</para>
            <screen language="bash">rd.kiwi.install.pxe.curl_options=--retry,3,--retry-delay,3,--speed-limit,2048</screen>
            <para>The above tells KIWI NG to call <literal>curl</literal> with:</para>
            <screen language="bash">curl --retry 3 --retry-delay 3 --speed-limit 2048 -f &lt;url&gt;</screen>
            <para>This is specially handy when the deployment infraestructure requires
                        some fine tuned download behavior. For example, setting retries to be
                        more robust over flaky network connections.</para>
            <note>
              <para>KIWI NG just replaces commas with spaces and appends it to the
                            <literal>curl</literal> call. This is relevant since command line options including
                            commas will always fail.</para>
            </note>
            <note>
              <para>The initrd and Linux Kernel for pxe boot are always loaded via tftp
                            from the <literal>PXE_SERVER</literal>.</para>
            </note>
          </step>
        </procedure>
        <procedure>
          <step>
            <para>Create a target disk</para>
            <para>Follow the steps above to create a virtual target disk</para>
          </step>
          <step>
            <para>Connect the client to the network and boot QEMU with the target disk
                        attached to the virtual machine.</para>
            <screen language="bash">$ qemu -boot n -hda target_disk -m 4096</screen>
            <note>
              <para>QEMU bridged networking</para>
              <para>In order to let qemu connect to the network we recommend to
                            setup a network bridge on the host system and let qemu connect
                            to it via a custom /etc/qemu-ifup. For details see
                            <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://en.wikibooks.org/wiki/QEMU/Networking"/></para>
            </note>
          </step>
        </procedure>
      </section>
      <section xml:id="oem-customize">
        <title>OEM Customization</title>
        <para>The deployment process of an oem image can be customized through
                the <literal>oemconfig</literal> element which is a child section of the 
                element like the following example shows:</para>
        <screen language="xml">&lt;oemconfig&gt;
  &lt;oem-swapsize&gt;512&lt;/oem-swapsize&gt;
&lt;/oemconfig&gt;</screen>
        <para>The following list of optional <literal>oem</literal> element settings exists:</para>
        <variablelist>
          <varlistentry>
            <term>oemconfig.oem-resize Element</term>
            <listitem>
              <para>Specify if the disk has the capability to expand itself to
                            a new disk geometry or not. By default, this feature is activated.
                            The implementation of the resize capability is done in a dracut
                            module packaged as <literal>dracut-kiwi-oem-repart</literal>. If <literal>oem-resize</literal> is
                            set to false, the installation of the corresponding dracut package
                            can be skipped as well.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-boot-title Element</term>
            <listitem>
              <para>By default, the string OEM will be used as the boot manager menu
                            entry when KIWI creates the GRUB configuration during deployment.
                            The <literal>oem-boot-title</literal> element allows you to set a custom name for the
                            grub menu entry. This value is represented by the
                            <literal>kiwi_oemtitle</literal> variable in the initrd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-bootwait Element</term>
            <listitem>
              <para>Specify if the system should wait for user interaction prior to
                            continuing the boot process after the disk image has been dumped to
                            the designated storage device (default value is false). This value
                            is represented by the <literal>kiwi_oembootwait</literal> variable in the initrd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-reboot Element</term>
            <listitem>
              <para>Specify if the system is to be rebooted after the disk image has
                            been deployed to the designated storage device (default value is
                            false). This value is represented by the <literal>kiwi_oemreboot</literal>
                            variable in the initrd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-reboot-interactive Element</term>
            <listitem>
              <para>Specify if the system is to be rebooted after the disk image has
                            been deployed to the designated storage device (default value is
                            false). Prior to reboot a message is posted and must be
                            acknowledged by the user in order for the system to reboot. This
                            value is represented by the <literal>kiwi_oemrebootinteractive</literal> variable
                            in the initrd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-silent-boot Element</term>
            <listitem>
              <para>Specify if the system should boot in silent mode after the disk
                            image has been deployed to the designated storage device (default
                            value is false). This value is represented by the
                            <literal>kiwi_oemsilentboot</literal> variable in the initrd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-shutdown Element</term>
            <listitem>
              <para>Specify if the system is to be powered down after the disk image
                            has been deployed to the designated storage device (default value
                            is false). This value is represented by the <literal>kiwi_oemshutdown</literal>
                            variable in the initrd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-shutdown-interactive Element</term>
            <listitem>
              <para>Specify if the system is to be powered down after the disk image
                            has been deployed to the designated storage device (default value
                            is false). Prior to shutdown a message is posted and must be
                            acknowledged by the user in order for the system to power off.
                            This value is represented by the <literal>kiwi_oemshutdowninteractive</literal>
                            variable in the initrd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-swap Element</term>
            <listitem>
              <para>Specify if a swap partition should be created. By default no
                            swap partition will be created. This value is represented
                            by the <literal>kiwi_oemswap</literal> variable in the initrd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-swapname Element</term>
            <listitem>
              <para>Specify the name of the swap space. By default the name is set
                            to <literal>LVSwap</literal>. The default already indicates that this setting
                            is only useful in combination with the LVM volume manager. In
                            this case the swapspace is setup as a volume in the volume
                            group and any volume needs a name. The name set here is used
                            to give the swap volume a name.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-swapsize Element</term>
            <listitem>
              <para>Set the size of the swap partition. If a swap partition is to be
                            created and the size of the swap partition is not specified with
                            this optional element, KIWI will calculate the size of the swap
                            partition and create a swap partition equal to two times the RAM
                            installed on the system at initial boot time. This value is
                            represented by the <literal>kiwi_oemswapMB</literal> variable in the initrd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-systemsize Element</term>
            <listitem>
              <para>Set the size the operating system is allowed to consume on the
                            target disk. The size limit does not include any consideration for
                            swap space or a recovery partition. In a setup <emphasis>without</emphasis> a
                            systemdisk element this value specifies the size of the root
                            partition. In a setup <emphasis>including</emphasis> a systemdisk element this value
                            specifies the size of the LVM partition which contains all
                            specified volumes. Thus, the sum of all specified volume sizes
                            plus the sum of the specified freespace for each volume must be
                            smaller or equal to the size specified with the <literal>oem-systemsize</literal>
                            element. This value is represented by the variable <literal>kiwi_oemrootMB</literal>
                            in the initrd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>oemconfig.oem-unattended Element</term>
            <listitem>
              <para>The installation of the image to the target system occurs
                            automatically without requiring user interaction. If multiple
                            possible target devices are discovered the image is deployed to
                            the first device. <literal>kiwi_oemunattended</literal> in the initrd</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="installmedia-customize">
        <title>Installation Media Customization</title>
        <para>The installation media created for OEM network or CD/DVD deployments can
                be customized with the <literal>installmedia</literal> section which is a child section of the 
                element as it appears in the following example:</para>
        <screen language="xml">&lt;installmedia&gt;
  &lt;initrd action="omit"&gt;
    &lt;dracut module="network-legacy"/&gt;
  &lt;/initrd&gt;
&lt;/installmedia&gt;</screen>
        <para>The <literal>installmedia</literal> is only available for OEM image types that includes the
                request to create an installation media.</para>
        <para>The <literal>initrd</literal> child element of <literal>installmedia</literal> lists dracut modules, they
                can be omitted, added or staticaly set the list of included ones. This is
                specified with the <literal>action</literal> attribute and can take <literal>action="omit"</literal>,
                <literal>action="add"</literal> or <literal>action="set"</literal> values.</para>
      </section>
    </section>
    <section xml:id="building-docker-build" xml:base="building_images/build_docker_container">
      <title>Build a Docker Container Image</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page explains how to build a Docker base image. It contains</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>basic configuration explanation</para>
        </listitem>
        <listitem>
          <para>how to build a Docker image</para>
        </listitem>
        <listitem>
          <para>how to run it with the Docker daemon</para>
        </listitem>
      </itemizedlist>
      <para>KIWI NG is capable of building native Docker images, from scratch and derived
            ones. KIWI NG Docker images are considered to be native since the KIWI NG
            tarball image is ready to be loaded to a Docker daemon, including common
            container configurations.</para>
      <para>The Docker configuration metadata is provided to KIWI NG as part of the
            <xref linkend="description-components"/> using the
            <literal>&lt;containerconfig&gt;</literal> tag. The following configuration metadata can be
            specified:</para>
      <para><literal>containerconfig</literal> attributes:</para>
      <itemizedlist>
        <listitem>
          <para><literal>name</literal>: Specifies the repository name of the Docker
                    image.</para>
        </listitem>
        <listitem>
          <para><literal>tag</literal>: Sets the tag of the Docker image.</para>
        </listitem>
        <listitem>
          <para><literal>maintainer</literal>: Specifies the author field of
                    the container.</para>
        </listitem>
        <listitem>
          <para><literal>user</literal>: Sets the user name or user id (UID) to be used when
                    running <literal>entrypoint</literal> and
                    <literal>subcommand</literal>. Equivalent of the <literal>USER</literal> directive of a Docker file.</para>
        </listitem>
        <listitem>
          <para><literal>workingdir</literal>: Sets the working directory to be used when running  and
                    <literal>entrypoint</literal>. Equivalent of the <literal>WORKDIR</literal> directive of a Docker file.</para>
        </listitem>
      </itemizedlist>
      <para><literal>containerconfig</literal> child tags:</para>
      <itemizedlist>
        <listitem>
          <para><literal>subcommand</literal>: Provides the default execution parameters of the
                    container. Equivalent of the <literal>CMD</literal> directive of a Docker file.</para>
        </listitem>
        <listitem>
          <para><literal>labels</literal>: Adds custom metadata to an image using key-value pairs.
                    Equivalent to one or more <literal>LABEL</literal> directives of a Docker file.</para>
        </listitem>
        <listitem>
          <para><literal>expose</literal>: Informs at which ports is the container listening at runtime.
                    Equivalent to one or more <literal>EXPOSE</literal> directives of a Docker file.</para>
        </listitem>
        <listitem>
          <para><literal>environment</literal>: Sets an environment values using key-value pairs.
                    Equivalent to one or more the <literal>env</literal> directives of a Docker file.</para>
        </listitem>
        <listitem>
          <para><literal>entrypoint</literal>: Sets the command that the container will run, it can
                    include parameters. Equivalent of the <literal>ENTRYPOINT</literal> directive of a Docker
                    file.</para>
        </listitem>
        <listitem>
          <para><literal>volumes</literal>: Create mountpoints with the given name and mark it to hold
                    external volumes from the host or from other containers. Equivalent to
                    one or more <literal>VOLUME</literal> directives of a Docker file.</para>
        </listitem>
      </itemizedlist>
      <para>Other Docker file directives such as <literal>RUN</literal>, <literal>COPY</literal> or <literal>ADD</literal>, can be
            mapped to KIWI NG by using the <xref linkend="description-components"/>
            script file to run bash commands or the
            <xref linkend="description-components"/> to include extra files.</para>
      <para>The following example shows how to build a Docker base image based on
            openSUSE Leap:</para>
      <procedure>
        <step>
          <para>Make sure you have checked out the example image descriptions,
                    see <xref linkend="example-descriptions"/>.</para>
        </step>
        <step>
          <para>Include the <literal>Virtualization/containers</literal> repository to your list:</para>
          <screen language="bash">$ zypper addrepo http://download.opensuse.org/repositories/Virtualization:/containers/&lt;DIST&gt; container-tools</screen>
          <para>where the placeholder <literal>&lt;DIST&gt;</literal> is the preferred distribution.</para>
        </step>
        <step>
          <para>Install <command>umoci</command> and <command>skopeo</command> tools</para>
          <screen language="bash">$ zypper in umoci skopeo</screen>
        </step>
        <step>
          <para>Build the image with KIWI NG:</para>
          <screen language="bash">$ sudo kiwi-ng --type docker system build \
    --description kiwi-descriptions/suse/x86_64/suse-tumbleweed-docker \
    --target-dir /tmp/myimage</screen>
        </step>
        <step>
          <para>Test the Docker image.</para>
          <para>First load the new image</para>
          <screen language="bash">$ docker load -i openSUSE-Tumbleweed-container-image.x86_64-1.0.4.docker.tar.xz</screen>
          <para>then run the loaded image:</para>
          <screen language="bash">$ docker run -it opensuse:42.2 /bin/bash</screen>
        </step>
      </procedure>
    </section>
    <section xml:id="building-wsl-build" xml:base="building_images/build_wsl_container">
      <title>Build a WSL Container Image</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page explains how to build a WSL/Appx container image.
                WSL stands for Windows Subsystem Linux and is a zip based
                container format consumable by Windows 10 with enabled
                WSL functionality.</para>
      </formalpara>
      <para>KIWI NG is capable of building WSL images using the <command>appx</command>
            utility. Make sure you have installed a package that provides
            this command on your build host.</para>
      <para>Once the build host has the <command>appx</command> installed, the
            following image type setup is required in the XML description
            <literal>config.xml</literal>:</para>
      <screen language="xml">&lt;type image="appx" metadata_path="/meta/data"/&gt;</screen>
      <para>The <literal>/meta/data</literal> path specifies a path that provides
            additional information required for the <command>WSL-DistroLauncher</command>.
            This component consists out of a Windows(<literal>exe</literal>) executable file and
            an <literal>AppxManifest.xml</literal> file which references other files
            like icons and resource configurations for the startup of the
            container under Windows.</para>
      <note>
        <para>
          <emphasis role="bold">/meta/data</emphasis>
        </para>
        <para>Except for the root filesystem tarball KIWI NG is not
                responsible for providing the meta data required for
                the <command>WSL-DistroLauncher</command>. It is expected that
                the given metadata path contains all the needed information.
                Typically this information is delivered in a package
                provided by the Distribution and installed on the
                build host</para>
      </note>
      <section xml:id="setup-of-the-wsl-distrolauncher">
        <title>Setup of the WSL-DistroLauncher</title>
        <para>The contents of the <literal>AppxManifest.xml</literal> will be changed by KIWI NG
                if a <literal>containerconfig</literal> section is provided in the XML description.
                In the context of a WSL image the following container configuration
                parameters are taken into account:</para>
        <screen language="xml">&lt;containerconfig name="my-wsl-container"&gt;
    &lt;history
        created_by="Organisation"
        author="Name"
        application_id="AppIdentification"
        package_version="https://docs.microsoft.com/en-us/windows/uwp/publish/package-version-numbering"
        launcher="WSL-DistroLauncher-exe-file"
    &gt;Container Description Text&lt;/history&gt;
&lt;/containerconfig&gt;</screen>
        <para>All information provided here including the entire section is optional.
                If not provided the existing <literal>AppxManifest.xml</literal> stays untouched.</para>
        <variablelist>
          <varlistentry>
            <term>created_by</term>
            <listitem>
              <para>Provides the name of a publisher organisation. An appx container
                            needs to be signed off with a digital signature. If the image is
                            build in the Open Build Service (OBS) this happens automatically.
                            Outside of OBS one needs to make sure the given publisher organisation
                            name matches the certificate used for signing.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>author</term>
            <listitem>
              <para>Provides the name of the author and maintainer of this container</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>application_id</term>
            <listitem>
              <para>Provides an ID name for the container. The name must start with
                            a letter and only allows alphanumeric characters. KIWI NG will not
                            validate the given name string because there is no common criteria
                            between the container architectures. KIWI NG just accepts any text.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>package_version</term>
            <listitem>
              <para>Provides the version identification for the container. KIWI NG
                            validates this against the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://docs.microsoft.com/en-us/windows/uwp/publish/package-version-numbering">Microsoft Package Version Numbering</link> rules.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>launcher</term>
            <listitem>
              <para>Provides the binary file name of the launcher <literal>.exe</literal> file.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <warning>
          <para>There is no validation by KIWI NG if the contents of <literal>AppxManifest.xml</literal>
                    are valid or complete to run the container. Users will find out at
                    call time, not before</para>
        </warning>
        <para>The following example shows how to build a WSL image based on
                openSUSE TW:</para>
        <procedure>
          <step>
            <para>Make sure you have checked out the example image descriptions,
                        see <xref linkend="example-descriptions"/>.</para>
          </step>
          <step>
            <para>Include the <literal>Virtualization/WSL</literal> repository to your list:</para>
            <screen language="bash">$ zypper addrepo http://download.opensuse.org/repositories/Virtualization:/WSL/&lt;DIST&gt; WSL</screen>
            <para>where the placeholder <literal>&lt;DIST&gt;</literal> is the preferred distribution.</para>
          </step>
          <step>
            <para>Install <command>fb-util-for-appx</command> utility and a package that
                        provides the <command>WSL-DistroLauncher</command> metadata. See the
                        above note about <literal>/meta/data</literal></para>
            <screen language="bash">$ zypper in fb-util-for-appx DISTRO_APPX_METADATA_PACKAGE</screen>
            <note>
              <para>If you are building in the Open Build Service make sure
                            to add the packages from the zypper call above to your
                            project config via <command>osc meta -e prjconf</command> and
                            a line of the form <literal>support: PACKAGE_NAME</literal> for
                            each package that needs to be installed on the Open Build
                            Service worker that runs the KIWI NG build process.</para>
            </note>
          </step>
          <step>
            <para>Setup the image type:</para>
            <para>Edit the XML description file:
                        <literal>kiwi-descriptions/suse/x86_64/suse-tumbleweed/config.xml</literal>
                        and add the following type and containerconfig:</para>
            <screen language="xml">&lt;type image="appx" metadata_path="/meta/data"&gt;
    &lt;containerconfig name="Tumbleweed"&gt;
        &lt;history
            created_by="SUSE"
            author="KIWI-Team"
            application_id="tumbleweed"
            package_version="2003.12.0.0"
            launcher="openSUSE-Tumbleweed.exe"
        &gt;Tumbleweed Appliance text based&lt;/history&gt;
    &lt;/containerconfig&gt;
&lt;/type&gt;</screen>
            <warning>
              <para>If the configured metadata path does not exist the build
                            will fail. Furthermore there is no validation by KIWI NG
                            that the contents of the metadata path are valid or
                            complete with respect to the requirements of the
                            <command>WSL-DistroLauncher</command></para>
            </warning>
          </step>
          <step>
            <para>Build the image with KIWI NG:</para>
            <screen language="bash">$ sudo kiwi-ng --type appx system build \
    --description kiwi-descriptions/suse/x86_64/suse-tumbleweed \
    --target-dir /tmp/myimage</screen>
          </step>
        </procedure>
      </section>
      <section xml:id="testing-the-wsl-image">
        <title>Testing the WSL image</title>
        <para>For testing the image a Windows 10 system is required. As a first step
                the optional feature named <literal>Microsoft-Windows-Subsystem-Linux</literal>
                must be enabled. For further details on how to setup the Windows machine
                see the following documentation:
                <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://docs.microsoft.com/en-us/windows/wsl/about">Windows Subsystem for Linux</link></para>
      </section>
    </section>
    <section xml:id="kis" xml:base="building_images/build_kis">
      <title>Build KIS Image (Kernel, Initrd, System)</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page explains how to build an image that consists
                out of three components. The kernel an initrd and an
                optional root filesystem image. In KIWI NG terminology
                this is called KIS.</para>
      </formalpara>
      <para>A KIS image is a collection of image components that are not
            associated with a dedicated use case. This means from a KIWI NG
            perspective we don’t know in which environment these components
            are later used. The predecessor of this image type was called
            <literal>pxe</literal> under the assumption that the components will be used
            in a pxe boot environment. However this assumption is not
            neccessarily true and the image components are used in a different
            way. Because there are so many possible deployment strategies
            for a <literal>kernel</literal> plus <literal>initrd</literal> and optional <literal>system root filesystem</literal>,
            KIWI NG provides this as generic <literal>KIS</literal> type that is generically
            usable.</para>
      <para>The former <literal>pxe</literal> image type will continue to exist but is expected
            to be used only in combination with the legacy <literal>netboot</literal> infrastructure
            as described in <xref linkend="build-legacy-pxe"/>.</para>
      <para>To add a KIS build to your appliance, create a  element with
            <literal>image</literal> set to <literal>kis</literal> in your <literal>config.xml</literal> as shown below:</para>
      <screen language="xml">&lt;preferences&gt;
    &lt;type image="kis"/&gt;
&lt;/preferences&gt;</screen>
      <para>With this image type setup KIWI NG will just build a kernel and initrd
            not associated to any system root file system. Usually such
            an image is only useful with some custom dracut extensions
            as part of the image description.</para>
      <para>The following attributes of the  element are often used when
            building KIS images:</para>
      <itemizedlist>
        <listitem>
          <para><literal>filesystem</literal>: Specifies the root filesystem and triggers the build
                    of an additional filesystem image of that filesystem. The generated
                    kernel command line options file (append file) will then also
                    include a <literal>root=</literal> parameter that references this filesystem image UUID.
                    If the information from the append file should be used or not is
                    optional.</para>
        </listitem>
        <listitem>
          <para><literal>kernelcmdline</literal>: Specifies kernel command line options that will be
                    part of the generated kernel command line options file (append file).
                    By default the append file contains no information or the reference
                    to the root UUID if the <literal>filesystem</literal> attribute is used.</para>
        </listitem>
      </itemizedlist>
      <para>All other attributes of the  element that applies to an optional
            root filesystem image will be effective in the system image of a KIS
            image as well.</para>
      <para>With the appropriate settings present in <literal>config.xml</literal> KIWI NG can now
            build the image:</para>
      <screen language="bash">$ sudo kiwi-ng --profile KIS system build \
    --description kiwi-descriptions/suse/x86_64/suse-leap-15.1 \
    --target-dir /tmp/myimage</screen>
      <para>The resulting image components are saved in the folder <literal>/tmp/myimage</literal>.
            Outside of a deployment infrastructure the example KIS image can be
            tested with QEMU as follows:</para>
      <screen language="bash">$ sudo qemu
    -kernel /tmp/myimage/*.kernel \
    -initrd /tmp/myimage/*.initrd.xz \
    -append $(cat /tmp/myimage/*.append) \
    -hda /tmp/myimage/Leap-15.1_appliance.*-1.15.1 \</screen>
      <note>
        <para>For testing the components of a KIS image a deployment infrastructure
                and also a deployment process is usually needed. One example of a
                deployment infrastructure using PXE is provided by KIWI NG with the
                <literal>netboot</literal> infrastructure. However that netboot infrastructure is no
                longer developed and only kept for compatibiliy reasons. For details
                see <xref linkend="build-legacy-pxe"/></para>
      </note>
    </section>
  </chapter>
  <chapter xml:id="working-with-images" xml:base="working_with_images">
    <title>Working with Images</title>
    <note>
      <para>This document provides a collection of worksheets which
                describes the creation and setup of appliances to work
                within a number of different target environments.</para>
    </note>
    <section xml:id="iso-to-usb-stick" xml:base="working_with_images/iso_to_usb_stick_deployment">
      <title>Deploy ISO Image on an USB Stick</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for handling
                ISO images built with KIWI NG and references the following
                articles:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="hybrid-iso"/>
          </para>
        </listitem>
      </itemizedlist>
      <para>In KIWI NG all generated ISO images are created to be hybrid. This means,
            the image can be used as a CD/DVD or as a disk. This works because
            the ISO image also has a partition table embedded. With more and more
            computers delivered without a CD/DVD drive this becomes important.</para>
      <para>The very same ISO image can be copied onto a USB stick and used as a
            bootable disk. The following procedure shows how to do this:</para>
      <procedure>
        <step>
          <para>Plug in a USB stick</para>
          <para>Once plugged in, check which Unix device name the stick was assigned
                    to. The following command provides an overview about all linux
                    storage devices:</para>
          <screen language="bash">$ lsblk</screen>
        </step>
        <step>
          <para>Dump the ISO image on the USB stick:</para>
          <warning>
            <para>Make sure the selected device really points to your stick because
                        the following operation can not be revoked and will destroy all
                        data on the selected device</para>
          </warning>
          <screen language="bash">$ dd if=Leap-15.1_appliance.x86_64-1.15.1.iso of=/dev/&lt;stickdevice&gt;</screen>
        </step>
        <step>
          <para>Boot from your USB Stick</para>
          <para>Activate booting from USB in your BIOS/UEFI. As many firmware has different
                    procedures on how to do it, look into your user manual.
                    Many firmware offers a boot menu which can be activated at boot time.</para>
        </step>
      </procedure>
    </section>
    <section xml:id="iso-as-file-to-usb-stick" xml:base="working_with_images/iso_to_usb_stick_file_based_deployment">
      <title>Deploy ISO Image as File on a FAT32 Formated USB Stick</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for handling
                ISO images built with KIWI NG and references the following
                articles:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="hybrid-iso"/>
          </para>
        </listitem>
      </itemizedlist>
      <para>In KIWI NG, all generated ISO images are created to be hybrid. This means,
            the image can be used as a CD/DVD or as a disk. The deployment of such
            an image onto a disk like an USB stick normally destroys all existing
            data on this device. Most USB sticks are pre-formatted with a FAT32
            Windows File System and to keep the existing data on the stick untouched
            a different deployment needs to be used.</para>
      <para>The following deployment process copies the ISO image as an
            additional file to the USB stick and makes the USB stick bootable.
            The ability to boot from the stick is configured through a SYSLINUX
            feature which allows to loopback mount an ISO file and boot the
            kernel and initrd directly from the ISO file.</para>
      <para>The initrd loaded in this process must also be able to loopback
            mount the ISO file to access the root filesystem and boot the
            live system. The dracut initrd system used by KIWI NG provides this
            feature upstream called as “iso-scan”. Therefore all KIWI NG generated
            live ISO images supports this deployment mode.</para>
      <para>For copying the ISO file on the USB stick and the setup of the
            SYSLINUX bootloader to make use of the “iso-scan” feature an extra tool
            named <literal>live-grub-stick</literal> exists. The following procedure shows how
            to setup the USB stick with <literal>live-grub-stick</literal>:</para>
      <procedure>
        <step>
          <para>Install the <literal>live-grub-stick</literal> package from software.opensuse.org:</para>
        </step>
        <step>
          <para>Plug in a USB stick</para>
          <para>Once plugged in, check which Unix device name the FAT32 partition
                    was assigned to. The following command provides an overview about all
                    storage devices and their filesystems:</para>
          <screen language="bash">$ sudo lsblk --fs</screen>
        </step>
        <step>
          <para>Call the <literal>live-grub-stick</literal> command as follows:</para>
          <para>Assuming “/dev/sdz1” was the FAT32 partition selected from the
                    output of the <literal>lsblk</literal> command:</para>
          <screen language="bash">$ sudo live-grub-stick Leap-15.1_appliance.x86_64-1.15.1.iso /dev/sdz1</screen>
        </step>
        <step>
          <para>Boot from your USB Stick</para>
          <para>Activate booting from USB in your BIOS/UEFI. As many firmware has different
                    procedures on how to do it, look into your user manual.
                    EFI booting from iso image is not supported at the moment, for EFI booting
                    use –isohybrid option with live-grub-stick, however note that all the data
                    on the stick will be lost.
                    Many firmware offers a boot menu which can be activated at boot time.
                    Usually this can be reached by pressing the <literal>Esc</literal> or <literal>F12</literal> keys.</para>
        </step>
      </procedure>
    </section>
    <section xml:id="setup-for-ec2" xml:base="working_with_images/disk_setup_for_ec2">
      <title>Image Description for Amazon EC2</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for handling
                Amazon EC2 images built with KIWI NG and references the following
                articles:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="simple-disk"/>
          </para>
        </listitem>
      </itemizedlist>
      <para>A virtual disk image which is able to boot in the Amazon EC2
            cloud framework has to comply the following constraints:</para>
      <itemizedlist>
        <listitem>
          <para>Xen tools and libraries must be installed</para>
        </listitem>
        <listitem>
          <para>cloud-init package must be installed</para>
        </listitem>
        <listitem>
          <para>cloud-init configuration for Amazon must be provided</para>
        </listitem>
        <listitem>
          <para>Grub bootloader modules for Xen must be installed</para>
        </listitem>
        <listitem>
          <para>AWS tools must be installed</para>
        </listitem>
        <listitem>
          <para>Disk size must be set to 10G</para>
        </listitem>
        <listitem>
          <para>Kernel parameters must allow for xen console</para>
        </listitem>
      </itemizedlist>
      <para>To meet this requirements add or update the KIWI NG image
            description as follows:</para>
      <procedure>
        <step>
          <para>Software packages</para>
          <para>Make sure to add the following packages to the package list</para>
          <note>
            <para>Package names used in the following list matches the
                        package names of the SUSE distribution and might be different
                        on other distributions.</para>
          </note>
          <screen language="xml">&lt;package name="aws-cli"/&gt;
&lt;package name="grub2-x86_64-xen"/&gt;
&lt;package name="xen-libs"/&gt;
&lt;package name="xen-tools-domU"/&gt;
&lt;package name="cloud-init"/&gt;</screen>
        </step>
        <step>
          <para>Image Type definition</para>
          <para>Update the oem image type setup as follows</para>
          <screen language="xml">&lt;type image="oem"
      filesystem="ext4"
      kernelcmdline="console=xvc0 multipath=off net.ifnames=0"
      devicepersistency="by-label"
      firmware="ec2"&gt;
  &lt;bootloader name="grub2" timeout="1"/&gt;
  &lt;size unit="M"&gt;10240&lt;/size&gt;
  &lt;machine xen_loader="hvmloader"/&gt;
  &lt;oemconfig&gt;
      &lt;oem-resize&gt;false&lt;/oem-resize&gt;
  &lt;/oemconfig&gt;
&lt;/type&gt;</screen>
        </step>
        <step>
          <para>Cloud Init setup</para>
          <para>Cloud init is a service which runs at boot time and allows
                    to customize the system by activating one ore more cloud init
                    modules. For Amazon EC2 the following configuration file
                    <literal>/etc/cloud/cloud.cfg</literal> needs to be provided as part of the
                    overlay files in your KIWI NG image description</para>
          <screen language="yaml">users:
  - default

disable_root: true
preserve_hostname: false
syslog_fix_perms: root:root

datasource_list: [ NoCloud, Ec2, None ]

cloud_init_modules:
  - migrator
  - bootcmd
  - write-files
  - growpart
  - resizefs
  - set_hostname
  - update_hostname
  - update_etc_hosts
  - ca-certs
  - rsyslog
  - users-groups
  - ssh

cloud_config_modules:
  - mounts
  - ssh-import-id
  - locale
  - set-passwords
  - package-update-upgrade-install
  - timezone

cloud_final_modules:
  - scripts-per-once
  - scripts-per-boot
  - scripts-per-instance
  - scripts-user
  - ssh-authkey-fingerprints
  - keys-to-console
  - phone-home
  - final-message
  - power-state-change

system_info:
  default_user:
    name: ec2-user
    gecos: "cloud-init created default user"
    lock_passwd: True
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    shell: /bin/bash
  paths:
    cloud_dir: /var/lib/cloud/
    templates_dir: /etc/cloud/templates/
  ssh_svcname: sshd</screen>
        </step>
      </procedure>
      <para>An image built with the above setup can be uploaded into the
            Amazon EC2 cloud and registered as image. For further information
            on how to upload to EC2 see: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/SUSE-Enceladus/ec2imgutils">ec2uploadimg</link></para>
    </section>
    <section xml:id="setup-for-azure" xml:base="working_with_images/disk_setup_for_azure">
      <title>Image Description for Microsoft Azure</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for handling
                Azure disk images built with KIWI NG and references the
                following articles:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="simple-disk"/>
          </para>
        </listitem>
      </itemizedlist>
      <para>A virtual disk image which is able to boot in the Microsoft Azure
            cloud framework has to comply the following constraints:</para>
      <itemizedlist>
        <listitem>
          <para>Hyper-V tools must be installed</para>
        </listitem>
        <listitem>
          <para>Microsoft Azure Agent must be installed</para>
        </listitem>
        <listitem>
          <para>Disk size must be set to 30G</para>
        </listitem>
        <listitem>
          <para>Kernel parameters must allow for serial console</para>
        </listitem>
      </itemizedlist>
      <para>To meet this requirements update the KIWI NG image
            description as follows:</para>
      <procedure>
        <step>
          <para>Software packages</para>
          <para>Make sure to add the following packages to the package list</para>
          <note>
            <para>Package names used in the following list matches the
                        package names of the SUSE distribution and might be different
                        on other distributions.</para>
          </note>
          <screen language="xml">&lt;package name="hyper-v"/&gt;
&lt;package name="python-azure-agent"/&gt;</screen>
        </step>
        <step>
          <para>Image Type definition</para>
          <para>Update the oem image type setup as follows</para>
          <screen language="xml">&lt;type image="oem"
      filesystem="ext4"
      kernelcmdline="console=ttyS0 rootdelay=300 net.ifnames=0"
      devicepersistency="by-uuid"
      format="vhd-fixed"
      formatoptions="force_size"
      bootpartition="true"
      bootpartsize="1024"&gt;
  &lt;bootloader name="grub2" timeout="1"/&gt;
  &lt;size unit="M"&gt;30720&lt;/size&gt;
  &lt;oemconfig&gt;
      &lt;oem-resize&gt;false&lt;/oem-resize&gt;
  &lt;/oemconfig&gt;
&lt;/type&gt;</screen>
        </step>
      </procedure>
      <para>An image built with the above setup can be uploaded into the
            Microsoft Azure cloud and registered as image. For further
            information on how to upload to Azure see:
            <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/SUSE-Enceladus/azurectl">azurectl</link></para>
    </section>
    <section xml:id="setup-for-gce" xml:base="working_with_images/disk_setup_for_google">
      <title>Image Description for Google Compute Engine</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for handling
                GCE images built with KIWI NG and references the following
                articles:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="simple-disk"/>
          </para>
        </listitem>
      </itemizedlist>
      <para>A virtual disk image which is able to boot in the Google Compute Engine
            cloud framework has to comply the following constraints:</para>
      <itemizedlist>
        <listitem>
          <para>KIWI NG type must be an expandable disk</para>
        </listitem>
        <listitem>
          <para>Google Compute Engine init must be installed</para>
        </listitem>
        <listitem>
          <para>Disk size must be set to 10G</para>
        </listitem>
        <listitem>
          <para>Kernel parameters must allow for serial console</para>
        </listitem>
      </itemizedlist>
      <para>To meet this requirements update the KIWI NG image
            description as follows:</para>
      <procedure>
        <step>
          <para>Software packages</para>
          <para>Make sure to add the following packages to the package list</para>
          <note>
            <para>Package names used in the following list matches the
                        package names of the SUSE distribution and might be different
                        on other distributions.</para>
          </note>
          <screen language="xml">&lt;package name="google-compute-engine-init"/&gt;</screen>
        </step>
        <step>
          <para>Image Type definition</para>
          <para>To allow the image to be expanded to the configured disk
                    geometry of the instance started by Google Compute Engine it is
                    suggested to let KIWI NG’s OEM boot code take over that task. It would
                    also be possible to try cloud-init’s resize module but we found
                    conflicts when two cloud init systems, <literal>google-compute-engine-init</literal> and
                    <literal>cloud-init</literal> were used together. Thus for now we stick with KIWI NG’s
                    boot code which can resize the disk from within the initrd before
                    the system gets activated through systemd.</para>
          <para>Update the oem image type setup to be changed into an expandable
                    type as follows:</para>
          <screen language="xml">&lt;type image="oem"
      initrd_system="dracut"
      filesystem="ext4"
      kernelcmdline="console=ttyS0,38400n8 net.ifnames=0"
      format="gce"&gt;
  &lt;bootloader name="grub2" timeout="1"/&gt;
  &lt;size unit="M"&gt;10240&lt;/size&gt;
  &lt;oemconfig&gt;
      &lt;oem-resize&gt;true&lt;/oem-resize&gt;
      &lt;oem-swap&gt;false&lt;/oem-swap&gt;
  &lt;/oemconfig&gt;
&lt;/type&gt;</screen>
        </step>
      </procedure>
      <para>An image built with the above setup can be uploaded into the
            Google Compute Engine cloud and registered as image. For further information
            on how to upload to Google see: <literal>google-cloud-sdk</literal> on software.opensuse.org</para>
    </section>
    <section xml:id="network-boot-server" xml:base="working_with_images/setup_network_bootserver">
      <title>Setting Up a Network Boot Server</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides general information how to setup
                a network boot server that provides all services
                needed for the PXE boot protocol</para>
      </formalpara>
      <para>To be able to deploy a system through the PXE boot protocol, you need
            to set up a network boot server providing the services DHCP and tftp.
            With <literal>dnsmasq</literal> an utility exists which allows to setup all needed
            services at once:</para>
      <section xml:id="installing-and-configuring-dhcp-and-tftp-with-dnsmasq">
        <title>Installing and Configuring DHCP and TFTP with dnsmasq</title>
        <para>The following instructions can only serve as an example. Depending on your
                network structure, the IP addresses, ranges and domain settings needs to
                be adapted to allow the DHCP server to work within your network. If you
                already have a DHCP server running in your network, make sure that the
                <literal>filename</literal> and <literal>next-server</literal> directives are correctly set on this server.</para>
        <para>The following steps describe how to set up dnsmasq to work as
                DHCP and TFTP server.</para>
        <procedure>
          <step>
            <para>Install the <literal>dnsmasq</literal> package.</para>
          </step>
          <step>
            <para>Create the file <literal>/etc/dnsmasq.conf</literal> and insert the following content</para>
            <screen language="bash"># Don't function as a DNS server.
port=0

# Log information about DHCP transactions.
log-dhcp

# Set the root directory for files available via FTP,
# usually "/srv/tftpboot":
tftp-root=TFTP_ROOT_DIR

enable-tftp

dhcp-range=BOOT_SERVER_IP,proxy</screen>
            <para>In the next step it’s required to decide for the boot method. There
                        is the PXE loader provided via pxelinux.0 from the syslinux package
                        and there is the GRUB loader provided via the grub package.</para>
            <note>
              <para>Placeholders</para>
              <para>Replace all placeholders (written in uppercase) with data fitting
                            your network setup.</para>
            </note>
          </step>
        </procedure>
        <para>2.1. insert the following content to use pxelinux.0:</para>
        <screen language="bash"># The boot filename, Server name, Server Ip Address
dhcp-boot=pxelinux.0,,BOOT_SERVER_IP

# Disable re-use of the DHCP servername and filename fields as extra
# option space. That's to avoid confusing some old or broken
# DHCP clients.
dhcp-no-override

# PXE menu.  The first part is the text displayed to the user.
# The second is the timeout, in seconds.
pxe-prompt="Booting FOG Client", 1

# The known types are x86PC, PC98, IA64_EFI, Alpha, Arc_x86,
# Intel_Lean_Client, IA32_EFI, BC_EFI, Xscale_EFI and X86-64_EFI
# This option is first and will be the default if there is no input
# from the user.
pxe-service=X86PC, "Boot to FOG", pxelinux.0
pxe-service=X86-64_EFI, "Boot to FOG UEFI", ipxe
pxe-service=BC_EFI, "Boot to FOG UEFI PXE-BC", ipxe</screen>
        <note>
          <para>On boot of a network client with that configuration the default
                        pxelinux.0 config file is expected at
                        <literal>TFTP_ROOT_DIR/pxelinux.cfg/default</literal></para>
        </note>
        <para>2.2. insert the following content to use grub:</para>
        <screen language="bash"># The boot filename, Server name, Server Ip Address
dhcp-boot=boot/grub2/i386-pc/core.0,,BOOT_SERVER_IP</screen>
        <para>When using grub the referenced dhcp-boot grub module must be genereated.
                    To do this change the directory to <literal>TFTP_ROOT_DIR</literal> and create
                    the <literal>setvars.conf</literal> with the following content:</para>
        <screen language="bash">set root=(tftp)
set net_default_server=BOOT_SERVER_IP
set prefix=boot/grub2</screen>
        <para>Now call the following commands to create the grub module</para>
        <screen language="bash">$ grub2-mknetdir --net-directory=TFTP_ROOT_DIR --subdir=boot/grub2
$ grub2-mkimage -O i386-pc-pxe \
    --output boot/grub2/i386-pc/core.0 \
    --prefix=/boot/grub2 \
    -c setvars.conf \
  pxe tftp</screen>
        <note>
          <para>On boot of a network client with that configuration the grub
                        config file is expected at <literal>TFTP_ROOT_DIR/boot/grub2/grub.cfg</literal></para>
        </note>
        <procedure>
          <step>
            <para>Run the dnsmasq server by calling:</para>
            <screen language="bash">systemctl start dnsmasq</screen>
          </step>
        </procedure>
      </section>
    </section>
    <section xml:id="yast-on-boot" xml:base="working_with_images/setup_yast_on_first_boot">
      <title>Setting Up YaST at First Boot</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides information how to setup the KIWI NG
                XML description to start the SUSE YaST system setup
                utility at first boot of the image</para>
      </formalpara>
      <para>To be able to use YaST in a non interactive way, create a
            YaST profile which tells the autoyast module what to do.
            To create the profile, run:</para>
      <screen language="bash">yast autoyast</screen>
      <para>Once the YaST profile exists, update the KIWI NG XML description
            as follows:</para>
      <procedure>
        <step>
          <para>Edit the KIWI NG XML file and add the following package to
                    the <literal>&lt;packages type="image"&gt;</literal> section:</para>
          <screen language="xml">&lt;package name="yast2-firstboot"/&gt;</screen>
        </step>
        <step>
          <para>Copy the YaST profile file as overlay file to your KIWI NG image
                    description overlay directory:</para>
          <screen language="bash">cd IMAGE_DESCRIPTION_DIRECTORY
mkdir -p root/etc/YaST2
cp PROFILE_FILE root/etc/YaST2/firstboot.xml</screen>
        </step>
        <step>
          <para>Copy and activate the YaST firstboot template.
                    This is done by the following instructions which needs to be written
                    into the KIWI NG <literal>config.sh</literal> which is stored in the image
                    description directory:</para>
          <screen language="bash">sysconfig_firsboot=/etc/sysconfig/firstboot
sysconfig_template=/var/adm/fillup-templates/sysconfig.firstboot
if [ ! -e "${sysconfig_firsboot}" ]; then
    cp "${sysconfig_template}" "${sysconfig_firsboot}"
fi

touch /var/lib/YaST2/reconfig_system</screen>
        </step>
      </procedure>
    </section>
    <section xml:id="setup-vagrant" xml:base="working_with_images/disk_setup_for_vagrant">
      <title>Image Description for Vagrant</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for handling
                Vagrant controlled disk images built with KIWI NG and references
                the following article:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="simple-disk"/>
          </para>
        </listitem>
      </itemizedlist>
      <para><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.vagrantup.com">Vagrant</link> is a framework to
            implement consistent processing/testing work environments based on
            Virtualization technologies. To run a system, Vagrant needs so-called
            <emphasis role="bold">boxes</emphasis>. A box is a TAR archive containing a virtual disk image and
            some metadata.</para>
      <para>To build Vagrant boxes, you can use <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.packer.io">Packer</link> which
            is provided by Hashicorp itself. Packer is based on the official
            installation media (DVDs) as shipped by the distribution vendor.</para>
      <para>The KIWI NG way of building images might be helpful, if such a media does not
            exist or does not suit your needs. For example, if the distribution is
            still under development or you want to use a collection of your own
            repositories. Note, that in contrast to Packer KIWI NG only supports the
            libvirt and VirtualBox providers. Other providers require a different box
            layout that is currently not supported by KIWI NG.</para>
      <para>In addition, you can use the KIWI NG image description as source for the
            <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://openbuildservice.org">Open Build Service</link> which allows
            building and maintaining boxes.</para>
      <para>Vagrant expects boxes to be setup in a specific way (for details refer to
            the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.vagrantup.com/docs/boxes/base.html">Vagrant box documentation</link>.), applied to the
            referenced KIWI NG image description from <xref linkend="simple-disk"/>, the following
            steps are required:</para>
      <procedure>
        <step>
          <para>Update the image type setup</para>
          <screen language="xml">&lt;type image="oem" filesystem="ext4" format="vagrant"&gt;
    &lt;bootloader name="grub2" timeout="0"/&gt;
    &lt;vagrantconfig provider="libvirt" virtualsize="42"/&gt;
    &lt;size unit="G"&gt;42&lt;/size&gt;
    &lt;oemconfig&gt;
        &lt;oem-resize&gt;false&lt;/oem-resize&gt;
    &lt;/oemconfig&gt;
&lt;/type&gt;</screen>
          <para>This modifies the type to build a Vagrant box for the libvirt
                    provider including a pre-defined disk size. The disk size is
                    optional, but recommended to provide some free space on disk.</para>
          <para>For the VirtualBox provider, the additional attribute
                    <literal>virtualbox_guest_additions_present</literal> can be set to <literal>true</literal> when the
                    VirtualBox guest additions are installed in the KIWI NG image:</para>
          <screen language="xml">&lt;type image="oem" filesystem="ext4" format="vagrant"&gt;
    &lt;bootloader name="grub2" timeout="0"/&gt;
    &lt;vagrantconfig
      provider="virtualbox"
      virtualbox_guest_additions_present="true"
      virtualsize="42"
    /&gt;
    &lt;size unit="G"&gt;42&lt;/size&gt;
    &lt;oemconfig&gt;
        &lt;oem-resize&gt;false&lt;/oem-resize&gt;
    &lt;/oemconfig&gt;
&lt;/type&gt;</screen>
          <para>The resulting Vagrant box then uses the <literal>vboxfs</literal> module for the
                    synchronized folder instead of <literal>rsync</literal>, that is used by default.</para>
        </step>
        <step>
          <para>Add mandatory packages</para>
          <screen language="xml">&lt;package name="sudo"/&gt;
&lt;package name="openssh"/&gt;</screen>
        </step>
        <step>
          <para>Add additional packages</para>
          <para>If you have set the attribute <literal>virtualbox_guest_additions_present</literal> to
                    <literal>true</literal>, add the VirtualBox guest additions. For openSUSE the following
                    packages are required:</para>
          <screen language="xml">&lt;package name="virtualbox-guest-tools"/&gt;
&lt;package name="virtualbox-guest-x11"/&gt;
&lt;package name="virtualbox-guest-kmp-default"/&gt;</screen>
          <para>Otherwise, you must add <literal>rsync</literal>:</para>
          <screen language="xml">&lt;package name="rsync"/&gt;</screen>
          <para>Note that KIWI NG cannot verify whether these packages are installed. If
                    they are missing, the resulting Vagrant box will be broken.</para>
        </step>
        <step>
          <para>Add Vagrant user</para>
          <screen language="xml">&lt;users group='vagrant'&gt;
    &lt;user name='vagrant' password='vh4vw1N4alxKQ' home='/home/vagrant'/&gt;
&lt;/users&gt;</screen>
          <para>This adds the <emphasis role="bold">vagrant</emphasis> user to the system and applies the
                    name of the user as the password for login.</para>
        </step>
        <step>
          <para>Configure SSH, the default shared folder and sudo permissions</para>
          <para>Vagrant expects that it can login as the user <literal>vagrant</literal> using an
                    insecure public key . Furthermore, vagrant also usually uses
                    <literal>/vagrant</literal> as the default shared folder and assumes that the
                    <literal>vagrant</literal> user can invoke commands via <command>sudo</command> without having
                    to enter a password.</para>
          <para>This can be achieved using the function <literal>baseVagrantSetup</literal> in
                    <literal>config.sh</literal>:</para>
          <screen language="bash">baseVagrantSetup</screen>
        </step>
        <step>
          <para>Additional customizations:</para>
          <para>Additionally to <literal>baseVagrantSetup</literal>, you might want to also ensure the
                    following:</para>
          <itemizedlist>
            <listitem>
              <para>If you have installed the Virtualbox guest additions into your box,
                            then also load the <literal>vboxsf</literal> kernel module.</para>
            </listitem>
            <listitem>
              <para>When building boxes for libvirt, then ensure that the default wired
                            networking interface is called <literal>eth0</literal> and uses DHCP. This is
                            necessary since libvirt uses <literal>dnsmasq</literal> to issue IPs to the VMs. This
                            step can be omitted for Virtualbox boxes.</para>
            </listitem>
          </itemizedlist>
        </step>
      </procedure>
      <para>An image built with the above setup creates a Vagrant box file with the
            extension <literal>.vagrant.libvirt.box</literal> or
            <literal>.vagrant.virtualbox.box</literal>. Add the box file to Vagrant with the
            command:</para>
      <screen language="bash">vagrant box add my-box image-file.vagrant.libvirt.box</screen>
      <note>
        <para>Using the box with the libvirt provider requires alongside a correct
                Vagrant installation:</para>
        <itemizedlist>
          <listitem>
            <para>the plugin <literal>vagrant-libvirt</literal> to be installed</para>
          </listitem>
          <listitem>
            <para>a running libvirtd daemon</para>
          </listitem>
        </itemizedlist>
      </note>
      <para>Once added to Vagrant, boot the box and log in
            with the following sequence of <command>vagrant</command> commands:</para>
      <screen language="bash">vagrant init my-box
vagrant up --provider libvirt
vagrant ssh</screen>
      <section xml:id="customizing-the-embedded-vagrantfile">
        <title>Customizing the embedded Vagrantfile</title>
        <warning>
          <para>This is an advanced topic and not required for most users</para>
        </warning>
        <para>Vagrant ship with an embedded <literal>Vagrantfile</literal> that carries settings
                specific to this box, for instance the synchronization mechanism for the
                shared folder. KIWI NG generates such a file automatically for you and it
                should be sufficient for most use cases.</para>
        <para>If a box requires different settings in the embedded <literal>Vagrantfile</literal>,
                then the user can provide KIWI NG with a path to an alternative via the
                attribute <literal>embebbed_vagrantfile</literal> of the <literal>vagrantconfig</literal> element: it
                specifies a relative path to the <literal>Vagrantfile</literal> that will be included
                in the finished box.</para>
        <para>In the following example snippet from <literal>config.xml</literal> we add a custom
                <literal>MyVagrantfile</literal> into the box (the file should be in the image
                description directory next to <literal>config.sh</literal>):</para>
        <screen language="xml">&lt;type image="oem" filesystem="ext4" format="vagrant"&gt;
    &lt;bootloader name="grub2" timeout="0"/&gt;
    &lt;vagrantconfig
      provider="libvirt"
      virtualsize="42"
      embedded_vagrantfile="MyVagrantfile"
    /&gt;
    &lt;size unit="G"&gt;42&lt;/size&gt;
    &lt;oemconfig&gt;
        &lt;oem-resize&gt;false&lt;/oem-resize&gt;
    &lt;/oemconfig&gt;
&lt;/type&gt;</screen>
        <para>The option to provide a custom <literal>Vagrantfile</literal> can be combined with the
                usage of <emphasis>profiles</emphasis> (see <xref linkend="image-profiles"/>), so that
                certain builds can use the automatically generated <literal>Vagrantfile</literal> (in
                the following example that is the Virtualbox build) and others get a
                customized one (the libvirt profile in the following example):</para>
        <screen language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;

&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
  &lt;!-- description goes here --&gt;
  &lt;profiles&gt;
    &lt;profile name="libvirt" description="Vagrant Box for Libvirt"/&gt;
    &lt;profile name="virtualbox" description="Vagrant Box for VirtualBox"/&gt;
  &lt;/profiles&gt;

  &lt;!-- general preferences go here --&gt;

  &lt;preferences profiles="libvirt"&gt;
    &lt;type
      image="oem"
      filesystem="ext4"
      format="vagrant"&gt;
        &lt;bootloader name="grub2" timeout="0"/&gt;
        &lt;vagrantconfig
          provider="libvirt"
          virtualsize="42"
          embedded_vagrantfile="LibvirtVagrantfile"
        /&gt;
        &lt;size unit="G"&gt;42&lt;/size&gt;
        &lt;oemconfig&gt;
            &lt;oem-resize&gt;false&lt;/oem-resize&gt;
        &lt;/oemconfig&gt;
   &lt;/type&gt;
   &lt;/preferences&gt;
   &lt;preferences profiles="virtualbox"&gt;
     &lt;type
       image="oem"
       filesystem="ext4"
       format="vagrant"&gt;
         &lt;bootloader name="grub2" timeout="0"/&gt;
         &lt;vagrantconfig
           provider="virtualbox"
           virtualbox_guest_additions_present="true"
           virtualsize="42"
         /&gt;
         &lt;size unit="G"&gt;42&lt;/size&gt;
         &lt;oemconfig&gt;
             &lt;oem-resize&gt;false&lt;/oem-resize&gt;
         &lt;/oemconfig&gt;
     &lt;/type&gt;
   &lt;/preferences&gt;

   &lt;!-- remaining box description --&gt;
 &lt;/image&gt;</screen>
      </section>
    </section>
    <section xml:id="network-live-boot" xml:base="working_with_images/network_live_iso_boot">
      <title>Booting a Live ISO Image from Network</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for handling
                ISO images built with KIWI NG and references the following
                articles:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="hybrid-iso"/>
          </para>
        </listitem>
      </itemizedlist>
      <para>In KIWI NG, live ISO images can be configured to boot via the
            PXE boot protocol. This functionality requires a network boot
            server setup on the system. Details how to setup such a server
            can be found in <xref linkend="network-boot-server"/>.</para>
      <para>After the live ISO was built as shown in <xref linkend="hybrid-iso"/>,
            the following configuration steps are required to boot from
            the network:</para>
      <procedure>
        <step>
          <para>Extract initrd/kernel From Live ISO</para>
          <para>The PXE boot process loads the configured kernel and initrd from
                    the PXE server. For this reason, those two files must be extracted
                    from the live ISO image and copied to the PXE server as follows:</para>
          <screen language="bash">$ mount Leap-15.1_appliance.x86_64-1.15.1.iso /mnt
$ cp /mnt/boot/x86_64/loader/initrd /srv/tftpboot/boot/initrd
$ cp /mnt/boot/x86_64/loader/linux /srv/tftpboot/boot/linux
$ umount /mnt</screen>
          <note>
            <para>This step must be repeated with any new build of the live ISO image</para>
          </note>
        </step>
        <step>
          <para>Export Live ISO To The Network</para>
          <para>Access to the live ISO file is implemented using the AoE protocol
                    in KIWI NG. This requires the export of the live ISO file as remote
                    block device which is typically done with the <command>vblade</command>
                    toolkit. Install the following package on the system which is
                    expected to export the live ISO image:</para>
          <screen language="bash">$ zypper in vblade</screen>
          <note>
            <para>Not all versions of AoE are compatible with any kernel. This
                        means the kernel on the system exporting the live ISO image
                        must provide a compatible aoe kernel module compared to the
                        kernel used in the live ISO image.</para>
          </note>
          <para>Once done, export the live ISO image as follows:</para>
          <screen language="bash">$ vbladed 0 1 INTERFACE Leap-15.1_appliance.x86_64-1.15.1.iso</screen>
          <para>The above command exports the given ISO file as a block storage
                    device to the network of the given INTERFACE. On any machine
                    except the one exporting the file, it will appear as
                    <literal>/dev/etherd/e0.1</literal> once the <command>aoe</command> kernel module
                    was loaded. The two numbers, 0 and 1 in the above example, classifies
                    a major and minor number which is used in the device node name
                    on the reading side, in this case <literal>e0.1</literal>. The numbers given
                    at export time must match the AOEINTERFACE name as described in
                    the next step.</para>
          <note>
            <para>Only machines in the same network of the given INTERFACE
                        can see the exported live ISO image. If virtual machines
                        are the target to boot the live ISO image they could all
                        be connected through a bridge. In this case INTERFACE
                        is the bridge device. The availability scope of the live
                        ISO image on the network is in general not influenced
                        by KIWI NG and is a task for the network administrators.</para>
          </note>
        </step>
        <step>
          <para>Setup live ISO boot entry in PXE configuration</para>
          <note>
            <para>The following step assumes that the pxelinux.0 loader
                        has been configured on the boot server to boot up network
                        clients</para>
          </note>
          <para>Edit the file <literal>/srv/tftpboot/pxelinux.cfg/default</literal> and create
                    a boot entry of the form:</para>
          <screen language="bash">LABEL Live-Boot
    kernel boot/linux
    append initrd=boot/initrd rd.kiwi.live.pxe root=live:AOEINTERFACE=e0.1</screen>
          <itemizedlist>
            <listitem>
              <para>The boot parameter <literal>rd.kiwi.live.pxe</literal> tells the KIWI NG boot process to
                            setup the network and to load the required <literal>aoe</literal> kernel module.</para>
            </listitem>
            <listitem>
              <para>The boot parameter <literal>root=live:AOEINTERFACE=e0.1</literal> specifies the
                            interface name as it was exported by the <command>vbladed</command> command
                            from the last step. Currently only AoE (Ata Over Ethernet)
                            is supported.</para>
            </listitem>
          </itemizedlist>
        </step>
        <step>
          <para>Boot from the Network</para>
          <para>Within the network which has access to the PXE server and the
                    exported live ISO image, any network client can now boot the
                    live system. A test based on QEMU is done as follows:</para>
          <screen language="bash">$ qemu -boot n</screen>
        </step>
      </procedure>
    </section>
    <section xml:id="ramdisk-deployment" xml:base="working_with_images/disk_ramdisk_deployment">
      <title>Deploy and Run System in a RamDisk</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for handling
                oem images built with KIWI NG and references the following
                articles:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="expandable-disk"/>
          </para>
        </listitem>
      </itemizedlist>
      <para>If a machine should run the OS completely in memory without
            the need for any persistent storage, the approach to deploy
            the image into a ramdisk serves this purpose. KIWI NG allows
            to create a bootable ISO image which deploys the image
            into a ramdisk and activates that image with the following
            oem type definition:</para>
      <screen language="xml">&lt;type image="oem" filesystem="ext4" installiso="true" initrd_system="dracut" installboot="install" kernelcmdline="rd.kiwi.ramdisk ramdisk_size=2048000"&gt;
    &lt;bootloader name="grub2" timeout="1"/&gt;
    &lt;oemconfig&gt;
        &lt;oem-skip-verify&gt;true&lt;/oem-skip-verify&gt;
        &lt;oem-unattended&gt;true&lt;/oem-unattended&gt;
        &lt;oem-unattended-id&gt;/dev/ram1&lt;/oem-unattended-id&gt;
        &lt;oem-swap&gt;false&lt;/oem-swap&gt;
        &lt;oem-multipath-scan&gt;false&lt;/oem-multipath-scan&gt;
     &lt;/oemconfig&gt;
 &lt;/type&gt;</screen>
      <para>The type specification above builds an installation ISO image
            which deploys the System Image into the specified ramdisk
            device (/dev/ram1). The setup of the ISO image boots with a
            short boot timeout of 1sec and just runs through the process
            without asking any questions. In a ramdisk deployment the
            optional target verification, swap space and multipath targets
            are out of scope and therefore disabled.</para>
      <para>The configured size of the ramdisk specifies the size of the
            OS disk and must be at least of the size of the System Image.
            The disk size can be configured with the following value in
            the kernelcmdline attribute:</para>
      <itemizedlist>
        <listitem>
          <para>ramdisk_size=kbyte-value”</para>
        </listitem>
      </itemizedlist>
      <para>An image built with the above setup can be tested in QEMU as
            follows:</para>
      <screen language="bash">$ qemu -cdrom Leap-15.1_appliance.x86_64-1.15.1.install.iso</screen>
      <note>
        <para>Enough Main Memory</para>
        <para>The machine, no matter if it’s a virtual machine like QEMU
                or a real machine, must provide enough RAM to hold the image
                in the ramdisk as well as have enough RAM available to operate
                the OS and its applications. The KIWI NG build image with the
                extension .raw provides the System Image which gets deployed
                into the RAM space. Substract the size of the System Image
                from the RAM space the machine offers and make sure the result
                is still big enough for the use case of the appliance. In
                case of a virtual machine, attach enough main memory to fit
                this calculation. In case of QEMU this can be done with
                the <literal>-m</literal> option</para>
      </note>
      <para>Like all other oem KIWI NG images, also the ramdisk setup supports
            all the deployments methods as explained in <xref linkend="deployment-methods"/>
            This means it’s also possible to dump the ISO image on a USB
            stick let the system boot from it and unplug the stick from
            the machine because the system was deployed into RAM</para>
      <note>
        <para>Limitations Of RamDisk Deployments</para>
        <para>Only standard images which can be booted by a simple root mount
                and root switch can be used. Usually KIWI NG calls kexec after deployment
                such that the correct, for the image created dracut initrd, will boot
                the image. In case of a RAM only system kexec does not work because
                it would loose the ramdisk contents. Thus the dracut initrd driving
                the deployment is also the environment to boot the system.
                There are cases where this environment is not suitable to boot
                the system.</para>
      </note>
    </section>
    <section xml:id="custom-partitions" xml:base="working_with_images/custom_partitions">
      <title>Custom Disk Partitions</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides some details about what KIWI NG supports and does
                not support regarding customization over the partition scheme. It also
                provides some guidance in case the user requires some custom layout
                beyond KIWI NG supported features.</para>
      </formalpara>
      <para>By design, KIWI NG does not support a customized partition table. Alternatively,
            KIWI NG supports the definition of user-defined volumes which covers most of
            common use cases. See <xref linkend="custom-volumes"/> for
            further details about that.</para>
      <para>KIWI NG has its own partitioning schema which is defined according to several
            different user configurations: boot firmware, boot partition,
            expandable layouts, etc. Those supported features have an impact on the
            partitioning schema. MBR or GUID partition tables are not flexible,
            carry limitations and are tied to some specific disk geometry. Because
            of that the preferred alternative to disk layouts based on traditional
            partition tables is using flexible approaches like logic volumes.</para>
      <para>As an example, expandable OEM images is a relevant KIWI NG feature that
            is incompatible with the idea of adding user defined partitions on the
            system area.</para>
      <para>Despite no full customization is supported, some aspects of the partition
            schema can be customized. KIWI NG supports:</para>
      <procedure>
        <step>
          <para>Adding a spare partition <emphasis>before</emphasis> the root (<literal>/</literal>) partition.</para>
          <para>It can be achieved by using the <literal>spare_part</literal> type attribute.</para>
        </step>
        <step>
          <para>Leaving some unpartitioned area at the <emphasis>end</emphasis> of the disk.</para>
          <para>Setting some unpartitioned free space on the disk can be done using
                        the <literal>unpartitioned</literal> attribute of <literal>size</literal> element in type’s section. [LINK]</para>
        </step>
        <step>
          <para>Expand built disks to a new size adding unpartitioned free space at
                    the <emphasis>end</emphasis> of the disk.</para>
          <para>A built image can be resized by using the <literal>kiwi-ng image resize</literal> command
                        and set a new extended size for the disk. See KIWI NG commands docs
                        <xref linkend="db-kiwi-image-resize"/>.</para>
        </step>
      </procedure>
      <section xml:id="custom-partitioning-at-boot-time">
        <title>Custom Partitioning at Boot Time</title>
        <para>Adding additional partitions at boot time of KIWI NG images is also possible,
                however, setting the tools and scripts for doing so needs to be handled by
                the user. A possible strategy to add partitions on system area are described
                below.</para>
        <para>The main idea consists on running a first boot service that creates the
                partitions that are needed. Adding custom services is simple, use the
                following steps:</para>
        <procedure>
          <step>
            <para>Create a unit file for a systemd service:</para>
            <screen language="shell">[Unit]
Description=Add a data partition
After=basic.target
Wants=basic.target

[Service]
Type=oneshot
ExecStart=/bin/bash /usr/local/bin/create_part</screen>
            <para>This systemd unit file will run at boot time once systemd reaches the basic
                            target. At this stage all basic services are up an running (devices mounted,
                            network interfaces up, etc.). In case the service is required to run on
                            earlier stages for some reason, default dependencies need to be disabled,
                            see <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.freedesktop.org/software/systemd/man/systemd.service.html">systemd man pages</link>.</para>
          </step>
          <step>
            <para>Create partitioner shell script matching your specific needs</para>
            <para>Consider the following steps for a partitioner shell script that
                            creates a new partition. Following the above unit file example
                            the <literal>/usr/local/bin/create_part</literal> script should cover the following
                            steps:</para>
            <procedure>
              <step>
                <para>Verify partition exists</para>
                <para>Verify the required partition is not mounted neither exists. Exit
                                    zero (0) if is already there.</para>
                <para>Use tools such <literal>findmnt</literal> to find the root device and <literal>blkid</literal>
                                    or <literal>lsblk</literal> to find a partition with certain label or similar
                                    criteria.</para>
              </step>
              <step>
                <para>Create a new partition</para>
                <para>Create a new partition. On error, exit with non zero.</para>
                <para>Use partitioner tools such as <literal>sgdisk</literal> that can be easily used
                                    in non interactive scripts. Using <literal>partprobe</literal> to reload partition
                                    table to make OS aware of the changes is handy.</para>
              </step>
              <step>
                <para>Make filesystem</para>
                <para>Add the desired filesystem to the new partitions. On error, exit
                                    with non zero.</para>
                <para>Regular filesystem formatting tools (<literal>mkfs.ext4</literal> just to mention one)
                                    can be used to apply the desired filesystem to the just created
                                    new partition. At this stage it is handy to add a label to the
                                    filesystem for easy recognition on later stages or script reruns.</para>
              </step>
              <step>
                <para>Update fstab file</para>
                <para>Just echo and append the desired entry in /etc/fstab.</para>
              </step>
              <step>
                <para>Mount partition</para>
                <para><literal>mount --all</literal> will try to mount all fstab volumes, it just omits
                                    any already mounted device.</para>
              </step>
            </procedure>
          </step>
          <step>
            <para>Add additional files into the root overlay tree.</para>
            <para>The above described unit files and partition creation shell script
                            need to be included into the overlay tree of the image, thus they should
                            be placed into the expected paths in root folder (or in
                            <literal>root.tar.gz</literal> tarball).</para>
          </step>
          <step>
            <para>Activate the service in <literal>config.sh</literal></para>
            <para>The service needs to be enabled during image built time to be
                            run during the very first boot. In can be done by adding the following
                            snipped inside the <literal>config.sh</literal>.</para>
          </step>
        </procedure>
      </section>
    </section>
    <section xml:id="custom-volumes" xml:base="working_with_images/custom_volumes">
      <title>Custom Disk Volumes</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This chapter provides high level explanations on how to handle volumes
                or subvolumes definitions for disk images using KIWI NG.</para>
      </formalpara>
      <para>KIWI NG supports defining custom volumes by using the logical volume manager
            (LVM) for the Linux kernel or by setting volumes at filesystem level when
            filesystem supports it (e.g. btrfs).</para>
      <para>Volumes are defined in the KIWI NG description file <literal>config.xml</literal>,
            using <literal>systemdisk</literal>. This element is a child of the .
            Volumes themselves are added via (multiple) <literal>volume</literal> child
            elements of the <literal>systemdisk</literal> element:</para>
      <screen language="xml">&lt;image schemaversion="7.2" name="openSUSE-Leap-15.1"&gt;
  &lt;type image="oem" filesystem="btrfs" preferlvm="true"&gt;
    &lt;systemdisk name="vgroup"&gt;
      &lt;volume name="usr/lib" size="1G" label="library"/&gt;
      &lt;volume name="@root" freespace="500M"/&gt;
      &lt;volume name="etc_volume" mountpoint="etc" copy_on_write="false"/&gt;
      &lt;volume name="bin_volume" size="all" mountpoint="/usr/bin"/&gt;
    &lt;/systemdisk&gt;
  &lt;/type&gt;
&lt;/image&gt;</screen>
      <para>Additional non-root volumes are created for each <literal>volume</literal>
            element. Volume details can be defined by setting the following <literal>volume</literal>
            attributes:</para>
      <itemizedlist>
        <listitem>
          <para><literal>name</literal>: Required attribute representing the volume’s name. Additionally, this
                    attribute is interpreted as the mountpoint if the <literal>mountpoint</literal> attribute
                    is not used.</para>
        </listitem>
        <listitem>
          <para><literal>mountpoint</literal>: Optional attribute that specifies the mountpoint of this
                    volume.</para>
        </listitem>
        <listitem>
          <para><literal>size</literal>: Optional attribute to set the size of the volume. If no suffix
                    (<literal>M</literal> or <literal>G</literal>) is used, then the value is considered to be in megabytes.</para>
          <note>
            <para>Special name for the root volume</para>
            <para>One can use the <literal>@root</literal> name to refer to the volume mounted at <literal>/</literal>, in
                        case some specific size attributes for the root volume have to be
                        defined. For instance:</para>
            <screen language="xml">&lt;volume name="@root" size="4G"/&gt;</screen>
            <para>In addition to the custom size of the root volume it’s also possible
                        to setup the name of the root volume as follows:</para>
            <screen language="xml">&lt;volume name="@root=rootlv" size="4G"/&gt;</screen>
            <para>If no name for the root volume is specified the
                        default name: <emphasis role="bold">LVRoot</emphasis> applies.</para>
          </note>
        </listitem>
        <listitem>
          <para><literal>freespace</literal>: Optional attribute defining the additional free space added
                    to the volume. If no suffix (<literal>M</literal> or <literal>G</literal>) is used, the value is considered
                    to be in megabytes.</para>
        </listitem>
        <listitem>
          <para><literal>label</literal>: Optional attribute to set filesystem label of the volume.</para>
        </listitem>
        <listitem>
          <para><literal>copy_on_write</literal>: Optional attribute to set the filesystem copy-on-write
                    attribute for this volume.</para>
        </listitem>
      </itemizedlist>
      <warning>
        <para>The size attributes for filesystem volumes, as for btrfs, are
                ignored and have no effect.</para>
      </warning>
      <para>The <literal>systemdisk</literal> element additionally supports the following optional
            attributes:</para>
      <itemizedlist>
        <listitem>
          <para><literal>name</literal>: The volume group name, by default <literal>kiwiVG</literal> is used. This setting
                    is only relevant for LVM volumes.</para>
        </listitem>
        <listitem>
          <para><literal>preferlvm</literal>: Boolean value instructing KIWI NG to prefer LVM even if the
                    used filesystem has its own volume management system.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section xml:id="custom-fstab-extension" xml:base="working_with_images/custom_fstab_extension">
      <title>Add or Update the Fstab File</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for customizing
                the <literal>/etc/fstab</literal> file which controls the mounting of
                filesystems at boot time.</para>
      </formalpara>
      <para>In KIWI NG, all major filesystems that were created at image
            build time are handled by KIWI NG itself and setup in <literal>/etc/fstab</literal>.
            Thus there is usually no need to add entries or change the
            ones added by KIWI NG. However depending on where the image is
            deployed later it might be required to pre-populate fstab
            entries that are unknown at the time the image is build.</para>
      <para>Possible use cases are for example:</para>
      <itemizedlist>
        <listitem>
          <para>Adding NFS locations that should be mounted at boot time.
                    Using autofs would be an alternative to avoid additional
                    entries to fstab. The information about the NFS location
                    will make this image specific to the target network. This
                    will be independent of the mount method, either fstab or
                    the automount map has to provide it.</para>
        </listitem>
        <listitem>
          <para>Adding or changing entries in a read-only root system
                    which becomes effective on first boot but can’t be added
                    at that time because of the read-only characteristics.</para>
        </listitem>
      </itemizedlist>
      <note>
        <para>Modifications to the fstab file are a critical change. If
                done wrongly the risk exists that the system will not boot.
                In addition this type of modification makes the image
                specific to its target and creates a dependency to the
                target hardware, network, etc… Thus this feature should
                be used with care.</para>
      </note>
      <para>The optimal way to provide custom fstab information is through a
            package. If this can’t be done the files can also be provided via
            the overlay file tree of the image description.</para>
      <para>KIWI NG supports three ways to modify the contents of the <literal>/etc/fstab</literal>
            file:</para>
      <variablelist>
        <varlistentry>
          <term>Providing an <literal>/etc/fstab.append</literal> file</term>
          <listitem>
            <para>If that file exists in the image root tree, KIWI NG will take its
                        contents and append it to the existing <literal>/etc/fstab</literal> file. The
                        provided <literal>/etc/fstab.append</literal> file will be deleted after successful
                        modification.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Providing an <literal>/etc/fstab.patch</literal> file</term>
          <listitem>
            <para>The <literal>/etc/fstab.patch</literal> represents a patch file that will be
                        applied to <literal>/etc/fstab</literal> using the <literal>patch</literal> program. This method
                        also allows to change the existing contents of <literal>/etc/fstab</literal>.
                        On success <literal>/etc/fstab.patch</literal> will be deleted.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Providing an <literal>/etc/fstab.script</literal> file</term>
          <listitem>
            <para>The <literal>/etc/fstab.script</literal> represents an executable which is called
                        as chrooted process. This method is the most flexible one and
                        allows to apply any change. On success <literal>/etc/fstab.script</literal> will be
                        deleted.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>All three variants to handle the fstab file can be used together.
                Appending happens first, patching afterwards and the script call
                is last. When using the script call, there is no validation that
                checks if the script actually handles fstab or any other
                file in the image rootfs.</para>
      </note>
    </section>
    <section xml:id="setup-for-luks" xml:base="working_with_images/disk_setup_for_luks">
      <title>Image Description Encrypted Disk</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for handling
                disk images with an encrypted root filesystem setup.
                The information here is based on top of the following
                article:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="simple-disk"/>
          </para>
        </listitem>
      </itemizedlist>
      <para>A virtual disk image can be partially or fully encrypted
            using the LUKS extension supported by KIWI NG. A fully encrypted
            image also includes the data in <literal>/boot</literal> to be encrypted.
            Such an image requests the passphrase for the master key
            to be entered at the bootloader stage. A partialy encrypted
            image keeps <literal>/boot</literal> unencrypted and on an extra boot partition.
            Such an image requests the passphrase for the master key later
            in the boot process when the root partition gets accessed by
            the systemd mount service. In any case the master passphrase
            is requested only once.</para>
      <para>Update the KIWI NG image description as follows:</para>
      <procedure>
        <step>
          <para>Software packages</para>
          <para>Make sure to add the following package to the package list</para>
          <note>
            <para>Package names used in the following list match the
                        package names of the SUSE distribution and might be different
                        on other distributions.</para>
          </note>
          <screen language="xml">&lt;package name="cryptsetup"/&gt;</screen>
        </step>
        <step>
          <para>Image Type definition</para>
          <para>Update the oem image type setup as follows</para>
          <variablelist>
            <varlistentry>
              <term>Full disk encryption including <literal>/boot</literal>:</term>
              <listitem>
                <screen language="xml">&lt;type image="oem" filesystem="ext4" luks="linux" bootpartition="false"&gt;
    &lt;oemconfig&gt;
        &lt;oem-resize&gt;false&lt;/oem-resize&gt;
    &lt;/oemconfig&gt;
&lt;/type&gt;</screen>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Encrypted root partition with an unencrypted extra <literal>/boot</literal> partition:</term>
              <listitem>
                <screen language="xml">&lt;type image="oem" filesystem="ext4" luks="linux" bootpartition="true"&gt;
    &lt;oemconfig&gt;
        &lt;oem-resize&gt;false&lt;/oem-resize&gt;
    &lt;/oemconfig&gt;
&lt;/type&gt;</screen>
              </listitem>
            </varlistentry>
          </variablelist>
          <note>
            <para>The value for the <literal>luks</literal> attribute sets the master passphrase
                        for the LUKS keyring. Therefore the XML description becomes
                        security critical and should only be readable by trustworthy
                        people</para>
          </note>
        </step>
      </procedure>
    </section>
    <section xml:id="building-build-with-profiles" xml:base="working_with_images/build_with_profiles">
      <title>Building Images with Profiles</title>
      <para>KIWI NG supports so-called <emphasis>profiles</emphasis> inside the XML image description. Profiles
            act as namespaces for additional settings to be applied on top of the
            defaults. For further details, see <xref linkend="image-profiles"/>.</para>
      <section xml:id="local-builds">
        <title>Local Builds</title>
        <para>To execute local KIWI NG builds with a specific, selected profile, add the
                command line flag <literal>--profile=$PROFILE_NAME</literal>:</para>
        <screen language="shell-session">$ sudo kiwi-ng --type iso --profile=workstation system build \
      --description kiwi-descriptions/suse/x86_64/suse-leap-15.1 \
      --target-dir /tmp/myimage</screen>
        <para>Consult the manual page of <literal>kiwi</literal> for further details:
                <xref linkend="db-commands-kiwi-synopsis"/>.</para>
      </section>
      <section xml:id="building-with-the-open-build-service">
        <title>Building with the Open Build Service</title>
        <para>The Open Build Service (OBS) support profiles via the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://openbuildservice.org/help/manuals/obs-user-guide/cha.obs.multibuild.html">multibuild</link>
                feature. An example project using this feature is the
                <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/package/show/openSUSE:Factory/openSUSE-Tumbleweed">openSUSE-Tumbleweed</link>
                image.</para>
        <para>To enable and use the profiles, follow these steps:</para>
        <procedure>
          <step>
            <para>Add the following XML comment to your <literal>config.xml</literal>:</para>
            <screen language="xml">&lt;!-- OBS-Profiles: @BUILD_FLAVOR@ --&gt;</screen>
            <para>It must be added before the opening <literal>&lt;image&gt;</literal> element and after the
                        <literal>&lt;?xml?&gt;</literal> element, e.g.:</para>
            <screen language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!-- OBS-Profiles: @BUILD_FLAVOR@ --&gt;
&lt;image schemaversion="7.2" name="Leap-15.1_appliance"&gt;
  &lt;!-- snip --&gt;
&lt;/image&gt;</screen>
          </step>
          <step>
            <para>Add a file <literal>_multibuild</literal> into your package’s repository with the
                        following contents:</para>
            <screen language="xml">&lt;multibuild&gt;
  &lt;flavor&gt;profile_1&lt;/flavor&gt;
  &lt;flavor&gt;profile_2&lt;/flavor&gt;
&lt;/multibuild&gt;</screen>
            <para>Add a line <literal>&lt;flavor&gt;$PROFILE&lt;/flavor&gt;</literal> for each profile that
                        you want OBS to build.</para>
          </step>
        </procedure>
        <para>Note, by default, OBS excludes the build <emphasis role="bold">without</emphasis> any profile
                enabled.</para>
        <para>Running a build of a multibuild enabled repository via <literal>osc</literal> can be
                achieved via the <literal>-M $PROFILE</literal> flag:</para>
        <screen language="shell-session">$ osc build -M $PROFILE</screen>
      </section>
    </section>
    <section xml:id="building-in-the-open-build-service" xml:base="working_with_images/build_in_buildservice">
      <title>Building in the Open Build Service</title>
      <note>
        <para>
          <emphasis role="bold">Abstract</emphasis>
        </para>
        <para>This document gives a brief overview how to build images with
                KIWI NG in version 9.23.11 inside of the Open Build Service.
                A tutorial on the Open Buildservice itself can be found here:
                <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://en.opensuse.org/openSUSE:Build_Service_Tutorial"/></para>
      </note>
      <para>The next generation KIWI NG is fully integrated with the Open Build Service.
            In order to start it’s best to checkout one of the integration test
            image build projects from the base Testing project
            <literal>Virtualization:Appliances:Images:Testing_$ARCH:$DISTRO</literal> at:</para>
      <para>
        <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org"/>
      </para>
      <para>For example the test images for SUSE on x86 can be found <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://build.opensuse.org/project/show/Virtualization:Appliances:Images:Testing_x86:suse">here</link>.</para>
      <section xml:id="advantages-of-using-the-open-build-service-obs">
        <title>Advantages of using the Open Build Service (OBS)</title>
        <para>The Open Build Service offers multiple advantages over running KIWI NG
                locally:</para>
        <itemizedlist>
          <listitem>
            <para>OBS will host the latest successful build for you without having to setup
                        a server yourself.</para>
          </listitem>
          <listitem>
            <para>As KIWI NG is fully integrated into OBS, OBS will automatically rebuild your
                        images if one of the included packages or one of its dependencies or KIWI NG
                        itself get updated.</para>
          </listitem>
          <listitem>
            <para>The builds will no longer have to be executed on your own machine, but
                        will run on OBS, thereby saving you resources. Nevertheless, if a build
                        fails, you get a notification via email (if enabled in your user’s
                        preferences).</para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="differences-between-building-locally-and-on-obs">
        <title>Differences Between Building Locally and on OBS</title>
        <para>Note, there is a number of differences when building images with KIWI NG using
                the Open Build Service. Your image that build locally just fine, might not
                build without modifications.</para>
        <para>The notable differences to running KIWI NG locally include:</para>
        <itemizedlist>
          <listitem>
            <para>OBS will pick the KIWI NG package from the repositories configured in your
                        project, which will most likely not be the same version that you are
                        running locally.
                        This is especially relevant when building images for older versions like
                        SUSE Linux Enterprise. Therefore, include the custom appliances
                        repository as described in the following section:
                        <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#obs-recommended-settings">Recommendations</link>.</para>
          </listitem>
          <listitem>
            <para>When KIWI NG runs on OBS, OBS will extract the list of packages from
                        <literal>config.xml</literal> and use it to create a build root. In contrast to a
                        local build (where your distributions package manager will resolve the
                        dependencies and install the packages), OBS will <emphasis role="bold">not</emphasis> build your image
                        if there are multiple packages that could be chosen to satisfy the
                        dependencies of your packages . This shows errors like this:</para>
            <screen language="bash">unresolvable: have choice for SOMEPACKAGE: SOMEPAKAGE_1 SOMEPACKAGE_2</screen>
            <para>This can be solved by explicitly specifying one of the two packages in
                        the project configuration via the following setting:</para>
            <screen language="bash">Prefer: SOMEPACKAGE_1</screen>
            <para>Place the above line into the project configuration, which can be
                        accessed either via the web interface (click on the tab <literal>Project
Config</literal> on your project’s main page) or via <literal>osc meta -e prjconf</literal>.</para>
            <warning>
              <para>We strongly encourage you to remove your repositories from
                            <literal>config.xml</literal> and move them to the repository configuration in
                            your project’s settings. This usually prevents the issue of having the
                            choice for multiple package version and results in a much smoother
                            experience when using OBS.</para>
            </warning>
          </listitem>
          <listitem>
            <para>By default, OBS builds only a single build type and the default
                        profile. If your appliance uses multiple build types, put
                        each build type into a profile, as OBS cannot handle multiple build
                        types.</para>
            <para>There are two options to build multiple profiles on OBS:</para>
            <procedure>
              <step>
                <para>Use the <literal>&lt;image&gt;</literal> element and add it bellow the XML
                                declaration (<literal>&lt;?xml ..?&gt;</literal>):</para>
                <screen language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;

&lt;!-- OBS-Profiles: foo_profile bar_profile --&gt;

&lt;image schemaversion="7.2" name="openSUSE-Leap-15.1"&gt;
  &lt;!-- image description with the profiles foo_profile and bar_profile
&lt;/image&gt;</screen>
              </step>
              <step>
                <para>Use the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://openbuildservice.org/help/manuals/obs-user-guide/cha.obs.multibuild.html">multibuild</link> feature.</para>
              </step>
            </procedure>
            <para>The first option is simpler to use, but has the disadvantage that your
                        appliances are built sequentially. The <literal>multibuild</literal> feature allows to
                        build each profile as a single package, thereby enabling parallel execution,
                        but requires an additional <literal>_multibuild</literal> file. For the above example
                        <literal>config.xml</literal> would have to be adapted as follows:</para>
            <screen language="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;

&lt;!-- OBS-Profiles: @BUILD_FLAVOR@ --&gt;

&lt;image schemaversion="7.2" name="openSUSE-Leap-15.1"&gt;
  &lt;!-- image description with the profiles foo_profile and bar_profile
&lt;/image&gt;</screen>
            <para>The file <literal>_multibuild</literal> would have the following contents:</para>
            <screen language="xml">&lt;multibuild&gt;
  &lt;flavor&gt;foo_profile&lt;/flavor&gt;
  &lt;flavor&gt;bar_profile&lt;/flavor&gt;
&lt;/multibuild&gt;</screen>
          </listitem>
          <listitem>
            <para>Subfolders in OBS projects are ignored by default by <command>osc</command> and
                        must be explicitly added via <command>osc add $FOLDER</command>. Bear that
                        in mind when adding the overlay files inside the <literal>root/</literal> directory
                        to your project.</para>
          </listitem>
          <listitem>
            <para>OBS ignores file permissions. Therefore <literal>config.sh</literal> and
                        <literal>images.sh</literal> will <emphasis role="bold">always</emphasis> be executed through BASH (see also:
                        <xref linkend="working-with-kiwi-user-defined-scripts"/>).</para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="obs-recommended-settings">
        <title>Recommendations</title>
        <section xml:id="working-with-obs">
          <title>Working with OBS</title>
          <para>Although OBS is an online service, it is not necessary to test every change
                    by uploading it. OBS will use the same process as <literal>osc build</literal> does, so if
                    your image builds locally via <literal>osc build</literal> it should also build online on
                    OBS.</para>
        </section>
        <section xml:id="repository-configuration">
          <title>Repository Configuration</title>
          <para>When setting up the project, enable the <literal>images</literal> repository: the <literal>images</literal>
                    repository’s checkbox can be found at the bottom of the selection screen
                    that appears when clicking <literal>Add from a Distribution</literal> in the <literal>Repositories</literal>
                    tab. Or specify it manually in the project configuration (it can be
                    accessed via <literal>osc meta -e prj</literal>):</para>
          <screen language="xml">&lt;repository name="images"&gt;
  &lt;arch&gt;x86_64&lt;/arch&gt;
&lt;/repository&gt;</screen>
          <para>Furthermore, OBS requires additional repositories from which it obtains
                    your dependent packages. These repositories can be provided in two ways:</para>
          <procedure>
            <step>
              <para>Add the repositories to the project configuration on OBS and omit them
                            from <literal>config.xml</literal>. Provide only the following repository inside
                            the image description:</para>
              <screen language="xml">&lt;repository type="rpm-md"&gt;
  &lt;source path="obsrepositories:/"/&gt;
&lt;/repository&gt;</screen>
              <para>This instructs OBS to inject the repositories from your project into
                            your appliance.</para>
              <para>Additional repositories can be added by invoking <literal>osc meta -e prj</literal> and
                            adding a line of the following form as a child of <literal>&lt;repository
name="images"&gt;</literal>:</para>
              <screen language="xml">&lt;path project="$OBS_PROJECT" repository="$REPOSITORY_NAME"/&gt;</screen>
              <para>The order in which you add repositories matters: if a package is present
                            in multiple repositories, then it is taken from the <emphasis role="bold">first</emphasis>
                            repository. The <emphasis role="bold">last</emphasis> repository is subject to path expansion: its
                            repository paths are included as well.</para>
              <para>Don’t forget to add the repository from the
                            <literal>Virtualization:Appliances:Builder</literal> project, providing the latest stable
                            version of KIWI NG (which you are very likely using for your local builds).</para>
              <para>The following example repository configuration  adds the
                            repositories from the <literal>Virtualization:Appliances:Builder</literal> project and
                            those from the latest snapshot of openSUSE Tumbleweed:</para>
              <screen language="xml">&lt;project name="Virtualization:Appliances:Images:openSUSE-Tumbleweed"&gt;
  &lt;title&gt;Tumbleweed JeOS images&lt;/title&gt;
  &lt;description&gt;Host JeOS images for Tumbleweed&lt;/description&gt;
  &lt;repository name="images"&gt;
    &lt;path project="Virtualization:Appliances:Builder" repository="Factory"/&gt;
    &lt;path project="openSUSE:Factory" repository="snapshot"/&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
  &lt;/repository&gt;
&lt;/project&gt;</screen>
              <para>The above can be simplified further using the path expansion of the last
                            repository to:</para>
              <screen language="xml">&lt;project name="Virtualization:Appliances:Images:openSUSE-Tumbleweed"&gt;
  &lt;title&gt;Tumbleweed JeOS images&lt;/title&gt;
  &lt;description&gt;Host JeOS images for Tumbleweed&lt;/description&gt;
  &lt;repository name="images"&gt;
    &lt;path project="Virtualization:Appliances:Builder" repository="Factory"/&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
  &lt;/repository&gt;
&lt;/project&gt;</screen>
              <para>Now <literal>Virtualization:Appliances:Builder</literal> is the last repository, which’
                            repositories are included into the search path. As
                            <literal>openSUSE:Factory/snapshot</literal> is among these, it can be omitted from the
                            repository list.</para>
            </step>
            <step>
              <para>Keep the repositories in your <literal>config.xml</literal> configuration file. If
                            you have installed the latest stable KIWI NG as described in
                            <xref linkend="kiwi-installation"/> then you should add the following repository to
                            your projects configuration (accessible via <command>osc meta -e
                                prjconf</command>), so that OBS will pick the latest stable KIWI NG version too:</para>
              <screen language="xml">&lt;repository name="images"&gt;
  &lt;path project="Virtualization:Appliances:Builder" repository="$DISTRO"/&gt;
  &lt;arch&gt;x86_64&lt;/arch&gt;
&lt;/repository&gt;</screen>
              <para>Replace <literal>$DISTRO</literal> with the appropriate name for the distribution that
                            you are currently building and optionally adjust the architecture.</para>
            </step>
          </procedure>
          <para>We recommend to use the first method, as it integrates better into
                    OBS. Note that your image description will then no longer build outside of
                    OBS though. If building locally is required, use the second method.</para>
          <warning>
            <para>Adding the repositories to project’s configuration makes it impossible
                        to build images for different distributions from the same project.</para>
            <para>Since the repositories are added for every package in your project, all
                        your image builds will share the same repositories, thereby resulting in
                        conflicts for different distributions.</para>
            <para>We recommend to create a separate project for each distribution. If that
                        is impossible, you can keep all your repositories (including
                        <literal>Virtualization:Appliances:Builder</literal>) in <literal>config.xml</literal>. That however
                        usually requires a large number of workarounds via <literal>Prefer:</literal> settings in
                        the project configuration and is thus <emphasis role="bold">not</emphasis> recommended.</para>
          </warning>
        </section>
        <section xml:id="project-configuration">
          <title>Project Configuration</title>
          <para>The Open Build Service will by default create the same output file as KIWI NG
                    when run locally, but with a custom filename ending (that is unfortunately
                    unpredictable). This has the consequence that the download URL of your
                    image will change with every rebuild (and thus break automated
                    scripts). OBS can create symbolic links with static names to the latest
                    build by adding the following line to the project configuration:</para>
          <screen language="bash">Repotype: staticlinks</screen>
          <para>If build Vagrant images (see <xref linkend="setup-vagrant"/>) add the repository-type
                    <literal>vagrant</literal>. OBS creates a <literal>boxes/</literal> subdirectory in your download
                    repositories, which contains JSON files for Vagrant .</para>
          <para>If you have added your repositories to <literal>config.xml</literal>, you probably see
                    errors of the following type:</para>
          <screen language="bash">unresolvable: have choice for SOMEPACKAGE: SOMEPAKAGE_1 SOMEPACKAGE_2</screen>
          <para>Instead of starting from scratch and manually adding <literal>Prefer:</literal> statements
                    to the project configuration, we recommend to copy the current project
                    configuration of the testing project
                    <literal>Virtualization:Appliances:Images:Testing_$ARCH:$DISTRO</literal> into your own project.
                    It provides a good starting point and can be adapted to your OBS project.</para>
        </section>
      </section>
    </section>
    <section xml:id="build-legacy-pxe" xml:base="working_with_images/legacy_netboot_root_filesystem">
      <title>Build PXE Root File System Image for the legacy netboot infrastructure</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page explains how to build a file system image for use with
                KIWI NG’s PXE boot infrastructure. It contains:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>how to build a PXE file system image</para>
        </listitem>
        <listitem>
          <para>how to setup the PXE file system image on the PXE server</para>
        </listitem>
        <listitem>
          <para>how to run it with QEMU</para>
        </listitem>
      </itemizedlist>
      <para><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://en.wikipedia.org/wiki/Preboot_Execution_Environment">PXE</link> is a network boot protocol that is shipped with most BIOS
            implementations. The protocol sends a DHCP request to get an IP
            address. When an IP address is assigned, it uses the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol">TFTP</link> protocol
            to download a Kernel and boot instructions. Contrary to other images
            built with KIWI NG, a PXE image consists of separate boot, kernel and root
            filesystem images, since those images need to be made available in
            different locations on the PXE boot server.</para>
      <para>A root filesystem image which can be deployed via KIWI NG’s PXE
            netboot infrastructure represents the system rootfs in a linux
            filesystem. A user could loop mount the image and access the
            contents of the root filesystem. The image does not contain
            any information about the system disk its partitions or the
            bootloader setup. All of these information is provided by a
            client configuration file on the PXE server which controlls
            how the root filesystem image should be deployed.</para>
      <para>Many different deployment strategies are possible, e.g root over
            <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://en.wikipedia.org/wiki/Network_block_device">NBD</link> (network block device), <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://en.wikipedia.org/wiki/ATA_over_Ethernet">AoE</link> (ATA over Ethernet), or
            NFS for diskless and diskfull clients. This particular
            example shows how to build an overlayfs-based union system based
            on openSUSE Leap for a diskless client which receives the squashfs
            compressed root file system image in a ramdisk overlayed via
            overlayfs and writes new data into another ramdisk on the same
            system. As diskless client, a QEMU virtual machine is used.</para>
      <procedure>
        <step>
          <para>Make sure you have checked out the example image descriptions,
                    see <xref linkend="example-descriptions"/>.</para>
        </step>
        <step>
          <para>Build the image with KIWI NG:</para>
          <screen language="bash">$ sudo kiwi-ng --type pxe system build \
    --description kiwi-descriptions/suse/x86_64/suse-leap-15.1 \
    --target-dir /tmp/mypxe-result</screen>
        </step>
        <step>
          <para>Change into the build directory:</para>
          <screen language="bash">$ cd /tmp/mypxe-result</screen>
        </step>
        <step>
          <para>Copy the initrd and the kernel to <literal>/srv/tftpboot/boot</literal>:</para>
          <screen language="bash">$ cp *.initrd.xz /srv/tftpboot/boot/initrd
$ cp *.kernel /srv/tftpboot/boot/linux</screen>
        </step>
        <step>
          <para>Copy the system image and its MD5 sum to <literal>/srv/tftpboot/image</literal>:</para>
          <screen language="bash">$ cp Leap-15.1_appliance.x86_64-1.15.1 /srv/tftpboot/image
$ cp Leap-15.1_appliance.x86_64-1.15.1.md5 /srv/tftpboot/image</screen>
        </step>
        <step>
          <para>Adjust the PXE configuration file.
                    The configuration file controls which kernel and initrd is
                    loaded and which kernel parameters are set. A template has been installed
                    at <literal>/srv/tftpboot/pxelinux.cfg/default</literal> from the <literal>kiwi-pxeboot</literal>
                    package. The minimal configuration required to boot the example image
                    looks like to following:</para>
          <screen language="bash">DEFAULT KIWI-Boot

LABEL KIWI-Boot
    kernel boot/linux
    append initrd=boot/initrd
    IPAPPEND 2</screen>
        </step>
        <step>
          <para>Create the image client configuration file:</para>
          <screen language="bash">$ vi /srv/tftpboot/KIWI/config.default

IMAGE=/dev/ram1;Leap-15.1_appliance.x86_64;1.15.1;192.168.100.2;4096
UNIONFS_CONFIG=/dev/ram2,/dev/ram1,overlay</screen>
          <para>All PXE boot based deployment methods are controlled by a client
                    configuration file. The above configuration tells the client where
                    to find the image and how to activate it. In this case the image
                    will be deployed into a ramdisk (ram1) and overlay mounted such
                    that all write operations will land in another ramdisk (ram2).
                    KIWI NG supports a variety of different deployment strategies based
                    on the rootfs image created beforehand. For details, refer
                    to <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#pxe-legacy-client-config">PXE Client Setup Configuration</link></para>
        </step>
        <step>
          <para>Connect the client to the network and boot. This can also be done
                    in a virtualized environment using QEMU as follows:</para>
          <screen language="bash">$ qemu -boot n -m 4096</screen>
        </step>
      </procedure>
      <section xml:id="pxe-legacy-client-config">
        <title>PXE Client Setup Configuration</title>
        <para>All PXE boot based deployment methods are controlled by configuration files
                located in <literal>/srv/tftpboot/KIWI</literal> on the PXE server. Such a configuration
                file can either be client-specific (config.MAC_ADDRESS, for example
                config.00.AB.F3.11.73.C8), or generic (config.default).</para>
        <para>In an environment
                with heterogeneous clients, this allows to have a default configuration
                suitable for the majority of clients, to have configurations suitable
                for a group of clients (for example machines with similar or identical
                hardware), and individual configurations for selected machines.</para>
        <para>The configuration file contains data about the image and about
                configuration, synchronization, and partition parameters.
                The configuration file has got the following general format:</para>
        <screen language="bash">IMAGE="device;name;version;srvip;bsize;compressed,...,"

DISK="device"
PART="size;id;Mount,...,size;id;Mount"
RAID="raid-level;device1;device2;..."

AOEROOT=ro-device[,rw-device]
NBDROOT="ip-address;export-name;device;swap-export-name;swap-device;write-export-name;write-device"
NFSROOT="ip-address;path"

UNIONFS_CONFIGURATION="rw-partition,compressed-partition,overlayfs"

CONF="src;dest;srvip;bsize;[hash],...,src;dest;srvip;bsize;[hash]"

KIWI_BOOT_TIMEOUT="seconds"
KIWI_KERNEL_OPTIONS="opt1 opt2 ..."

REBOOT_IMAGE=1
RELOAD_CONFIG=1
RELOAD_IMAGE=1</screen>
        <note>
          <para>Quoting the Values</para>
          <para>The configuration file is sourced by Bash, so the same quoting
                    rules as for Bash apply.</para>
        </note>
        <para>Not all configuration options needs to be specified. It depends on the
                setup of the client which configuration values are required. The
                following is a collection of client setup examples which covers all
                supported PXE client configurations.</para>
        <section xml:id="setup-client-with-remote-root">
          <title>Setup Client with Remote Root</title>
          <para>To serve the image from a remote location and redirect all
                    write operations on a tmpfs, the following setup is required:</para>
          <screen language="bash"># When using AoE, see vblade toolchain for image export

AOEROOT=/dev/etherd/e0.1
UNIONFS_CONFIG=tmpfs,aoe,overlay

# When using NFS, see exports manual page for image export

NFSROOT="192.168.100.2;/srv/tftpboot/image/root"
UNIONFS_CONFIG=tmpfs,nfs,overlay

# When using NBD, see nbd-server manual page for image export

NBDROOT=192.168.100.2;root_export;/dev/nbd0
UNIONFS_CONFIG=tmpfs,nbd,overlay</screen>
          <para>The above setup shows the most common use case where the image built
                    with KIWI NG is populated over the network using either AoE, NBD or NFS
                    in combination with overlayfs which redirects all write operations
                    to be local to the client. In any case a setup of either AoE, NBD or
                    NFS on the image server is required beforehand.</para>
        </section>
        <section xml:id="setup-client-with-system-on-local-disk">
          <title>Setup Client with System on Local Disk</title>
          <para>To deploy the image on a local disk the following setup
                    is required:</para>
          <note>
            <para>In the referenced suse-leap-15.1 XML description the <literal>pxe</literal>
                        type must be changed as follows and the image needs to be
                        rebuild:</para>
            <screen language="xml">&lt;type image="pxe" filesystem="ext3" boot="netboot/suse-leap15.1"/&gt;</screen>
          </note>
          <screen language="bash">IMAGE="/dev/sda2;Leap-15.1_appliance.x86_64;1.15.1;192.168.100.2;4096"
DISK="/dev/sda"
PART="5;S;X,X;L;/"</screen>
          <para>The setup above will create a partition table on sda with a 5MB swap
                    partition (no mountpoint) and the rest of the disk will be a Linux(L)
                    partition with <literal>/</literal> as mountpoint. The (<literal>X</literal>) in the PART setup specifies
                    a place holder to indicate the default behaviour.</para>
        </section>
        <section xml:id="setup-client-with-system-on-local-md-raid-disk">
          <title>Setup Client with System on Local MD RAID Disk</title>
          <para>To deploy the image on a local disk with prior software RAID
                    configuration, the following setup is required:</para>
          <note>
            <para>In the referenced suse-leap-15.1 XML description the <literal>pxe</literal>
                        type must be changed as follows and the image needs to be
                        rebuild:</para>
            <screen language="xml">&lt;type image="pxe" filesystem="ext3" boot="netboot/suse-leap15.1"/&gt;</screen>
          </note>
          <screen language="bash">RAID="1;/dev/sda;/dev/sdb"
IMAGE="/dev/md1;Leap-15.1_appliance.x86_64;1.15.1;192.168.100.2;4096"
PART="5;S;x,x;L;/"</screen>
          <para>The first parameter of the RAID line is the RAID level. So far only raid1
                    (mirroring) is supported. The second and third parameter specifies the
                    raid disk devices which make up the array. If a RAID line is present
                    all partitions in <literal>PART</literal> will be created as RAID partitions. The first
                    RAID is named <literal>md0</literal>, the second one <literal>md1</literal> and so on. It is required to
                    specify the correct RAID partition in the <literal>IMAGE</literal> line according to the
                    <literal>PART</literal> setup. In this case <literal>md0</literal> is reserved for the SWAP space and <literal>md1</literal>
                    is reserved for the system.</para>
        </section>
        <section xml:id="setup-loading-of-custom-configuration-file-s">
          <title>Setup Loading of Custom Configuration File(s)</title>
          <para>In order to load for example a custom <literal>/etc/hosts</literal> file on the client,
                    the following setup is required:</para>
          <screen language="bash">CONF="hosts;/etc/hosts;192.168.1.2;4096;ffffffff"</screen>
          <para>On boot of the client KIWI NG’s boot code will fetch the <literal>hosts</literal> file
                    from the root of the server (192.168.1.2) with 4k blocksize and deploy
                    it as <literal>/etc/hosts</literal> on the client. The protocol is by default tftp
                    but can be changed via the <literal>kiwiservertype</literal> kernel commandline option.
                    For details, see <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#custom-download-server">Setup a Different Download Protocol and Server</link></para>
        </section>
        <section xml:id="setup-client-to-force-reload-image">
          <title>Setup Client to Force Reload Image</title>
          <para>To force the reload of the system image even if the image on
                    the disk is up-to-date, the following setup is required:</para>
          <screen language="bash">RELOAD_IMAGE=1</screen>
          <para>The option only applies to configurations with a DISK/PART setup</para>
        </section>
        <section xml:id="setup-client-to-force-reload-configuration-files">
          <title>Setup Client to Force Reload Configuration Files</title>
          <para>To force the reload of all configuration files specified in
                    CONF, the following setup is required:</para>
          <screen language="bash">RELOAD_CONFIG=1</screen>
          <para>By default only configuration files which has changed according to
                    their md5sum value will be reloaded. With the above setup all files
                    will be reloaded from the PXE server. The option only applies to
                    configurations with a DISK/PART setup</para>
        </section>
        <section xml:id="setup-client-for-reboot-after-deployment">
          <title>Setup Client for Reboot After Deployment</title>
          <para>To reboot the system after the initial deployment process is
                    done the following setup is required:</para>
          <screen language="bash">REBOOT_IMAGE=1</screen>
        </section>
        <section xml:id="setup-custom-kernel-boot-options">
          <title>Setup custom kernel boot options</title>
          <para>To deactivate the kernel mode setting on local
                    boot of the client the following setup is required:</para>
          <screen language="bash">KIWI_KERNEL_OPTIONS="nomodeset"</screen>
          <note>
            <para>This does not influence the kernel options passed to the client
                        if it boots from the network. In order to setup those the PXE
                        configuration on the PXE server needs to be changed</para>
          </note>
        </section>
        <section xml:id="setup-a-custom-boot-timeout">
          <title>Setup a Custom Boot Timeout</title>
          <para>To setup a 10sec custom timeout for the local boot of the client
                    the following setup is required.</para>
          <screen language="bash">KIWI_BOOT_TIMEOUT="10"</screen>
          <note>
            <para>This does not influence the boot timeout if the client boots off
                        from the network.</para>
          </note>
        </section>
        <section xml:id="custom-download-server">
          <title>Setup a Different Download Protocol and Server</title>
          <para>By default all downloads controlled by the KIWI NG linuxrc code are
                    performed by an atftp call using the TFTP protocol. With PXE the download
                    protocol is fixed and thus you cannot change the way how the kernel and
                    the boot image (<literal>initrd</literal>) is downloaded. As soon as Linux takes over, the
                    download protocols http, https and ftp are supported too. KIWI NG uses
                    the curl program to support the additional protocols.</para>
          <para>To select one of the additional download protocols the following
                    kernel parameters need to be specified</para>
          <screen language="bash">kiwiserver=192.168.1.1 kiwiservertype=ftp</screen>
          <para>To set up this parameters edit the file
                    <literal>/srv/tftpboot/pxelinux.cfg/default</literal> on your PXE boot server and change
                    the append line accordingly.</para>
          <note>
            <para>Once configured all downloads except for kernel and initrd are
                        now controlled by the given server and protocol. You need to make
                        sure that this server provides the same directory and file structure
                        as initially provided by the <literal>kiwi-pxeboot</literal> package</para>
          </note>
        </section>
      </section>
    </section>
    <section xml:id="network-overlay-boot" xml:base="working_with_images/network_overlay_boot">
      <title>Booting a Root Filesystem from Network</title>
      <formalpara role="sidebar">
        <title>Abstract</title>
        <para>This page provides further information for handling
                KIS images built with KIWI NG and references the following
                article:</para>
      </formalpara>
      <itemizedlist>
        <listitem>
          <para>
            <xref linkend="kis"/>
          </para>
        </listitem>
      </itemizedlist>
      <para>In KIWI NG, the <literal>kiwi-overlay</literal> dracut module can be used to boot
            from a remote exported root filesystem. The exported device
            is visible as block device on the network client. KIWI NG
            supports the two export backends <literal>NBD</literal> (Network Block Device)
            and <literal>AoE</literal> (ATA over Ethernet) for this purpose. A system that is
            booted in this mode will read the contents of the root filesystem
            from a remote location and targets any write action into RAM by
            default. The kernel cmdline option <literal>rd.root.overlay.write</literal> can
            be used to specify an alternative device to use for writing.
            The two layers (read and write) are combined using the <literal>overlayfs</literal>
            filesystem.</para>
      <para>For remote boot of a network client, the PXE boot protocol
            is used. This functionality requires a network boot server
            setup on the system. Details how to setup such a server
            can be found in <xref linkend="network-boot-server"/>.</para>
      <para>Before the KIS image can be build, the following configuration step
            is required:</para>
      <itemizedlist>
        <listitem>
          <para>Create dracut configuration to include the <literal>kiwi-overlay</literal> module</para>
          <screen language="bash">$ cd kiwi-descriptions/suse/x86_64/suse-leap-15.1
$ mkdir -p root/etc/dracut.conf.d
$ cd root/etc/dracut.conf.d
$ echo 'add_dracutmodules+=" kiwi-overlay "' &gt; overlay.conf</screen>
        </listitem>
      </itemizedlist>
      <para>Now the KIS image can be build as shown in <xref linkend="kis"/>. After the
            build, the following configuration steps are required to boot
            from the network:</para>
      <procedure>
        <step>
          <para>Copy initrd/kernel from the KIS build to the PXE server</para>
          <para>The PXE boot process loads the configured kernel and initrd from
                    the PXE server. For this reason, the following files must be
                    copied to the PXE server as follows:</para>
          <screen language="bash">$ cp *.initrd.xz /srv/tftpboot/boot/initrd
$ cp *.kernel /srv/tftpboot/boot/linux</screen>
        </step>
        <step>
          <para>Export Root FileSystem to the Network</para>
          <para>Access to the root filesystem is implemented using either the
                    AoE or the NBD protocol. This requires the export of the
                    root filesystem image as remote block device:</para>
          <variablelist>
            <varlistentry>
              <term>Export via AoE:</term>
              <listitem>
                <para>Install the <literal>vblade</literal> package on the system which is expected
                                to export the root filesystem</para>
                <note>
                  <para>Not all versions of AoE are compatible with any kernel. This
                                    means the kernel on the system exporting the root filesystem image
                                    must provide a compatible aoe kernel module compared to the
                                    kernel used inside of the root filesystem image.</para>
                </note>
                <para>Once done, export the filesystem from the KIS build above as follows:</para>
                <screen language="bash">$ vbladed 0 1 IFACE Leap-15.1_appliance.x86_64-1.15.1</screen>
                <para>The above command exports the given filesystem image file as a block
                                storage device to the network of the given IFACE. On any machine except
                                the one exporting the file, it will appear as <literal>/dev/etherd/e0.1</literal>
                                once the <command>aoe</command> kernel module was loaded. The two numbers,
                                0 and 1 in the above example, classifies a major and minor number which
                                is used in the device node name on the reading side, in this
                                case <literal>e0.1</literal>.</para>
                <note>
                  <para>Only machines in the same network of the given INTERFACE
                                    can see the exported block device.</para>
                </note>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Export via NBD:</term>
              <listitem>
                <para>Install the <literal>nbd</literal> package on the system which is expected
                                to export the root filesystem</para>
                <para>Once done, export the filesystem from the KIS build above as follows:</para>
                <screen language="bash">$ losetup /dev/loop0 Leap-15.1_appliance.x86_64-1.15.1

$ vi /etc/nbd-server/config

  [generic]
      user = root
      group = root
  [export]
      exportname = /dev/loop0

$ nbd-server</screen>
              </listitem>
            </varlistentry>
          </variablelist>
        </step>
        <step>
          <para>Setup boot entry in the PXE configuration</para>
          <note>
            <para>The following step assumes that the pxelinux.0 loader
                        has been configured on the boot server to boot up network
                        clients</para>
          </note>
          <para>Edit the file <literal>/srv/tftpboot/pxelinux.cfg/default</literal> and create
                    a boot entry of the form:</para>
          <variablelist>
            <varlistentry>
              <term>Using NBD:</term>
              <listitem>
                <screen language="bash">LABEL Overlay-Boot
    kernel boot/linux
    append initrd=boot/initrd root=overlay:nbd=server-ip:export</screen>
                <para>The boot parameter <literal>root=overlay:nbd=server-ip:export</literal> specifies
                                the NBD server IP address and the name of the export as used in
                                <literal>/etc/nbd-server/config</literal></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Using AoE:</term>
              <listitem>
                <screen language="bash">LABEL Overlay-Boot
    kernel boot/linux
    append initrd=boot/initrd root=overlay:aoe=AOEINTERFACE</screen>
                <para>The boot parameter <literal>root=overlay:aoe=AOEINTERFACE</literal> specifies the
                                interface name as it was exported by the <command>vbladed</command> command</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </step>
        <step>
          <para>Boot from the Network</para>
          <para>Within the network which has access to the PXE server and the
                    exported root filesystem image, any network client can now boot the
                    system. A test based on QEMU can be done as follows:</para>
          <screen language="bash">$ qemu -boot n</screen>
        </step>
      </procedure>
    </section>
  </chapter>
  <chapter xml:id="contributing" xml:base="contributing">
    <title>Contributing</title>
    <note>
      <para>
        <emphasis role="bold">Abstract</emphasis>
      </para>
      <para>This document describes the development process of KIWI NG
                and how you can be part of it. This description applies
                to version 9.23.11.</para>
    </note>
    <section xml:id="using-kiwi-ng-in-a-python-project" xml:base="contributing/kiwi_from_python">
      <title>Using KIWI NG in a Python Project</title>
      <note>
        <para>
          <emphasis role="bold">Abstract</emphasis>
        </para>
        <para>KIWI NG is provided as python module under the <emphasis role="bold">kiwi</emphasis> namespace.
                It is available for the python 3 version. The following
                description applies for KIWI NG version 9.23.11.</para>
      </note>
      <para>KIWI NG can also function as a module for other Python projects.
            The following example demonstrates how to read an existing image
            description, add a new repository definition and export the
            modified description on stdout.</para>
      <screen language="python">import sys
import logging

from kiwi.xml_description import XMLDescription
from kiwi.xml_state import XMLState

description = XMLDescription('path/to/kiwi/XML/config.xml')

xml_data = description.load()

xml_state = XMLState(
    xml_data=xml_data, profiles=[], build_type='iso'
)

xml_state.add_repository(
    repo_source='http://repo',
    repo_type='rpm-md',
    repo_alias='myrepo',
    repo_prio=99
)

xml_data.export(
    outfile=sys.stdout, level=0
)</screen>
      <para>All classes are written in a way to care for a single responsibility
            in order to allow for re-use on other use cases. Therefore it is possible
            to use KIWI NG outside of the main image building scope to manage e.g
            the setup of loop devices, filesystems, partitions, etc…</para>
    </section>
    <section xml:id="plugin-architecture" xml:base="contributing/kiwi_plugin_architecture">
      <title>Plugin Architecture</title>
      <para>Each command provided by KIWI NG is written as a task plugin under
            the <emphasis role="bold">kiwi.tasks</emphasis> namespace. As a developer you can extend KIWI NG
            with custom task plugins if the following conventions are taken
            into account:</para>
      <section xml:id="naming-conventions">
        <title>Naming Conventions</title>
        <variablelist>
          <varlistentry>
            <term>Task Plugin File Name</term>
            <listitem>
              <para>The file name of a task plugin must follow the pattern
                            <literal>&lt;service&gt;_&lt;command&gt;.py</literal>. This allows to invoke the task
                            with <command>kiwi-ng service command ...</command></para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Task Plugin Option Handling</term>
            <listitem>
              <para>KIWI NG uses the docopt module to handle options. Each task plugin
                            must use docopt to allow option handling.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Task Plugin Class</term>
            <listitem>
              <para>The implementation of the plugin must be a class that matches
                            the naming convention: <literal>&lt;Service&gt;&lt;Command&gt;Task</literal>. The class
                            must inherit from the <literal>CliTask</literal> base class. On startup of
                            the plugin, KIWI NG expects an implementation of the
                            <literal>process</literal> method.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Task Plugin Entry Point</term>
            <listitem>
              <para>Registration of the plugin must be done in <literal>setup.py</literal>
                            using the <literal>entry_points</literal> concept from Python’s setuptools.</para>
              <screen language="python">'packages': ['kiwi_plugin'],
'entry_points': {
    'kiwi.tasks': [
        'service_command=kiwi_plugin.tasks.service_command'
    ]
}</screen>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="example-plugin">
        <title>Example Plugin</title>
        <note>
          <para>The following example assumes an existing Python project
                    which was set up according to the Python project rules
                    and standards.</para>
        </note>
        <procedure>
          <step>
            <para>Assuming the project namespace is <emphasis role="bold">kiwi_relax_plugin</emphasis>.</para>
            <para>Create the task plugin directory <literal>kiwi_relax_plugin/tasks</literal></para>
          </step>
          <step>
            <para>Create the entry point in <command>setup.py</command>.</para>
            <para>Assuming we want to create the service named <emphasis role="bold">relax</emphasis> providing
                        the command <emphasis role="bold">justdoit</emphasis> this would be the following entry point
                        definition in <literal>setup.py</literal>:</para>
            <screen language="python">'packages': ['kiwi_relax_plugin'],
'entry_points': {
    'kiwi.tasks': [
        'relax_justdoit=kiwi_relax_plugin.tasks.relax_justdoit'
    ]
}</screen>
          </step>
          <step>
            <para>Create the plugin code in the file
                        <literal>kiwi_relax_plugin/tasks/relax_justdoit.py</literal> with the following
                        content:</para>
            <screen language="python">"""
usage: kiwi-ng relax justdoit -h | --help
       kiwi-ng relax justdoit --now

commands:
    justdoit
        time to relax

options:
    --now
        right now. For more details about docopt
        see: http://docopt.org
"""
# These imports requires kiwi to be part of your environment
# It can be either installed from pip into a virtual development
# environment or from the distribution package manager
from kiwi.tasks.base import CliTask
from kiwi.help import Help

class RelaxJustdoitTask(CliTask):
    def process(self):
        self.manual = Help()
        if self.command_args.get('help') is True:
            # The following will invoke man to show the man page
            # for the requested command. Thus for the call to
            # succeed a manual page needs to be written and
            # installed by the plugin
            return self.manual.show('kiwi::relax::justdoit')

        print(
            'https://genius.com/Frankie-goes-to-hollywood-relax-lyrics'
        )</screen>
          </step>
          <step>
            <para>Test the plugin</para>
            <screen language="bash">$ ./setup.py develop
$ kiwi-ng relax justdoit --now</screen>
          </step>
        </procedure>
      </section>
    </section>
    <section xml:id="extending-kiwi-ng-with-custom-operations" xml:base="contributing/schema_extensions">
      <title>Extending KIWI NG with Custom Operations</title>
      <note>
        <para>
          <emphasis role="bold">Abstract</emphasis>
        </para>
        <para>Users building images with KIWI NG need to implement their
                own infrastructure if the image description does not
                provide a way to embed custom information which is
                outside of the scope of the general schema as it is
                provided by KIWI NG today.</para>
        <para>This document describes how to create an extension plugin
                for the KIWI NG schema to add and validate additional information
                in the KIWI NG image description.</para>
        <para>Such a schema extension can be used in an additional KIWI NG
                task plugin to provide a new subcommand for KIWI NG.
                As of today there is no other plugin interface except for
                providing additional KIWI NG commands implemented.</para>
        <para>Depending on the demand for custom plugins, the interface
                to hook in code into other parts of the KIWI NG processing
                needs to be extended.</para>
        <para>This description applies for version 9.23.11.</para>
      </note>
      <section xml:id="the-extension-section">
        <title>The &lt;extension&gt; Section</title>
        <para>The main KIWI NG schema supports an extension section which allows
                to specify any XML structure and attributes as long as they are
                connected to a namespace. According to this any custom XML
                structure can be implemented like the following example shows:</para>
        <screen language="bash">&lt;image&gt;
    ...
    &lt;extension xmlns:my_plugin="http://www.my_plugin.com"&gt;
        &lt;my_plugin:my_feature&gt;
            &lt;my_plugin:title name="cool stuff"/&gt;
        &lt;/my_plugin:my_feature&gt;
    &lt;/extension&gt;
&lt;/image&gt;</screen>
        <itemizedlist>
          <listitem>
            <para>Any toplevel namespace must exist only once</para>
          </listitem>
          <listitem>
            <para>Multiple different toplevel namespaces are allowed,
                        e.g my_plugin_a, my_plugin_b</para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="relax-ng-schema-for-the-extension">
        <title>RELAX NG Schema for the Extension</title>
        <para>If an extension section is found, KIWI NG looks up its namespace and asks
                the main XML catalog for the schema file to validate the extension data.
                The schema file must be a RELAX NG schema in the .rng format. We recommend
                to place the schema as <literal>/usr/share/xml/kiwi/my_plugin.rng</literal></para>
        <para>For the above example the RELAX NG Schema in the compressed format
                <literal>my_plugin.rnc</literal> would look like this:</para>
        <screen language="cpp">namespace my_plugin = "http://www.my_plugin.com"

start =
    k.my_feature

div {
    k.my_feature.attlist = empty
    k.my_feature =
        element my_plugin:my_feature {
            k.my_feature.attlist &amp;
            k.title
        }
}

div {
    k.title.name.attribute =
        attribute name { text }
    k.title.attlist = k.title.name.attribute
    k.title =
        element my_plugin:title {
            k.title.attlist
        }
}</screen>
        <para>In order to convert this schema to the .rng format just call:</para>
        <screen language="bash">$ trang -I rnc -O rng my_plugin.rnc /usr/share/xml/kiwi/my_plugin.rng</screen>
      </section>
      <section xml:id="extension-schema-in-xml-catalog">
        <title>Extension Schema in XML catalog</title>
        <para>As mentioned above the mapping from the extension namespace to the
                correct RELAX NG schema file is handled by a XML catalog file. The
                XML catalog for the example use here looks like this:</para>
        <screen language="bash">&lt;?xml version="1.0"?&gt;
&lt;catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog"&gt;
    &lt;system
        systemId="http://www.my_plugin.com"
        uri="file:////usr/share/xml/kiwi/my_plugin.rng"/&gt;
&lt;/catalog&gt;</screen>
        <para>For resolving the catalog KIWI NG uses the <command>xmlcatalog</command> command
                and the main XML catalog from the system which is <literal>/etc/xml/catalog</literal>.</para>
        <note>
          <para>It depends on the distribution and its version how the main catalog
                    gets informed about the existence of the KIWI NG extension catalog file.
                    Please consult the distribution manual about adding XML catalogs.</para>
        </note>
        <para>If the following command provides the information to the correct
                RELAX NG schema file you are ready for a first test:</para>
        <screen language="bash">$ xmlcatalog /etc/xml/catalog http://www.my_plugin.com</screen>
      </section>
      <section xml:id="using-the-extension">
        <title>Using the Extension</title>
        <para>In order to test your extension place the example extension section
                from the beginning of this document into one of your image description’s
                <literal>config.xml</literal> file</para>
        <para>The following example will read the name attribute from the title
                section of the my_feature root element and prints it:</para>
        <screen language="python">import logging

from kiwi.xml_description import XMLDescription

description = XMLDescription('path/to/kiwi/XML/config.xml')
description.load()

my_plugin = description.get_extension_xml_data('my_plugin')

print(my_plugin.getroot()[0].get('name'))</screen>
      </section>
    </section>
    <section xml:id="the-basics">
      <title>The Basics</title>
      <para>The core appliance builder is developed in Python and follows the test
                driven development rules.</para>
      <para>If you want to implement a bigger feature, consider opening an issue on
                GitHub first to discuss the changes. Or join the discussion in the
                <literal>#kiwi</literal> channel on <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://about.riot.im">Riot.im</link>.</para>
    </section>
    <section xml:id="fork-the-upstream-repository">
      <title>Fork the upstream repository</title>
      <procedure>
        <step>
          <para>On GitHub, navigate to: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/OSInside/kiwi"/></para>
        </step>
        <step>
          <para>In the top-right corner of the page, click <command>Fork</command>.</para>
        </step>
      </procedure>
    </section>
    <section xml:id="create-a-local-clone-of-the-forked-repository">
      <title>Create a local clone of the forked repository</title>
      <screen language="shell-session">$ git clone https://github.com/YOUR-USERNAME/kiwi

$ git remote add upstream https://github.com/OSInside/kiwi.git</screen>
    </section>
    <section xml:id="install-required-operating-system-packages">
      <title>Install Required Operating System Packages</title>
      <para>KIWI NG requires the following additional packages which are not provided by
                <command>pip</command>:</para>
      <variablelist>
        <varlistentry>
          <term>XML processing libraries</term>
          <listitem>
            <para><literal>libxml2</literal> and <literal>libxslt</literal> (for <literal>lxml</literal>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Python header files, GCC compiler and glibc-devel header files</term>
          <listitem>
            <para>Required for python modules that hooks into shared library context</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Spell Checking library</term>
          <listitem>
            <para>Provided by the <literal>enchant</literal> library</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ShellCheck</term>
          <listitem>
            <para><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/koalaman/shellcheck">ShellCheck</link> script linter.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ISO creation program</term>
          <listitem>
            <para>One of <literal>xorriso</literal> (preferred) or <literal>genisoimage</literal>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>LaTeX documentation build environment</term>
          <listitem>
            <para>A full LaTeX installation is required to build the PDF documentation
                            .</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>The above mentioned system packages will be installed by calling the
                <literal>install_devel_packages.sh</literal> helper script from the checked out Git
                repository as follows:</para>
      <screen language="shell-session">$ sudo helper/install_devel_packages.sh</screen>
      <note>
        <para>The helper script checks for the package managers <literal>zypper</literal> and
                    <literal>dnf</literal> and associates a distribution with it. If you use a
                    distribution that does not use one of those package managers
                    the script will not install any packages and exit with an
                    error message. In this case we recommend to take a look at
                    the package list encoded in the script and adapt to your
                    distribution and package manager as needed.</para>
      </note>
    </section>
    <section xml:id="create-a-python-virtual-development-environment">
      <title>Create a Python Virtual Development Environment</title>
      <para>The following commands initializes and activates a development
                environment for Python 3:</para>
      <screen language="shell-session">$ tox -e devel
$ source .tox/3/bin/activate</screen>
      <para>The commands above automatically creates the application script
                called <command>kiwi-ng</command>, which allows you to run KIWI NG from the
                Python sources inside the virtual environment:</para>
      <screen language="shell-session">$ kiwi-ng --help</screen>
      <warning>
        <para>The virtualenv’s <literal>$PATH</literal> will not be taken into account when calling
                    KIWI NG via <command>sudo</command>! Use the absolute path to the KIWI NG executable
                    to run an actual build using your local changes:</para>
        <screen language="shell-session">$ sudo $PWD/.tox/3/bin/kiwi-ng system build ...</screen>
      </warning>
      <para>To leave the development mode, run:</para>
      <screen language="shell-session">$ deactivate</screen>
      <para>To resume your work, <command>cd</command> into your local Git repository and call:</para>
      <screen language="shell-session">$ source .tox/3/bin/activate</screen>
    </section>
    <section xml:id="running-the-unit-tests">
      <title>Running the Unit Tests</title>
      <para>We use <command>tox</command> to run the unit tests. Tox sets up its own
                virtualenvs inside the <literal>.tox</literal> directory for multiple Python versions
                and should thus <emphasis role="bold">not</emphasis> be invoked from inside your development virtualenv.</para>
      <para>Before submitting your changes via a pull request, ensure that all tests
                pass and that the code has the required test coverage via the command:</para>
      <screen language="shell-session">$ tox</screen>
      <para>We also include <literal>pytest-xdist</literal> in the development virtualenv which allows
                to run the unit tests in parallel. It is turned off by default but can be
                enabled via:</para>
      <screen language="shell-session">$ tox "-n NUMBER_OF_PROCESSES"</screen>
      <para>where you can insert an arbitrary number as <literal>NUMBER_OF_PROCESSES</literal> (or a
                shell command like <literal>$(nproc)</literal>). Note that the double quotes around <literal>-n
NUMBER_OF_PROCESSES</literal> are required (otherwise <command>tox</command> will consume
                this command line flag instead of forwarding it to <command>pytest</command>).</para>
      <para>The previous call would run the unit tests for different Python versions,
                check the source code for errors and build the documentation.</para>
      <para>If you want to see the available targets, use the option <literal>-l</literal> to let
                <command>tox</command> print a list of them:</para>
      <screen language="shell-session">$ tox -l</screen>
      <para>To only run a special target, use the <literal>-e</literal> option. The following
                example runs the test cases for the Python 3.6 interpreter only:</para>
      <screen language="shell-session">$ tox -e unit_py3_6</screen>
    </section>
    <section xml:id="create-a-branch-for-each-feature-or-bugfix">
      <title>Create a Branch for each Feature or Bugfix</title>
      <para>Code changes should be done in an extra Git branch. This allows for
                creating GitHub pull requests in a clean way. See also: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://help.github.com/en/categories/collaborating-with-issues-and-pull-requests">Collaborating with
                    issues and pull requests</link></para>
      <screen language="shell-session">$ git checkout -b my-topic-branch</screen>
      <para>Make and commit your changes.</para>
      <note>
        <para>You can make multiple commits which is generally useful to
                    give your changes a clear structure and to allow us to better
                    review your work.</para>
      </note>
      <note>
        <para>Your work is important and must be signed to ensure the integrity of
                    the repository and the code. Thus we recommend to setup a signing key
                    as documented in <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#signing-git-patches">Signing Git Patches</link>.</para>
      </note>
      <screen language="shell-session">$ git commit -S -a</screen>
      <para>Run the tests and code style checks. All of these are also performed by
                <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://gitlab.com/kiwi3">GitLab CI</link> when a pull request is created.</para>
      <screen language="shell-session">$ tox</screen>
      <para>Once everything is done, push your local branch to your forked repository and
                create a pull request into the upstream repository.</para>
      <screen language="shell-session">$ git push origin my-topic-branch</screen>
      <para>Thank you much for contributing to KIWI NG. Your time and work effort is very
                much appreciated!</para>
    </section>
    <section xml:id="coding-style">
      <title>Coding Style</title>
      <para>KIWI NG follows the general PEP8 guidelines with the following exceptions:</para>
      <itemizedlist>
        <listitem>
          <para>We do not use free functions at all. Even utility functions must be part
                        of a class, but should be either prefixed with the <literal>@classmethod</literal> or
                        <literal>@staticmethod</literal> decorators (whichever is more appropriate).</para>
        </listitem>
        <listitem>
          <para>Do not set module and class level variables, put these into the classes’
                        <literal>__init__</literal> method.</para>
        </listitem>
        <listitem>
          <para>The names of constants are not written in all capital letters.</para>
        </listitem>
      </itemizedlist>
      <section xml:id="documentation">
        <title>Documentation</title>
        <para>KIWI NG uses <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.sphinx-doc.org/en/master/">Sphinx</link> for the API and
                    user documentation.</para>
        <para>In order to build the HTML documentation call:</para>
        <screen language="shell-session">tox -e doc</screen>
        <para>or to build the full documentation (including a PDF generated by LaTeX
                    ):</para>
        <screen language="shell-session">tox -e packagedoc</screen>
        <para>Document all your classes, methods, their parameters and their types using
                    the standard <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html">reStructuredText</link>
                    syntax as supported by Sphinx, an example class is documented as follows:</para>
        <screen language="python">class Example:
    """
    **Example class**

    :param str param: A parameter
    :param bool : Source file name to compress
    :param list supported_zipper: List of supported compression tools
    :attr Optional[str] attr: A class attribute
    """
    def __init__(self, param, param_w_default=False):
        self.attr = param if param_w_default else None

    def method(self, param):
        """
        A method that takes a parameter.

        :param list param: a parameter
        :return: whether param is very long
        :rtype: bool
        """
        return len(param) &gt; 50</screen>
        <para>Try to stick to the following guidelines when documenting source code:</para>
        <itemizedlist>
          <listitem>
            <para>Classes should be documented directly in their main docstring and not in
                            <literal>__init__</literal>.</para>
          </listitem>
          <listitem>
            <para>Document <emphasis role="bold">every</emphasis> function parameter and every public attribute
                            including their types.</para>
          </listitem>
          <listitem>
            <para>Only public methods should be documented, private methods don’t have to,
                            unless they are complex and it is not easy to grasp what they do (which
                            should be avoided anyway).</para>
          </listitem>
        </itemizedlist>
        <para>Please also document any user-facing changes that you implementing
                    (e.g. adding a new build type) in the user documentation, which can be
                    found in <literal>doc/source</literal>. General documentation should be put into the
                    <literal>working_with_kiwi/</literal> subfolder, whereas documentation about more
                    specialized topics would belong into the <literal>building/</literal> subfolder.</para>
        <para>Adhere to a line limit of 75 characters when writing the user facing
                    documentation .</para>
      </section>
    </section>
    <section xml:id="additional-information">
      <title>Additional Information</title>
      <para>The following sections provides further information about the repository
                integrity, version, package and documentation management.</para>
      <section xml:id="signing-git-patches">
        <title>Signing Git Patches</title>
        <para>To ensure the integrity of the repository and the code base, patches sent
                    for inclusion should be signed with a GPG key.</para>
        <para>To prepare Git to sign commits, follow these instructions:</para>
        <procedure>
          <step>
            <para>Create a key suitable for signing (it is not recommended to use
                            existing keys to not mix it with your email environment):</para>
            <screen language="shell-session">$ gpg2 --expert --full-gen-key</screen>
          </step>
          <step>
            <para>Either choose a RSA key for signing (option <literal>(4)</literal>) or an ECC key for
                            signing (option <literal>(10)</literal>). For a RSA key choose a key size of 4096 bits
                            and for a ECC key choose Curve 25519 (option <literal>(1)</literal>). Enter a reasonable
                            validity period (we recommend 2 to 5 years). Complete the key generation
                            by entering your name and email address.</para>
          </step>
          <step>
            <para>Add the key ID to your git configuration, by running the following
                            <command>git config</command> commands:</para>
            <screen language="shell-session">$ git config --local user.signingkey $YOUR_SIGN_KEY_ID
$ git config --local commit.gpgSign true</screen>
            <para>Omitting the flag <literal>--local</literal> will make these settings global for all
                            repositories (they will be added to <literal>~/.gitconfig</literal>). You can find
                            your signkey’s ID via:</para>
            <screen language="shell-session">$ gpg2 --list-keys --keyid-format long $YOUR_EMAIL
pub   rsa4096/AABBCCDDEEFF0011 2019-04-26 [S] [expires: 2021-04-16]
AAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBB
uid                 [ultimate] YOU &lt;$YOUR_EMAIL&gt;</screen>
            <para>The key’s ID in this case would be <literal>AABBCCDDEEFF0011</literal>. Note that your
                            signkey will have only a <literal>[S]</literal> after the creation date, not a <literal>[SC]</literal>
                            (then you are looking at your ordinary GPG key that can also encrypt).</para>
          </step>
        </procedure>
      </section>
      <section xml:id="bumping-the-version">
        <title>Bumping the Version</title>
        <para>The KIWI NG project follows the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://semver.org">Semantic Versioning</link>
                    scheme. We use the <command>bumpversion</command> tool for consistent versioning.</para>
        <para>Follow these instructions to bump the major, minor, or patch part of the
                    KIWI NG version. Ensure that your repository is clean (i.e. no modified and
                    unknown files exist) beforehand running <command>bumpversion</command>.</para>
        <itemizedlist>
          <listitem>
            <para>For backwards-compatible bug fixes:</para>
            <screen language="shell-session">$ bumpversion patch</screen>
          </listitem>
          <listitem>
            <para>For additional functionality in a backwards-compatible manner. When
                            changed, the patch level is reset to zero:</para>
            <screen language="shell-session">$ bumpversion minor</screen>
          </listitem>
          <listitem>
            <para>For incompatible API changes. When changed, the patch and minor
                            levels are reset to zero:</para>
            <screen language="shell-session">$ bumpversion major</screen>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="creating-a-rpm-package">
        <title>Creating a RPM Package</title>
        <para>We provide a template for a RPM spec file in
                    <literal>package/python-kiwi-spec-template</literal> alongside with a rpmlint
                    configuration file and an automatically updated
                    <literal>python-kiwi.changes</literal>.</para>
        <para>To create the necessary files to build a RPM package via <literal>rpmbuild</literal>, run:</para>
        <screen language="shell-session">$ make build</screen>
        <para>The sources are collected in the <literal>dist/</literal> directory. These can be
                    directly build it with <command>rpmbuild</command>, <command>fedpkg</command>, or submitted
                    to the Open Build Service using <command>osc</command>.</para>
      </section>
    </section>
  </chapter>
  <chapter xml:id="api" xml:base="api">
    <title>Python API</title>
    <note>
      <para>This API documentation covers KIWI NG 9.23.11</para>
    </note>
    <section xml:id="kiwi-package" xml:base="api/kiwi">
      <title>kiwi Package</title>
      <section xml:id="db-kiwi-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.app_kiwi-app-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.app"><literal>kiwi.app</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.app.App">
            <term>
              <literal>kiwi.app.App</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements creation of task instances</emphasis>
              </para>
              <para>Each task class implements a process method which is called
                        when constructing an instance of App</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.cli_kiwi-cli-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.cli"><literal>kiwi.cli</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.cli.Cli">
            <term>
              <literal>kiwi.cli.Cli</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements the main command line interface</emphasis>
              </para>
              <para>An instance of the Cli class builds the entry point for the
                        application and implements methods to load further command plugins
                        which itself provides their own command line interface</para>
              <variablelist>
                <varlistentry xml:id="kiwi.cli.Cli.get_command">
                  <term>
                    <property>kiwi.cli.Cli.get_command</property>
                  </term>
                  <listitem>
                    <para>Extract selected command name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>command name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.cli.Cli.get_command_args">
                  <term>
                    <property>kiwi.cli.Cli.get_command_args</property>
                  </term>
                  <listitem>
                    <para>Extract argument dict for selected command</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Contains dictionary of command arguments</para>
                          <screen language="python">{
    '--command-option': 'value'
}</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.cli.Cli.get_global_args">
                  <term>
                    <property>kiwi.cli.Cli.get_global_args</property>
                  </term>
                  <listitem>
                    <para>Extract argument dict for global arguments</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Contains dictionary of global arguments</para>
                          <screen language="python">{
    '--global-option': 'value'
}</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.cli.Cli.get_servicename">
                  <term>
                    <property>kiwi.cli.Cli.get_servicename</property>
                  </term>
                  <listitem>
                    <para>Extract service name from argument parse result</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>service name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.cli.Cli.invoke_kiwicompat">
                  <term>
                    <property>kiwi.cli.Cli.invoke_kiwicompat</property>
                  </term>
                  <listitem>
                    <para>Execute kiwicompat with provided legacy KIWI command line arguments</para>
                    <para>Example:</para>
                    <screen language="python">invoke_kiwicompat(
    '--build', 'description', '--type', 'vmx',
    '-d', 'destination'
)</screen>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>compat_args</literal> () – legacy kiwi command arguments</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.cli.Cli.load_command">
                  <term>
                    <property>kiwi.cli.Cli.load_command</property>
                  </term>
                  <listitem>
                    <para>Loads task class plugin according to service and command name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>loaded task module</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.cli.Cli.show_and_exit_on_help_request">
                  <term>
                    <property>kiwi.cli.Cli.show_and_exit_on_help_request</property>
                  </term>
                  <listitem>
                    <para>Execute man to show the selected manual page</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.command_kiwi-command-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.command"><literal>kiwi.command</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.command.Command">
            <term>
              <literal>kiwi.command.Command</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements command invocation</emphasis>
              </para>
              <para>An instance of Command provides methods to invoke external
                        commands in blocking and non blocking mode. Control of
                        stdout and stderr is given to the caller</para>
              <variablelist>
                <varlistentry xml:id="kiwi.command.Command.call">
                  <term>
                    <property>kiwi.command.Command.call</property>
                  </term>
                  <listitem>
                    <para>Execute a program and return an io file handle pair back.
                                stdout and stderr are both on different channels. The caller
                                must read from the output file handles in order to actually
                                run the command. This can be done using the CommandIterator
                                from command_process</para>
                    <para>Example:</para>
                    <screen language="python">process = Command.call(['ls', '-l'])</screen>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>command</literal> () – command and arguments</para>
                            </listitem>
                            <listitem>
                              <para><literal>custom_env</literal> () – custom os.environ</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Contains process results in command type</para>
                          <screen language="python">command(
    output='string', output_available=bool,
    error='string', error_available=bool,
    process=subprocess
)</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>namedtuple</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.command.Command.run">
                  <term>
                    <property>kiwi.command.Command.run</property>
                  </term>
                  <listitem>
                    <para>Execute a program and block the caller. The return value
                                is a hash containing the stdout, stderr and return code
                                information. Unless raise_on_error is set to false an
                                exception is thrown if the command exits with an error
                                code not equal to zero</para>
                    <para>Example:</para>
                    <screen language="python">result = Command.run(['ls', '-l'])</screen>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>command</literal> () – command and arguments</para>
                            </listitem>
                            <listitem>
                              <para><literal>custom_env</literal> () – custom os.environ</para>
                            </listitem>
                            <listitem>
                              <para><literal>raise_on_error</literal> () – control error behaviour</para>
                            </listitem>
                            <listitem>
                              <para><literal>stderr_to_stdout</literal> () – redirects stderr to stdout</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Contains call results in command type</para>
                          <screen language="python">command(output='string', error='string', returncode=int)</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>namedtuple</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.command.command_type">
            <term>
              <property>kiwi.command.command_type</property>
            </term>
            <listitem>
              <para>alias of <literal>kiwi.command.command</literal></para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.command_process_kiwi-command-process-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.command_process"><literal>kiwi.command_process</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.command_process.CommandIterator">
            <term>
              <literal>kiwi.command_process.CommandIterator</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements an Iterator for Instances of Command</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>command</literal> () – instance of subprocess</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.command_process.CommandIterator.get_error_code">
                  <term>
                    <property>kiwi.command_process.CommandIterator.get_error_code</property>
                  </term>
                  <listitem>
                    <para>Provide return value from processed command</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>errorcode</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.command_process.CommandIterator.get_error_output">
                  <term>
                    <property>kiwi.command_process.CommandIterator.get_error_output</property>
                  </term>
                  <listitem>
                    <para>Provide data which was sent to the stderr channel</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>stderr data</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.command_process.CommandIterator.get_pid">
                  <term>
                    <property>kiwi.command_process.CommandIterator.get_pid</property>
                  </term>
                  <listitem>
                    <para>Provide process ID of command while running</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>pid</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.command_process.CommandIterator.kill">
                  <term>
                    <property>kiwi.command_process.CommandIterator.kill</property>
                  </term>
                  <listitem>
                    <para>Send kill signal SIGTERM to command process</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.command_process.CommandProcess">
            <term>
              <literal>kiwi.command_process.CommandProcess</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements processing of non blocking Command calls</emphasis>
              </para>
              <para>Provides methods to iterate over non blocking instances of
                        the Command class with and without progress information</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>command</literal> () – instance of subprocess</para>
                      </listitem>
                      <listitem>
                        <para><literal>log_topic</literal> () – topic string for logging</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.command_process.CommandProcess.create_match_method">
                  <term>
                    <property>kiwi.command_process.CommandProcess.create_match_method</property>
                  </term>
                  <listitem>
                    <para>create a matcher function pointer which calls the given
                                method as method(item_to_match, data) on dereference</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>method</literal> () – function reference</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>function pointer</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.command_process.CommandProcess.poll">
                  <term>
                    <property>kiwi.command_process.CommandProcess.poll</property>
                  </term>
                  <listitem>
                    <para>Iterate over process, raise on error and log output</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.command_process.CommandProcess.poll_and_watch">
                  <term>
                    <property>kiwi.command_process.CommandProcess.poll_and_watch</property>
                  </term>
                  <listitem>
                    <para>Iterate over process don’t raise on error and log
                                stdout and stderr</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.command_process.CommandProcess.poll_show_progress">
                  <term>
                    <property>kiwi.command_process.CommandProcess.poll_show_progress</property>
                  </term>
                  <listitem>
                    <para>Iterate over process and show progress in percent
                                raise on error and log output</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>items_to_complete</literal> () – all items</para>
                            </listitem>
                            <listitem>
                              <para><literal>match_method</literal> () – method matching item</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.command_process.CommandProcess.returncode">
                  <term>
                    <property>kiwi.command_process.CommandProcess.returncode</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.defaults_kiwi-defaults-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.defaults"><literal>kiwi.defaults</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.defaults.Defaults">
            <term>
              <literal>kiwi.defaults.Defaults</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements default values</emphasis>
              </para>
              <para>Provides static methods for default values and state information</para>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get">
                  <term>
                    <property>kiwi.defaults.Defaults.get</property>
                  </term>
                  <listitem>
                    <para>Implements get method for profile elements</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>key</literal> () – profile keyname</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>key value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_archive_image_types">
                  <term>
                    <property>kiwi.defaults.Defaults.get_archive_image_types</property>
                  </term>
                  <listitem>
                    <para>Provides list of supported archive image types</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>archive names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_bios_image_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_bios_image_name</property>
                  </term>
                  <listitem>
                    <para>Provides bios core boot binary name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_bios_module_directory_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_bios_module_directory_name</property>
                  </term>
                  <listitem>
                    <para>Provides x86 BIOS directory name which stores the pc binaries</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_boot_image_description_path">
                  <term>
                    <property>kiwi.defaults.Defaults.get_boot_image_description_path</property>
                  </term>
                  <listitem>
                    <para>Provides the path to find custom kiwi boot descriptions</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_boot_image_strip_file">
                  <term>
                    <property>kiwi.defaults.Defaults.get_boot_image_strip_file</property>
                  </term>
                  <listitem>
                    <para>Provides the file path to bootloader strip metadata.
                                This file contains information about the files and directories
                                automatically striped out from the kiwi initrd</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_buildservice_env_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_buildservice_env_name</property>
                  </term>
                  <listitem>
                    <para>Provides the base name of the environment file in a
                                buildservice worker</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file basename</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_common_functions_file">
                  <term>
                    <property>kiwi.defaults.Defaults.get_common_functions_file</property>
                  </term>
                  <listitem>
                    <para>Provides the file path to config functions metadata.</para>
                    <para>This file contains bash functions used for system
                                configuration or in the boot code from the kiwi initrd</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_container_base_image_tag">
                  <term>
                    <property>kiwi.defaults.Defaults.get_container_base_image_tag</property>
                  </term>
                  <listitem>
                    <para>Provides the tag used to identify base layers during the build
                                of derived images.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>tag</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_container_compression">
                  <term>
                    <property>kiwi.defaults.Defaults.get_container_compression</property>
                  </term>
                  <listitem>
                    <para>Provides default container compression algorithm</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_container_image_types">
                  <term>
                    <property>kiwi.defaults.Defaults.get_container_image_types</property>
                  </term>
                  <listitem>
                    <para>Provides list of supported container image types</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>container names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_custom_rpm_bootstrap_macro_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_custom_rpm_bootstrap_macro_name</property>
                  </term>
                  <listitem>
                    <para>Returns the rpm bootstrap macro file name created
                                in the custom rpm macros path</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>filename</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_custom_rpm_image_macro_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_custom_rpm_image_macro_name</property>
                  </term>
                  <listitem>
                    <para>Returns the rpm image macro file name created
                                in the custom rpm macros path</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>filename</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_custom_rpm_macros_path">
                  <term>
                    <property>kiwi.defaults.Defaults.get_custom_rpm_macros_path</property>
                  </term>
                  <listitem>
                    <para>Returns the custom macros directory for the rpm database.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_boot_mbytes">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_boot_mbytes</property>
                  </term>
                  <listitem>
                    <para>Provides default boot partition size in mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_boot_timeout_seconds">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_boot_timeout_seconds</property>
                  </term>
                  <listitem>
                    <para>Provides default boot timeout in seconds</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>seconds</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_bootloader">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_bootloader</property>
                  </term>
                  <listitem>
                    <para>Return default bootloader name which is grub2</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>bootloader name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_container_created_by">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_container_created_by</property>
                  </term>
                  <listitem>
                    <para>Provides the default ‘created by’ history entry for containers.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>the specific kiwi version used for the build</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_container_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_container_name</property>
                  </term>
                  <listitem>
                    <para>Provides the default container name.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_container_subcommand">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_container_subcommand</property>
                  </term>
                  <listitem>
                    <para>Provides the default container subcommand.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>command as a list of arguments</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_container_tag">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_container_tag</property>
                  </term>
                  <listitem>
                    <para>Provides the default container tag.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>tag</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_disk_start_sector">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_disk_start_sector</property>
                  </term>
                  <listitem>
                    <para>Provides the default initial disk sector for the first disk
                                partition.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>sector value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_efi_boot_mbytes">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_efi_boot_mbytes</property>
                  </term>
                  <listitem>
                    <para>Provides default EFI partition size in mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_efi_partition_table_type">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_efi_partition_table_type</property>
                  </term>
                  <listitem>
                    <para>Provides the default partition table type for efi firmwares.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>partition table type name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_firmware">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_firmware</property>
                  </term>
                  <listitem>
                    <para>Provides default firmware for specified architecture</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>arch</literal> () – machine architecture name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>firmware name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_inode_size">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_inode_size</property>
                  </term>
                  <listitem>
                    <para>Provides default size of inodes in bytes. This is only
                                relevant for inode based filesystems</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>bytesize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_legacy_bios_mbytes">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_legacy_bios_mbytes</property>
                  </term>
                  <listitem>
                    <para>Provides default size of bios_grub partition in mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_live_iso_root_filesystem">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_live_iso_root_filesystem</property>
                  </term>
                  <listitem>
                    <para>Provides default live iso root filesystem type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>filesystem name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_live_iso_type">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_live_iso_type</property>
                  </term>
                  <listitem>
                    <para>Provides default live iso union type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>live iso type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_package_manager">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_package_manager</property>
                  </term>
                  <listitem>
                    <para>Returns the default package manager name if none
                                is configured in the image description</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>package manager name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_packager_tool">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_packager_tool</property>
                  </term>
                  <listitem>
                    <para>Provides the packager tool according to the package manager</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>package_manager</literal> () – package manger name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>packager tool binary name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_prep_mbytes">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_prep_mbytes</property>
                  </term>
                  <listitem>
                    <para>Provides default size of prep partition in mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_uri_type">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_uri_type</property>
                  </term>
                  <listitem>
                    <para>Provides default URI type</para>
                    <para>Absolute path specifications used in the context of an URI
                                will apply the specified default mime type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>URI mime type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_video_mode">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_video_mode</property>
                  </term>
                  <listitem>
                    <para>Uses auto mode for default video. See get_video_mode_map
                                for details on the value depending which bootloader is
                                used</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>auto</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_default_volume_group_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_default_volume_group_name</property>
                  </term>
                  <listitem>
                    <para>Provides default LVM volume group name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_disk_format_types">
                  <term>
                    <property>kiwi.defaults.Defaults.get_disk_format_types</property>
                  </term>
                  <listitem>
                    <para>Provides supported disk format types</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>disk types</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_disk_image_types">
                  <term>
                    <property>kiwi.defaults.Defaults.get_disk_image_types</property>
                  </term>
                  <listitem>
                    <para>Provides supported disk image types</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>disk image type names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_dracut_conf_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_dracut_conf_name</property>
                  </term>
                  <listitem>
                    <para>Provides file path of dracut config file to be used with KIWI</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_ec2_capable_firmware_names">
                  <term>
                    <property>kiwi.defaults.Defaults.get_ec2_capable_firmware_names</property>
                  </term>
                  <listitem>
                    <para>Provides list of EC2 capable firmware names. These are
                                those for which kiwi supports the creation of disk images
                                bootable within the Amazon EC2 public cloud</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>firmware names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_efi_capable_firmware_names">
                  <term>
                    <property>kiwi.defaults.Defaults.get_efi_capable_firmware_names</property>
                  </term>
                  <listitem>
                    <para>Provides list of EFI capable firmware names. These are
                                those for which kiwi supports the creation of an EFI
                                bootable disk image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>firmware names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_efi_image_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_efi_image_name</property>
                  </term>
                  <listitem>
                    <para>Provides architecture specific EFI boot binary name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>arch</literal> () – machine architecture name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_efi_module_directory_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_efi_module_directory_name</property>
                  </term>
                  <listitem>
                    <para>Provides architecture specific EFI directory name which
                                stores the EFI binaries for the desired architecture.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>arch</literal> () – machine architecture name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_efi_vendor_directory">
                  <term>
                    <property>kiwi.defaults.Defaults.get_efi_vendor_directory</property>
                  </term>
                  <listitem>
                    <para>Provides EFI vendor directory if present</para>
                    <para>Looks up distribution specific EFI vendor directory</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_path</literal> () – path to efi mountpoint</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory path or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_exclude_list_for_non_physical_devices">
                  <term>
                    <property>kiwi.defaults.Defaults.get_exclude_list_for_non_physical_devices</property>
                  </term>
                  <listitem>
                    <para>Provides the list of folders that are not associated
                                with a physical device. KIWI returns the basename of
                                the folders typically used as mountpoint for those
                                devices.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of file and directory names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_exclude_list_for_root_data_sync">
                  <term>
                    <property>kiwi.defaults.Defaults.get_exclude_list_for_root_data_sync</property>
                  </term>
                  <listitem>
                    <para>Provides the list of files or folders that are created
                                by KIWI for its own purposes. Those files should be not
                                be included in the resulting image.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of file and directory names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_failsafe_kernel_options">
                  <term>
                    <property>kiwi.defaults.Defaults.get_failsafe_kernel_options</property>
                  </term>
                  <listitem>
                    <para>Provides failsafe boot kernel options</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of kernel options</para>
                          <screen language="python">['option=value', 'option']</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_filesystem_image_types">
                  <term>
                    <property>kiwi.defaults.Defaults.get_filesystem_image_types</property>
                  </term>
                  <listitem>
                    <para>Provides list of supported filesystem image types</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>filesystem names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_firmware_types">
                  <term>
                    <property>kiwi.defaults.Defaults.get_firmware_types</property>
                  </term>
                  <listitem>
                    <para>Provides supported architecture specific firmware types</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>firmware types per architecture</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_grub_basic_modules">
                  <term>
                    <property>kiwi.defaults.Defaults.get_grub_basic_modules</property>
                  </term>
                  <listitem>
                    <para>Provides list of basic grub modules</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>multiboot</literal> () – grub multiboot mode</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of module names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_grub_bios_core_loader">
                  <term>
                    <property>kiwi.defaults.Defaults.get_grub_bios_core_loader</property>
                  </term>
                  <listitem>
                    <para>Provides grub bios image</para>
                    <para>Searches distribution specific locations to find the
                                core bios image below the given root path</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_path</literal> () – image root path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_grub_bios_modules">
                  <term>
                    <property>kiwi.defaults.Defaults.get_grub_bios_modules</property>
                  </term>
                  <listitem>
                    <para>Provides list of grub bios modules</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>multiboot</literal> () – grub multiboot mode</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of module names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_grub_boot_directory_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_grub_boot_directory_name</property>
                  </term>
                  <listitem>
                    <para>Provides grub2 data directory name in boot/ directory</para>
                    <para>Depending on the distribution the grub2 boot path could be
                                either boot/grub2 or boot/grub. The method will decide for
                                the correct base directory name according to the name pattern
                                of the installed grub2 tools</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory basename</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_grub_efi_font_directory">
                  <term>
                    <property>kiwi.defaults.Defaults.get_grub_efi_font_directory</property>
                  </term>
                  <listitem>
                    <para>Provides distribution specific EFI font directory used with grub.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_path</literal> () – image root path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_grub_efi_modules">
                  <term>
                    <property>kiwi.defaults.Defaults.get_grub_efi_modules</property>
                  </term>
                  <listitem>
                    <para>Provides list of grub efi modules</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>multiboot</literal> () – grub multiboot mode</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of module names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_grub_ofw_modules">
                  <term>
                    <property>kiwi.defaults.Defaults.get_grub_ofw_modules</property>
                  </term>
                  <listitem>
                    <para>Provides list of grub ofw modules (ppc)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of module names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_grub_path">
                  <term>
                    <property>kiwi.defaults.Defaults.get_grub_path</property>
                  </term>
                  <listitem>
                    <para>Provides grub path to given search file</para>
                    <para>Depending on the distribution grub could be installed below
                                a grub2 or grub directory. grub could also reside in /usr/lib
                                as well as in /usr/share. Therefore this information needs
                                to be dynamically looked up</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>root_path</literal> () – root path to start the lookup from</para>
                            </listitem>
                            <listitem>
                              <para><literal>filename</literal> () – filename to search</para>
                            </listitem>
                            <listitem>
                              <para><literal>raise_on_error</literal> () – raise on not found, defaults to True</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>The method returns the path to the given grub search file.
                                By default it raises a KiwiBootLoaderGrubDataError exception
                                if the file could not be found in any of the search locations.
                                If raise_on_error is set to False and no file could be found
                                the function returns None</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>filepath</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_grub_s390_modules">
                  <term>
                    <property>kiwi.defaults.Defaults.get_grub_s390_modules</property>
                  </term>
                  <listitem>
                    <para>Provides list of grub ofw modules (s390)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of module names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_imported_root_image">
                  <term>
                    <property>kiwi.defaults.Defaults.get_imported_root_image</property>
                  </term>
                  <listitem>
                    <para>Provides the path to an imported root system image</para>
                    <para>If the image description specified a derived_from attribute
                                the file from this attribute is copied into the root_dir
                                using the name as provided by this method</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_dir</literal> () – image root directory</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_install_volume_id">
                  <term>
                    <property>kiwi.defaults.Defaults.get_install_volume_id</property>
                  </term>
                  <listitem>
                    <para>Provides default value for ISO volume ID for install media</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_iso_boot_path">
                  <term>
                    <property>kiwi.defaults.Defaults.get_iso_boot_path</property>
                  </term>
                  <listitem>
                    <para>Provides arch specific relative path to boot files
                                on kiwi iso filesystems</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>relative path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_iso_tool_category">
                  <term>
                    <property>kiwi.defaults.Defaults.get_iso_tool_category</property>
                  </term>
                  <listitem>
                    <para>Provides default iso tool category</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_isolinux_bios_grub_loader">
                  <term>
                    <property>kiwi.defaults.Defaults.get_isolinux_bios_grub_loader</property>
                  </term>
                  <listitem>
                    <para>Return name of eltorito grub image used as isolinux loader
                                in BIOS mode if isolinux.bin should not be used</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file base name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_kis_image_types">
                  <term>
                    <property>kiwi.defaults.Defaults.get_kis_image_types</property>
                  </term>
                  <listitem>
                    <para>Provides supported kis image types</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>kis image type names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_live_dracut_modules_from_flag">
                  <term>
                    <property>kiwi.defaults.Defaults.get_live_dracut_modules_from_flag</property>
                  </term>
                  <listitem>
                    <para>Provides flag_name to dracut modules name map</para>
                    <para>Depending on the value of the flag attribute in the KIWI image
                                description specific dracut modules need to be selected</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>dracut module names as list</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_live_image_types">
                  <term>
                    <property>kiwi.defaults.Defaults.get_live_image_types</property>
                  </term>
                  <listitem>
                    <para>Provides supported live image types</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>live image type names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_live_iso_persistent_boot_options">
                  <term>
                    <property>kiwi.defaults.Defaults.get_live_iso_persistent_boot_options</property>
                  </term>
                  <listitem>
                    <para>Provides list of boot options passed to the dracut
                                kiwi-live module to setup persistent writing</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of boot options</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_luks_key_length">
                  <term>
                    <property>kiwi.defaults.Defaults.get_luks_key_length</property>
                  </term>
                  <listitem>
                    <para>Provides key length to use for random luks keys</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_lvm_overhead_mbytes">
                  <term>
                    <property>kiwi.defaults.Defaults.get_lvm_overhead_mbytes</property>
                  </term>
                  <listitem>
                    <para>Provides empiric LVM overhead size in mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_min_partition_mbytes">
                  <term>
                    <property>kiwi.defaults.Defaults.get_min_partition_mbytes</property>
                  </term>
                  <listitem>
                    <para>Provides default minimum partition size in mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_min_volume_mbytes">
                  <term>
                    <property>kiwi.defaults.Defaults.get_min_volume_mbytes</property>
                  </term>
                  <listitem>
                    <para>Provides default minimum LVM volume size in mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_obs_download_server_url">
                  <term>
                    <property>kiwi.defaults.Defaults.get_obs_download_server_url</property>
                  </term>
                  <listitem>
                    <para>Provides the default download server url hosting the public open
                                buildservice repositories</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>url path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_oci_archive_tool">
                  <term>
                    <property>kiwi.defaults.Defaults.get_oci_archive_tool</property>
                  </term>
                  <listitem>
                    <para>Provides the default OCI archive tool name.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_platform_name">
                  <term>
                    <property>kiwi.defaults.Defaults.get_platform_name</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_preparer">
                  <term>
                    <property>kiwi.defaults.Defaults.get_preparer</property>
                  </term>
                  <listitem>
                    <para>Provides ISO preparer name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_profile_file">
                  <term>
                    <property>kiwi.defaults.Defaults.get_profile_file</property>
                  </term>
                  <listitem>
                    <para>Return name of profile file for given root directory</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_publisher">
                  <term>
                    <property>kiwi.defaults.Defaults.get_publisher</property>
                  </term>
                  <listitem>
                    <para>Provides ISO publisher name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_recovery_spare_mbytes">
                  <term>
                    <property>kiwi.defaults.Defaults.get_recovery_spare_mbytes</property>
                  </term>
                  <listitem>
                    <para>Provides spare size of recovery partition in mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_schema_file">
                  <term>
                    <property>kiwi.defaults.Defaults.get_schema_file</property>
                  </term>
                  <listitem>
                    <para>Provides file path to kiwi RelaxNG schema</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_shared_cache_location">
                  <term>
                    <property>kiwi.defaults.Defaults.get_shared_cache_location</property>
                  </term>
                  <listitem>
                    <para>Provides the shared cache location</para>
                    <para>This is a directory which shares data from the image buildsystem
                                host with the image root system. The location is returned as an
                                absolute path stripped off by the leading ‘/’. This is because
                                the path is transparently used on the host /&lt;cache-dir&gt; and
                                inside of the image imageroot/&lt;cache-dir&gt;</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_shim_loader">
                  <term>
                    <property>kiwi.defaults.Defaults.get_shim_loader</property>
                  </term>
                  <listitem>
                    <para>Provides shim loader file path</para>
                    <para>Searches distribution specific locations to find shim.efi
                                below the given root path</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_path</literal> () – image root path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_shim_vendor_directory">
                  <term>
                    <property>kiwi.defaults.Defaults.get_shim_vendor_directory</property>
                  </term>
                  <listitem>
                    <para>Provides shim vendor directory</para>
                    <para>Searches distribution specific locations to find shim.efi
                                below the given root path and return the directory name
                                to the file found</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_path</literal> () – image root path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory path or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_signed_grub_loader">
                  <term>
                    <property>kiwi.defaults.Defaults.get_signed_grub_loader</property>
                  </term>
                  <listitem>
                    <para>Provides shim signed grub loader file path</para>
                    <para>Searches distribution specific locations to find grub.efi
                                below the given root path</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_path</literal> () – image root path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_snapper_config_template_file">
                  <term>
                    <property>kiwi.defaults.Defaults.get_snapper_config_template_file</property>
                  </term>
                  <listitem>
                    <para>Provides the default configuration template file for snapper</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_solvable_location">
                  <term>
                    <property>kiwi.defaults.Defaults.get_solvable_location</property>
                  </term>
                  <listitem>
                    <para>Provides the directory to store SAT solvables for repositories.
                                The solvable files are used to perform package
                                dependency and metadata resolution</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_swapsize_mbytes">
                  <term>
                    <property>kiwi.defaults.Defaults.get_swapsize_mbytes</property>
                  </term>
                  <listitem>
                    <para>Provides swapsize in MB</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_sync_options">
                  <term>
                    <property>kiwi.defaults.Defaults.get_sync_options</property>
                  </term>
                  <listitem>
                    <para>Provides list of default data sync options</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of rsync options</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_syslinux_modules">
                  <term>
                    <property>kiwi.defaults.Defaults.get_syslinux_modules</property>
                  </term>
                  <listitem>
                    <para>Returns list of syslinux modules to include on ISO
                                images that boots via isolinux</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>base file names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_syslinux_search_paths">
                  <term>
                    <property>kiwi.defaults.Defaults.get_syslinux_search_paths</property>
                  </term>
                  <listitem>
                    <para>syslinux is packaged differently between distributions.
                                This method returns a list of directories to search for
                                syslinux data</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_unsigned_grub_loader">
                  <term>
                    <property>kiwi.defaults.Defaults.get_unsigned_grub_loader</property>
                  </term>
                  <listitem>
                    <para>Provides unsigned grub efi loader file path</para>
                    <para>Searches distribution specific locations to find grub.efi
                                below the given root path</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_path</literal> () – image root path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_vagrant_config_virtualbox_guest_additions">
                  <term>
                    <property>kiwi.defaults.Defaults.get_vagrant_config_virtualbox_guest_additions</property>
                  </term>
                  <listitem>
                    <para>Provides the default value for
                                <literal>vagrantconfig.virtualbox_guest_additions_present</literal></para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>whether guest additions are expected to be present in the
                                            vagrant box</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_vendor_grubenv">
                  <term>
                    <property>kiwi.defaults.Defaults.get_vendor_grubenv</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_video_mode_map">
                  <term>
                    <property>kiwi.defaults.Defaults.get_video_mode_map</property>
                  </term>
                  <listitem>
                    <para>Provides video mode map</para>
                    <para>Assign a tuple to each kernel vesa hex id for each of the
                                supported bootloaders</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>video type map</para>
                          <screen language="python">{'kernel_hex_mode': video_type(grub2='mode', isolinux='mode')}</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_volume_id">
                  <term>
                    <property>kiwi.defaults.Defaults.get_volume_id</property>
                  </term>
                  <listitem>
                    <para>Provides default value for ISO volume ID</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_xsl_stylesheet_file">
                  <term>
                    <property>kiwi.defaults.Defaults.get_xsl_stylesheet_file</property>
                  </term>
                  <listitem>
                    <para>Provides the file path to the KIWI XSLT style sheets</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.get_xz_compression_options">
                  <term>
                    <property>kiwi.defaults.Defaults.get_xz_compression_options</property>
                  </term>
                  <listitem>
                    <para>Provides compression options for the xz compressor</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Contains list of options</para>
                          <screen language="python">['--option=value']</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.is_buildservice_worker">
                  <term>
                    <property>kiwi.defaults.Defaults.is_buildservice_worker</property>
                  </term>
                  <listitem>
                    <para>Checks if build host is an open buildservice machine</para>
                    <para>The presence of /.buildenv on the build host indicates
                                we are building inside of the open buildservice</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True if obs worker, else False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.is_x86_arch">
                  <term>
                    <property>kiwi.defaults.Defaults.is_x86_arch</property>
                  </term>
                  <listitem>
                    <para>Checks if machine architecture is x86 based</para>
                    <para>Any arch that matches 32bit and 64bit x86 architecture
                                causes the method to return True. Anything else will
                                cause the method to return False</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.project_file">
                  <term>
                    <property>kiwi.defaults.Defaults.project_file</property>
                  </term>
                  <listitem>
                    <para>Provides the python module base directory search path</para>
                    <para>The method uses the resource_filename method to identify
                                files and directories from the application</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – relative project file</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>absolute file path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.set_shared_cache_location">
                  <term>
                    <property>kiwi.defaults.Defaults.set_shared_cache_location</property>
                  </term>
                  <listitem>
                    <para>Sets the shared cache location once</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>location</literal> () – a location path</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.defaults.Defaults.to_profile">
                  <term>
                    <property>kiwi.defaults.Defaults.to_profile</property>
                  </term>
                  <listitem>
                    <para>Implements method to add list of profile keys and their values
                                to the specified instance of a Profile class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>profile</literal> () – Profile instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.exceptions_kiwi-exceptions-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.exceptions"><literal>kiwi.exceptions</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiAnyMarkupPluginError">
            <term>
              <literal>kiwi.exceptions.KiwiAnyMarkupPluginError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the python anymarkup module failed to load.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiArchiveSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiArchiveSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an unsupported image archive type is used.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiArchiveTarError">
            <term>
              <literal>kiwi.exceptions.KiwiArchiveTarError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if impossible to determine which tar command
                        version is installed on the underlying system</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootImageDumpError">
            <term>
              <literal>kiwi.exceptions.KiwiBootImageDumpError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an instance of BootImage* can not be
                        serialized on as file via pickle dump</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootImageSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiBootImageSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an unsupported initrd system type is used.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderConfigSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderConfigSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a configuration for an unsupported
                        bootloader is requested.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderGrubDataError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderGrubDataError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if no grub installation was found.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderGrubFontError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderGrubFontError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if no grub unicode font was found.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderGrubInstallError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderGrubInstallError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if grub install to master boot record has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderGrubModulesError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderGrubModulesError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the synchronisation of modules from the
                        grub installation to the boot space has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderGrubPlatformError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderGrubPlatformError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to use grub on an
                        unsupported platform.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderGrubSecureBootError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderGrubSecureBootError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the Microsoft signed shim loader or
                        grub2 loader could not be found in the image root system</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderInstallSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderInstallSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an installation for an unsupported
                        bootloader is requested.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderTargetError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderTargetError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the target to read the bootloader path
                        from is not a disk or an iso image.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderZiplInstallError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderZiplInstallError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the installation of zipl has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderZiplPlatformError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderZiplPlatformError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a configuration for an unsupported
                        zipl architecture is requested.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootLoaderZiplSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiBootLoaderZiplSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the data set to configure the zipl
                        bootloader is incomplete.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBootStrapPhaseFailed">
            <term>
              <literal>kiwi.exceptions.KiwiBootStrapPhaseFailed</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the bootstrap phase of the system prepare
                        command has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBuildahError">
            <term>
              <literal>kiwi.exceptions.KiwiBuildahError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised on inconsistent buildah class calls</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiBundleError">
            <term>
              <literal>kiwi.exceptions.KiwiBundleError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the system bundle command has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiCommandCapabilitiesError">
            <term>
              <literal>kiwi.exceptions.KiwiCommandCapabilitiesError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception is raised when some the CommandCapabilities methods fails,
                        usually meaning there is some issue trying to parse some command output.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiCommandError">
            <term>
              <literal>kiwi.exceptions.KiwiCommandError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an external command called via a Command
                        instance has returned with an exit code != 0 or could not
                        be called at all.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiCommandNotFound">
            <term>
              <literal>kiwi.exceptions.KiwiCommandNotFound</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if any executable command cannot be found in
                        the evironment PATH variable.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiCommandNotLoaded">
            <term>
              <literal>kiwi.exceptions.KiwiCommandNotLoaded</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a kiwi command task module could not be
                        loaded.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiCompatError">
            <term>
              <literal>kiwi.exceptions.KiwiCompatError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the given kiwi compatibility command line
                        could not be understood by the compat option parser.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiCompressionFormatUnknown">
            <term>
              <literal>kiwi.exceptions.KiwiCompressionFormatUnknown</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the compression format of the data could
                        not be detected.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiConfigFileNotFound">
            <term>
              <literal>kiwi.exceptions.KiwiConfigFileNotFound</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if no kiwi XML description was found.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiContainerBuilderError">
            <term>
              <literal>kiwi.exceptions.KiwiContainerBuilderError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception is raised when something fails during a container image
                        build procedure.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiContainerImageSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiContainerImageSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt to create a container instance
                        for an unsupported container type is performed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiContainerSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiContainerSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an error in the creation of the
                        container archive happened.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiDataStructureError">
            <term>
              <literal>kiwi.exceptions.KiwiDataStructureError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the XML description failed to parse the
                        data structure.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiDebootstrapError">
            <term>
              <literal>kiwi.exceptions.KiwiDebootstrapError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if not enough user data to call debootstrap
                        were provided or the debootstrap has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiDecodingError">
            <term>
              <literal>kiwi.exceptions.KiwiDecodingError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception is raised on decoding literals failure</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiDescriptionInvalid">
            <term>
              <literal>kiwi.exceptions.KiwiDescriptionInvalid</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the XML description failed to validate
                        the XML schema.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiDeviceProviderError">
            <term>
              <literal>kiwi.exceptions.KiwiDeviceProviderError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a storage provide is asked for its
                        managed device but no such device exists.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiDiskBootImageError">
            <term>
              <literal>kiwi.exceptions.KiwiDiskBootImageError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a kiwi boot image does not provide the
                        requested data, e.g kernel, or hypervisor files.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiDiskFormatSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiDiskFormatSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to create a disk format
                        instance of an unsupported disk format.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiDiskGeometryError">
            <term>
              <literal>kiwi.exceptions.KiwiDiskGeometryError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the disk geometry (partition table) could
                        not be read or evaluated against their expected geometry and
                        capabilities.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiDistributionNameError">
            <term>
              <literal>kiwi.exceptions.KiwiDistributionNameError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the distribution name could not be found.
                        The information is extracted from the boot attribute of the
                        XML description. If no boot attribute is present or does not
                        match the naming conventions the exception is raised.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiError">
            <term>
              <literal>kiwi.exceptions.KiwiError</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Base class to handle all known exceptions</emphasis>
              </para>
              <para>Specific exceptions are implemented as sub classes of KiwiError</para>
              <para>Attributes</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>message</literal> () – Exception message text</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiExtensionError">
            <term>
              <literal>kiwi.exceptions.KiwiExtensionError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an extension section of the same namespace
                        is used multiple times as toplevel section within the extension
                        section. Each extension must have a single toplevel entry point
                        qualified by its namespace</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiFileAccessError">
            <term>
              <literal>kiwi.exceptions.KiwiFileAccessError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if accessing a file or its metadata failed</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiFileNotFound">
            <term>
              <literal>kiwi.exceptions.KiwiFileNotFound</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the requested file could not be found.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiFileSystemSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiFileSystemSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to build an
                        unsupported or unspecified filesystem.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiFileSystemSyncError">
            <term>
              <literal>kiwi.exceptions.KiwiFileSystemSyncError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the data sync from the system into the
                        loop mounted filesystem image failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiFormatSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiFormatSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the requested disk format could not be created.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiHelpNoCommandGiven">
            <term>
              <literal>kiwi.exceptions.KiwiHelpNoCommandGiven</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the request for the help page is
                        executed without a command to show the help for.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiImageResizeError">
            <term>
              <literal>kiwi.exceptions.KiwiImageResizeError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the request to resize a disk image failed.
                        Reasons could be a missing raw disk reference or a wrong size
                        specification.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiImportDescriptionError">
            <term>
              <literal>kiwi.exceptions.KiwiImportDescriptionError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the XML description data and scripts could
                        not be imported into the root of the image.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiInstallBootImageError">
            <term>
              <literal>kiwi.exceptions.KiwiInstallBootImageError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the required files to boot an installation
                        image could not be found, e.g kernel or hypervisor.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiInstallMediaError">
            <term>
              <literal>kiwi.exceptions.KiwiInstallMediaError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a request for an installation media is made
                        but the system image type is not an oem type.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiInstallPhaseFailed">
            <term>
              <literal>kiwi.exceptions.KiwiInstallPhaseFailed</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the install phase of a system prepare command
                        has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiIsoLoaderError">
            <term>
              <literal>kiwi.exceptions.KiwiIsoLoaderError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if no isolinux loader file could be found.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiIsoMetaDataError">
            <term>
              <literal>kiwi.exceptions.KiwiIsoMetaDataError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an inconsistency in the ISO header
                        was found such like invalid eltorito specification or a
                        broken path table.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiIsoToolError">
            <term>
              <literal>kiwi.exceptions.KiwiIsoToolError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an iso helper tool such as isoinfo
                        could not be found on the build system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiKernelLookupError">
            <term>
              <literal>kiwi.exceptions.KiwiKernelLookupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the search for the kernel image file failed</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiKisBootImageError">
            <term>
              <literal>kiwi.exceptions.KiwiKisBootImageError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a required boot file e.g the kernel could
                        not be found in the process of building a kis image.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiLiveBootImageError">
            <term>
              <literal>kiwi.exceptions.KiwiLiveBootImageError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to use an
                        unsupported live iso type.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiLoadCommandUndefined">
            <term>
              <literal>kiwi.exceptions.KiwiLoadCommandUndefined</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if no command is specified for a given
                        service on the commandline.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiLogFileSetupFailed">
            <term>
              <literal>kiwi.exceptions.KiwiLogFileSetupFailed</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the log file could not be created.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiLoopSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiLoopSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if not enough user data to create a
                        loop device is specified.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiLuksSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiLuksSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if not enough user data is provided to
                        setup the luks encryption on the given device.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiMappedDeviceError">
            <term>
              <literal>kiwi.exceptions.KiwiMappedDeviceError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the device to become mapped does not exist.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiMarkupConversionError">
            <term>
              <literal>kiwi.exceptions.KiwiMarkupConversionError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the markup format conversion is not possible.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiMountKernelFileSystemsError">
            <term>
              <literal>kiwi.exceptions.KiwiMountKernelFileSystemsError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a kernel filesystem such as proc or sys
                        could not be mounted.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiMountSharedDirectoryError">
            <term>
              <literal>kiwi.exceptions.KiwiMountSharedDirectoryError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the host &lt;-&gt; image shared directory
                        could not be mounted.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiNotImplementedError">
            <term>
              <literal>kiwi.exceptions.KiwiNotImplementedError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a functionality is not yet implemented.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiOCIArchiveToolError">
            <term>
              <literal>kiwi.exceptions.KiwiOCIArchiveToolError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the requested OCI archive tool is not supported</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiPackageManagerSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiPackageManagerSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to create a package
                        manager instance for an unsupported package manager.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiPackagesDeletePhaseFailed">
            <term>
              <literal>kiwi.exceptions.KiwiPackagesDeletePhaseFailed</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the packages deletion phase in system prepare
                        fails.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiPartitionerGptFlagError">
            <term>
              <literal>kiwi.exceptions.KiwiPartitionerGptFlagError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to set an unknown
                        partition flag for an entry in the GPT table.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiPartitionerMsDosFlagError">
            <term>
              <literal>kiwi.exceptions.KiwiPartitionerMsDosFlagError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to set an unknown
                        partition flag for an entry in the MSDOS table.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiPartitionerSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiPartitionerSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to create an instance
                        of a partitioner for an unsupporte partitioner.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiPrivilegesError">
            <term>
              <literal>kiwi.exceptions.KiwiPrivilegesError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if root privileges are required but not granted.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiProfileNotFound">
            <term>
              <literal>kiwi.exceptions.KiwiProfileNotFound</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a specified profile does not exist in the
                        XML configuration.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiRaidSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiRaidSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if invalid or not enough user data is provided
                        to create a raid array on the specified storage device.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiRepositorySetupError">
            <term>
              <literal>kiwi.exceptions.KiwiRepositorySetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to create an instance of
                        a repository for an unsupported package manager.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiRequestError">
            <term>
              <literal>kiwi.exceptions.KiwiRequestError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a package request could not be processed by
                        the corresponding package manager instance.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiRequestedTypeError">
            <term>
              <literal>kiwi.exceptions.KiwiRequestedTypeError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to build an image for
                        an unsupported image type.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiResizeRawDiskError">
            <term>
              <literal>kiwi.exceptions.KiwiResizeRawDiskError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an attempt was made to resize the image disk
                        to a smaller size than the current one. Simply shrinking a disk image
                        file is not possible without data corruption because the partitions
                        were setup to use the entire disk geometry as it fits into the file.
                        A successful shrinking operation would require the filesystems and
                        the partition table to be reduced which is not done by the provided
                        simple storage resize method. In addition without the user overwriting
                        the disk size in the XML setup, kiwi will calculate the minimum
                        required size in order to store the data. Thus in almost all cases
                        it will not be possible to store the data in a smaller disk.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiResultError">
            <term>
              <literal>kiwi.exceptions.KiwiResultError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the image build result pickle information
                        could not be created or loaded.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiRootDirExists">
            <term>
              <literal>kiwi.exceptions.KiwiRootDirExists</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the specified image root directory already
                        exists and should not be re-used.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiRootImportError">
            <term>
              <literal>kiwi.exceptions.KiwiRootImportError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception is raised when something fails during the root import
                        procedure.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiRootInitCreationError">
            <term>
              <literal>kiwi.exceptions.KiwiRootInitCreationError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the initialization of a new image root
                        directory has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiRpmDirNotRemoteError">
            <term>
              <literal>kiwi.exceptions.KiwiRpmDirNotRemoteError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the provided rpm-dir repository is not local</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiRuntimeConfigFormatError">
            <term>
              <literal>kiwi.exceptions.KiwiRuntimeConfigFormatError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the expected format in the yaml KIWI
                        runtime config file does not match</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiRuntimeError">
            <term>
              <literal>kiwi.exceptions.KiwiRuntimeError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a runtime check has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiSatSolverJobError">
            <term>
              <literal>kiwi.exceptions.KiwiSatSolverJobError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a sat solver job can not be done, e.g because
                        the requested package or collection does not exist in the registered
                        repository metadata</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiSatSolverJobProblems">
            <term>
              <literal>kiwi.exceptions.KiwiSatSolverJobProblems</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the sat solver operations returned with solver
                        problems e.g package conflicts</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiSatSolverPluginError">
            <term>
              <literal>kiwi.exceptions.KiwiSatSolverPluginError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the python solv module failed to load.
                        The solv module is provided by SUSE’s rpm package python-solv
                        and provides a python binding to the libsolv C library</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiSchemaImportError">
            <term>
              <literal>kiwi.exceptions.KiwiSchemaImportError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the schema file could not be read
                        by lxml.RelaxNG.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiScriptFailed">
            <term>
              <literal>kiwi.exceptions.KiwiScriptFailed</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a user script returned with an exit code != 0.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiSetupIntermediateConfigError">
            <term>
              <literal>kiwi.exceptions.KiwiSetupIntermediateConfigError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the setup of the temporary image system
                        configuration for the duration of the build process has
                        failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiShellVariableValueError">
            <term>
              <literal>kiwi.exceptions.KiwiShellVariableValueError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if a given python value cannot be converted
                        into a string representation for use in shell scripts</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiSizeError">
            <term>
              <literal>kiwi.exceptions.KiwiSizeError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception is raised when the convertion from a given size in string
                        format to a number.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiSolverRepositorySetupError">
            <term>
              <literal>kiwi.exceptions.KiwiSolverRepositorySetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the repository type is not supported for
                        the creation of a SAT solvable</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiSystemDeletePackagesFailed">
            <term>
              <literal>kiwi.exceptions.KiwiSystemDeletePackagesFailed</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the deletion of a package has failed in
                        the corresponding package manager instance.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiSystemInstallPackagesFailed">
            <term>
              <literal>kiwi.exceptions.KiwiSystemInstallPackagesFailed</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the installation of a package has failed in
                        the corresponding package manager instance.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiSystemUpdateFailed">
            <term>
              <literal>kiwi.exceptions.KiwiSystemUpdateFailed</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the package upgrade has failed in
                        the corresponding package manager instance.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiTargetDirectoryNotFound">
            <term>
              <literal>kiwi.exceptions.KiwiTargetDirectoryNotFound</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the specified target directory to store
                        the image results was not found.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiTemplateError">
            <term>
              <literal>kiwi.exceptions.KiwiTemplateError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the substitution of variables in a
                        configuration file template has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiTypeNotFound">
            <term>
              <literal>kiwi.exceptions.KiwiTypeNotFound</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if no build type was found in the XML description.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiUnknownServiceName">
            <term>
              <literal>kiwi.exceptions.KiwiUnknownServiceName</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an unknown service name was provided
                        on the commandline.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiUriOpenError">
            <term>
              <literal>kiwi.exceptions.KiwiUriOpenError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the urllib urlopen request has failed</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiUriStyleUnknown">
            <term>
              <literal>kiwi.exceptions.KiwiUriStyleUnknown</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if an unsupported URI style was used in the
                        source definition of a repository.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiUriTypeUnknown">
            <term>
              <literal>kiwi.exceptions.KiwiUriTypeUnknown</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the protocol type of an URI is unknown
                        in the source definition of a repository.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiValidationError">
            <term>
              <literal>kiwi.exceptions.KiwiValidationError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the XML validation against the schema has failed.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiVhdTagError">
            <term>
              <literal>kiwi.exceptions.KiwiVhdTagError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the GUID tag is not provided in the
                        expected format.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiVolumeGroupConflict">
            <term>
              <literal>kiwi.exceptions.KiwiVolumeGroupConflict</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the requested LVM volume group already is
                        in use on the build system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiVolumeManagerSetupError">
            <term>
              <literal>kiwi.exceptions.KiwiVolumeManagerSetupError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the preconditions for volume mangement
                        support are not met or an attempt was made to create an
                        instance of a volume manager for an unsupported volume
                        management system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.exceptions.KiwiVolumeRootIDError">
            <term>
              <literal>kiwi.exceptions.KiwiVolumeRootIDError</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiError"><literal>kiwi.exceptions.KiwiError</literal></link></para>
              <para>Exception raised if the root volume can not be found. This
                        concept currently exists only for the btrfs subvolume system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.firmware_kiwi-firmware-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.firmware"><literal>kiwi.firmware</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.firmware.FirmWare">
            <term>
              <literal>kiwi.firmware.FirmWare</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements firmware specific methods</emphasis>
              </para>
              <para>According to the selected firmware some parameters in a disk
                        image changes. This class provides methods to provide firmware
                        dependant information</para>
              <itemizedlist>
                <listitem>
                  <variablelist role="field_list">
                    <varlistentry>
                      <term>param object xml_state</term>
                      <listitem>
                        <para>instance of <literal>XMLState</literal></para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.firmware.FirmWare.bios_mode">
                  <term>
                    <property>kiwi.firmware.FirmWare.bios_mode</property>
                  </term>
                  <listitem>
                    <para>Check if BIOS mode is requested</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.firmware.FirmWare.ec2_mode">
                  <term>
                    <property>kiwi.firmware.FirmWare.ec2_mode</property>
                  </term>
                  <listitem>
                    <para>Check if EC2 mode is requested</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.firmware.FirmWare.efi_mode">
                  <term>
                    <property>kiwi.firmware.FirmWare.efi_mode</property>
                  </term>
                  <listitem>
                    <para>Check if EFI mode is requested</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>The requested EFI mode or None if no EFI mode requested</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.firmware.FirmWare.get_efi_partition_size">
                  <term>
                    <property>kiwi.firmware.FirmWare.get_efi_partition_size</property>
                  </term>
                  <listitem>
                    <para>Size of EFI partition.
                                Returns 0 if no such partition is needed</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.firmware.FirmWare.get_legacy_bios_partition_size">
                  <term>
                    <property>kiwi.firmware.FirmWare.get_legacy_bios_partition_size</property>
                  </term>
                  <listitem>
                    <para>Size of legacy bios_grub partition if legacy BIOS mode is
                                required. Returns 0 if no such partition is needed</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.firmware.FirmWare.get_partition_table_type">
                  <term>
                    <property>kiwi.firmware.FirmWare.get_partition_table_type</property>
                  </term>
                  <listitem>
                    <para>Provides partition table type according to architecture and firmware</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>partition table name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.firmware.FirmWare.get_prep_partition_size">
                  <term>
                    <property>kiwi.firmware.FirmWare.get_prep_partition_size</property>
                  </term>
                  <listitem>
                    <para>Size of Prep partition if OFW mode is requested.
                                Returns 0 if no such partition is needed</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.firmware.FirmWare.legacy_bios_mode">
                  <term>
                    <property>kiwi.firmware.FirmWare.legacy_bios_mode</property>
                  </term>
                  <listitem>
                    <para>Check if the legacy boot from BIOS systems should be activated</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.firmware.FirmWare.ofw_mode">
                  <term>
                    <property>kiwi.firmware.FirmWare.ofw_mode</property>
                  </term>
                  <listitem>
                    <para>Check if OFW mode is requested</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.firmware.FirmWare.opal_mode">
                  <term>
                    <property>kiwi.firmware.FirmWare.opal_mode</property>
                  </term>
                  <listitem>
                    <para>Check if Opal mode is requested</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.help_kiwi-help-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.help"><literal>kiwi.help</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.help.Help">
            <term>
              <literal>kiwi.help.Help</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements man page help for kiwi commands</emphasis>
              </para>
              <para>Each kiwi command implements their own manual page, which is
                        shown if the positional argument ‘help’ is passed to the
                        command.</para>
              <variablelist>
                <varlistentry xml:id="kiwi.help.Help.show">
                  <term>
                    <property>kiwi.help.Help.show</property>
                  </term>
                  <listitem>
                    <para>Call man to show the command specific manual page</para>
                    <para>All kiwi commands store their manual page in the section ‘8’
                                of the man system. The calling process is replaced by the
                                man process</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>command</literal> () – man page name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.kiwi_kiwi-kiwi-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.kiwi"><literal>kiwi.kiwi</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.kiwi.extras">
            <term>
              <function>kiwi.kiwi.extras</function>
            </term>
            <listitem>
              <para>Overwritten method from docopt</para>
              <para>Shows our own usage message for -h|–help</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>help</literal> () – indicate to show help</para>
                      </listitem>
                      <listitem>
                        <para><literal>version</literal> () – version string</para>
                      </listitem>
                      <listitem>
                        <para><literal>options</literal> () – </para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <para>list of option tuples</para>
              <screen language="python">[option(name='name', value='value')]</screen>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>doc</literal> () – docopt doc string</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.kiwi.main">
            <term>
              <function>kiwi.kiwi.main</function>
            </term>
            <listitem>
              <para>kiwi - main application entry point</para>
              <para>Initializes a global log object and handles all errors of the
                        application. Every known error is inherited from KiwiError,
                        everything else is passed down until the generic Exception
                        which is handled as unexpected error including the python
                        backtrace</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.kiwi.usage">
            <term>
              <function>kiwi.kiwi.usage</function>
            </term>
            <listitem>
              <para>Instead of the docopt way to show the usage information we
                        provide a kiwi specific usage information. The usage
                        data now always consists out of:</para>
              <procedure>
                <step>
                  <para>the generic call
                                kiwi-ng [global options] service &lt;command&gt; [&lt;args&gt;]</para>
                </step>
                <step>
                  <para>the command specific usage defined by the docopt string
                                short form by default, long form with -h | –help</para>
                </step>
                <step>
                  <para>the global options</para>
                </step>
              </procedure>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>command_usage</literal> () – usage data</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.logger_kiwi-logger-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.logger"><literal>kiwi.logger</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.logger.Logger">
            <term>
              <literal>kiwi.logger.Logger</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Extended logging facility based on Python logging</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>name</literal> () – name of the logger</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.logger.Logger.getLogLevel">
                  <term>
                    <property>kiwi.logger.Logger.getLogLevel</property>
                  </term>
                  <listitem>
                    <para>Return currently used log level</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>log level number</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.logger.Logger.get_logfile">
                  <term>
                    <property>kiwi.logger.Logger.get_logfile</property>
                  </term>
                  <listitem>
                    <para>Return file path name of logfile</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.logger.Logger.progress">
                  <term>
                    <property>kiwi.logger.Logger.progress</property>
                  </term>
                  <listitem>
                    <para>Custom progress log information. progress information is
                                intentionally only logged to stdout and will bypass any
                                handlers. We don’t want this information to show up in
                                the log file</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>current</literal> () – current item</para>
                            </listitem>
                            <listitem>
                              <para><literal>total</literal> () – total number of items</para>
                            </listitem>
                            <listitem>
                              <para><literal>prefix</literal> () – prefix name</para>
                            </listitem>
                            <listitem>
                              <para><literal>bar_length</literal> () – length of progress bar</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.logger.Logger.setLogLevel">
                  <term>
                    <property>kiwi.logger.Logger.setLogLevel</property>
                  </term>
                  <listitem>
                    <para>Set custom log level for all console handlers</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>level</literal> () – log level number</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.logger.Logger.set_color_format">
                  <term>
                    <property>kiwi.logger.Logger.set_color_format</property>
                  </term>
                  <listitem>
                    <para>Set color format for all console handlers</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.logger.Logger.set_logfile">
                  <term>
                    <property>kiwi.logger.Logger.set_logfile</property>
                  </term>
                  <listitem>
                    <para>Set logfile handler</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – logfile file path</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.logger_color_formatter_kiwi-logger-color-formatter-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.logger_color_formatter"><literal>kiwi.logger_color_formatter</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.logger_color_formatter.ColorFormatter">
            <term>
              <literal>kiwi.logger_color_formatter.ColorFormatter</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Extended standard logging Formatter</emphasis>
              </para>
              <para>Extended format supporting text with color metadata</para>
              <para>Example:</para>
              <screen language="python">ColorFormatter(message_format, '%H:%M:%S')</screen>
              <variablelist>
                <varlistentry xml:id="kiwi.logger_color_formatter.ColorFormatter.format">
                  <term>
                    <property>kiwi.logger_color_formatter.ColorFormatter.format</property>
                  </term>
                  <listitem>
                    <para>Creates a logging Formatter with support for color messages</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>record</literal> () – logging message record</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>result from format_message</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.logger_color_formatter.ColorMessage">
            <term>
              <literal>kiwi.logger_color_formatter.ColorMessage</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements color messages for Python logging facility</emphasis>
              </para>
              <para>Has to implement the format_message method to serve as
                        message formatter</para>
              <variablelist>
                <varlistentry xml:id="kiwi.logger_color_formatter.ColorMessage.format_message">
                  <term>
                    <property>kiwi.logger_color_formatter.ColorMessage.format_message</property>
                  </term>
                  <listitem>
                    <para>Message formatter with support for embedded color sequences</para>
                    <para>The Message is allowed to contain the following color metadata:</para>
                    <itemizedlist>
                      <listitem>
                        <para>$RESET, reset to no color mode</para>
                      </listitem>
                      <listitem>
                        <para>$BOLD, bold</para>
                      </listitem>
                      <listitem>
                        <para>$COLOR, color the following text</para>
                      </listitem>
                      <listitem>
                        <para>$LIGHTCOLOR, light color the following text</para>
                      </listitem>
                    </itemizedlist>
                    <para>The color of the message depends on the level and is defined
                                in the ColorMessage constructor</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>level</literal> () – color level name</para>
                            </listitem>
                            <listitem>
                              <para><literal>message</literal> () – text</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>color message with escape sequences</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.logger_filter_kiwi-logger-filter-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.logger_filter"><literal>kiwi.logger_filter</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.logger_filter.DebugFilter">
            <term>
              <literal>kiwi.logger_filter.DebugFilter</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Extended standard debug logging Filter</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.logger_filter.DebugFilter.filter">
                  <term>
                    <property>kiwi.logger_filter.DebugFilter.filter</property>
                  </term>
                  <listitem>
                    <para>Only messages with record level DEBUG can pass
                                for messages with another level an extra handler is used</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>record</literal> () – logging message record</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.logger_filter.ErrorFilter">
            <term>
              <literal>kiwi.logger_filter.ErrorFilter</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Extended standard error logging Filter</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.logger_filter.ErrorFilter.filter">
                  <term>
                    <property>kiwi.logger_filter.ErrorFilter.filter</property>
                  </term>
                  <listitem>
                    <para>Only messages with record level DEBUG can pass
                                for messages with another level an extra handler is used</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>record</literal> () – logging message record</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.logger_filter.InfoFilter">
            <term>
              <literal>kiwi.logger_filter.InfoFilter</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Extended standard logging Filter</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.logger_filter.InfoFilter.filter">
                  <term>
                    <property>kiwi.logger_filter.InfoFilter.filter</property>
                  </term>
                  <listitem>
                    <para>Only messages with record level INFO can pass
                                for messages with another level an extra handler is used</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>record</literal> () – logging message record</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.logger_filter.LoggerSchedulerFilter">
            <term>
              <literal>kiwi.logger_filter.LoggerSchedulerFilter</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Extended standard logging Filter</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.logger_filter.LoggerSchedulerFilter.filter">
                  <term>
                    <property>kiwi.logger_filter.LoggerSchedulerFilter.filter</property>
                  </term>
                  <listitem>
                    <para>Messages from apscheduler scheduler instances are filtered out
                                They conflict with console progress information</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>record</literal> () – logging message record</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.logger_filter.WarningFilter">
            <term>
              <literal>kiwi.logger_filter.WarningFilter</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Extended standard warning logging Filter</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.logger_filter.WarningFilter.filter">
                  <term>
                    <property>kiwi.logger_filter.WarningFilter.filter</property>
                  </term>
                  <listitem>
                    <para>Only messages with record level WARNING can pass
                                for messages with another level an extra handler is used</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>record</literal> () – logging message record</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.mount_manager_kiwi-mount-manager-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.mount_manager"><literal>kiwi.mount_manager</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.mount_manager.MountManager">
            <term>
              <literal>kiwi.mount_manager.MountManager</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements methods for mounting, umounting and mount checking</emphasis>
              </para>
              <para>If a MountManager instance is used to mount a device the caller
                        must care for the time when umount needs to be called. The class
                        does not automatically release the mounted device, which is
                        intentional</para>
              <itemizedlist>
                <listitem>
                  <variablelist role="field_list">
                    <varlistentry>
                      <term>param string device</term>
                      <listitem>
                        <para>device node name</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
                <listitem>
                  <variablelist role="field_list">
                    <varlistentry>
                      <term>param string mountpoint</term>
                      <listitem>
                        <para>mountpoint directory name</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.mount_manager.MountManager.bind_mount">
                  <term>
                    <property>kiwi.mount_manager.MountManager.bind_mount</property>
                  </term>
                  <listitem>
                    <para>Bind mount the device to the mountpoint</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.mount_manager.MountManager.is_mounted">
                  <term>
                    <property>kiwi.mount_manager.MountManager.is_mounted</property>
                  </term>
                  <listitem>
                    <para>Check if mounted</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.mount_manager.MountManager.mount">
                  <term>
                    <property>kiwi.mount_manager.MountManager.mount</property>
                  </term>
                  <listitem>
                    <para>Standard mount the device to the mountpoint</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>options</literal> () – mount options</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.mount_manager.MountManager.umount">
                  <term>
                    <property>kiwi.mount_manager.MountManager.umount</property>
                  </term>
                  <listitem>
                    <para>Umount by the mountpoint directory</para>
                    <para>If the resource is busy the call will return False</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.mount_manager.MountManager.umount_lazy">
                  <term>
                    <property>kiwi.mount_manager.MountManager.umount_lazy</property>
                  </term>
                  <listitem>
                    <para>Umount by the mountpoint directory in lazy mode</para>
                    <para>Release the mount in any case, however the time when the mounted
                                resource is released by the kernel depends on when the resource
                                enters the non busy state</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.path_kiwi-path-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.path"><literal>kiwi.path</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.path.Path">
            <term>
              <literal>kiwi.path.Path</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Directory path helpers</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.path.Path.access">
                  <term>
                    <property>kiwi.path.Path.access</property>
                  </term>
                  <listitem>
                    <para>Check whether path can be accessed with the given mode.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>path</literal> () – The path that should be checked for
                                                    access.</para>
                            </listitem>
                            <listitem>
                              <para><literal>mode</literal> () – Which access mode should be checked.
                                                    This value must be a bit-wise or of one or more of the following
                                                    constants: <literal>os.F_OK</literal> (note that this one is zero),
                                                    <literal>os.X_OK</literal>, <literal>os.R_OK</literal> and <literal>os.W_OK</literal></para>
                            </listitem>
                            <listitem>
                              <para><literal>kwargs</literal> – further keyword arguments are forwarded to
                                                    </para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Boolean value whether this access mode is allowed</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para> – if the supplied mode is invalid</para>
                            </listitem>
                            <listitem>
                              <para><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.exceptions.KiwiFileNotFound"><literal>kiwi.exceptions.KiwiFileNotFound</literal></link> – if the path does not exist or
                                                    is not accessible by the current user</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.path.Path.create">
                  <term>
                    <property>kiwi.path.Path.create</property>
                  </term>
                  <listitem>
                    <para>Create path and all sub directories to target</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>path</literal> () – path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.path.Path.move_to_root">
                  <term>
                    <property>kiwi.path.Path.move_to_root</property>
                  </term>
                  <listitem>
                    <para>Change the given path elements to a new root directory</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>root</literal> () – the root path to trim</para>
                            </listitem>
                            <listitem>
                              <para><literal>elements</literal> () – list of path names</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>changed elements</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.path.Path.rebase_to_root">
                  <term>
                    <property>kiwi.path.Path.rebase_to_root</property>
                  </term>
                  <listitem>
                    <para>Include the root prefix for the given paths elements</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>root</literal> () – the new root path</para>
                            </listitem>
                            <listitem>
                              <para><literal>elements</literal> () – list of path names</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>changed elements</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.path.Path.remove">
                  <term>
                    <property>kiwi.path.Path.remove</property>
                  </term>
                  <listitem>
                    <para>Delete empty path, causes an error if target is not empty</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>path</literal> () – path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.path.Path.remove_hierarchy">
                  <term>
                    <property>kiwi.path.Path.remove_hierarchy</property>
                  </term>
                  <listitem>
                    <para>Recursively remove an empty path and its sub directories
                                starting at a given root directory. Ignore non empty or
                                protected paths and leave them untouched</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>root</literal> () – start at directory</para>
                            </listitem>
                            <listitem>
                              <para><literal>path</literal> () – path name below root</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.path.Path.sort_by_hierarchy">
                  <term>
                    <property>kiwi.path.Path.sort_by_hierarchy</property>
                  </term>
                  <listitem>
                    <para>Sort given list of path names by their hierachy in the tree</para>
                    <para>Example:</para>
                    <screen language="python">result = Path.sort_by_hierarchy(['/var/lib', '/var'])</screen>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>path_list</literal> () – list of path names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>hierachy sorted path_list</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.path.Path.which">
                  <term>
                    <property>kiwi.path.Path.which</property>
                  </term>
                  <listitem>
                    <para>Lookup file name in PATH</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>filename</literal> () – file base name</para>
                            </listitem>
                            <listitem>
                              <para><literal>alternative_lookup_paths</literal> () – list of additional lookup paths</para>
                            </listitem>
                            <listitem>
                              <para><literal>custom_env</literal> () – a custom os.environ</para>
                            </listitem>
                            <listitem>
                              <para><literal>access_mode</literal> () – one of the os access modes or a combination of
                                                    them (os.R_OK, os.W_OK and os.X_OK). If the provided access mode
                                                    does not match the file is considered not existing</para>
                            </listitem>
                            <listitem>
                              <para><literal>root_dir</literal> () – the root path to look at</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>absolute path to file or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.path.Path.wipe">
                  <term>
                    <property>kiwi.path.Path.wipe</property>
                  </term>
                  <listitem>
                    <para>Delete path and all contents</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>path</literal> () – path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.privileges_kiwi-privileges-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.privileges"><literal>kiwi.privileges</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.privileges.Privileges">
            <term>
              <literal>kiwi.privileges.Privileges</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements check for root privileges</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.privileges.Privileges.check_for_root_permissions">
                  <term>
                    <property>kiwi.privileges.Privileges.check_for_root_permissions</property>
                  </term>
                  <listitem>
                    <para>Check if we are effectively root on the system. If not
                                an exception is thrown</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or raise an Exception</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.runtime_checker_kiwi-runtime-checker-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.runtime_checker"><literal>kiwi.runtime_checker</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker">
            <term>
              <literal>kiwi.runtime_checker.RuntimeChecker</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements build consistency checks at runtime</emphasis>
              </para>
              <para>The schema of an image description covers structure and syntax of
                        the provided data. The RuntimeChecker provides methods to perform
                        further semantic checks which allows to recognize potential build
                        or boot problems early.</para>
              <itemizedlist>
                <listitem>
                  <variablelist role="field_list">
                    <varlistentry>
                      <term>param object xml_state</term>
                      <listitem>
                        <para>Instance of XMLState</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_appx_naming_conventions_valid">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_appx_naming_conventions_valid</property>
                  </term>
                  <listitem>
                    <para>When building wsl images there are some naming conventions that
                                must be fulfilled to run the container on Microsoft Windows</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_architecture_supports_iso_firmware_setup">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_architecture_supports_iso_firmware_setup</property>
                  </term>
                  <listitem>
                    <para>For creating ISO images a different bootloader setup is
                                performed depending on the configured firmware. If the
                                firmware is set to bios, isolinux is used and that limits
                                the architecture to x86 only. In any other case the appliance
                                configured bootloader is used. This check examines if the
                                host architecture is supported with the configured firmware
                                on request of an ISO image.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_boot_description_exists">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_boot_description_exists</property>
                  </term>
                  <listitem>
                    <para>If a kiwi initrd is used, a lookup to the specified boot
                                description is done and fails early if it does not exist</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_consistent_kernel_in_boot_and_system_image">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_consistent_kernel_in_boot_and_system_image</property>
                  </term>
                  <listitem>
                    <para>If a kiwi initrd is used, the kernel used to build the kiwi
                                initrd and the kernel used in the system image must be the
                                same in order to avoid an inconsistent boot setup</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_container_tool_chain_installed">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_container_tool_chain_installed</property>
                  </term>
                  <listitem>
                    <para>When creating container images the specific tools are used in order
                                to import and export OCI or Docker compatible images. This check
                                searches for those tools to be installed in the build system and
                                fails if it can’t find them</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_dracut_module_for_disk_oem_in_package_list">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_dracut_module_for_disk_oem_in_package_list</property>
                  </term>
                  <listitem>
                    <para>OEM images if configured to use dracut as initrd system
                                requires the KIWI provided dracut-kiwi-oem-repart module
                                to be installed at the time dracut is called. Thus this
                                runtime check examines if the required package is part of
                                the package list in the image description.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_dracut_module_for_disk_overlay_in_package_list">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_dracut_module_for_disk_overlay_in_package_list</property>
                  </term>
                  <listitem>
                    <para>Disk images configured to use a root filesystem overlay
                                requires the KIWI provided kiwi-overlay dracut module to
                                be installed at the time dracut is called. Thus this
                                runtime check examines if the required package is part of
                                the package list in the image description.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_dracut_module_for_live_iso_in_package_list">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_dracut_module_for_live_iso_in_package_list</property>
                  </term>
                  <listitem>
                    <para>Live ISO images uses a dracut initrd to boot and requires
                                the KIWI provided kiwi-live dracut module to be installed
                                at the time dracut is called. Thus this runtime check
                                examines if the required package is part of the package
                                list in the image description.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_dracut_module_for_oem_install_in_package_list">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_dracut_module_for_oem_install_in_package_list</property>
                  </term>
                  <listitem>
                    <para>OEM images if configured to use dracut as initrd system
                                and configured with one of the installiso, installstick
                                or installpxe attributes requires the KIWI provided
                                dracut-kiwi-oem-dump module to be installed at the time
                                dracut is called. Thus this runtime check examines if the
                                required package is part of the package list in the
                                image description.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_efi_mode_for_disk_overlay_correctly_setup">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_efi_mode_for_disk_overlay_correctly_setup</property>
                  </term>
                  <listitem>
                    <para>Disk images configured to use a root filesystem overlay
                                only supports the standard EFI mode and not secure boot.
                                That’s because the shim setup performs changes to the
                                root filesystem which can not be applied during the
                                bootloader setup at build time because at that point
                                the root filesystem is a read-only squashfs source.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_image_include_repos_publicly_resolvable">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_image_include_repos_publicly_resolvable</property>
                  </term>
                  <listitem>
                    <para>Verify that all repos marked with the imageinclude attribute
                                can be resolved into a http based web URL</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_image_type_unique">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_image_type_unique</property>
                  </term>
                  <listitem>
                    <para>Verify that the selected image type is unique within
                                the range of the configured types and profiles.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_image_version_provided">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_image_version_provided</property>
                  </term>
                  <listitem>
                    <para>Kiwi requires a &lt;version&gt; element to be specified as part
                                of at least one &lt;preferences&gt; section.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_initrd_selection_required">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_initrd_selection_required</property>
                  </term>
                  <listitem>
                    <para>If the boot attribute is used without selecting kiwi
                                as the initrd_system, the setting of the boot attribute
                                will not have any effect. We assume that configurations
                                which explicitly specify the boot attribute wants to use
                                the custom kiwi initrd system and not dracut.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_mediacheck_installed">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_mediacheck_installed</property>
                  </term>
                  <listitem>
                    <para>If the image description enables the mediacheck attribute
                                the required tools to run this check must be installed
                                on the image build host</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_repositories_configured">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_repositories_configured</property>
                  </term>
                  <listitem>
                    <para>Verify that that there are repositories configured</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_swap_name_used_with_lvm">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_swap_name_used_with_lvm</property>
                  </term>
                  <listitem>
                    <para>The optional oem-swapname is only effective if used together
                                with the LVM volume manager. A name for the swap space can
                                only be set if it is created as a LVM volume. In any other
                                case the name does not apply to the system</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_syslinux_installed_if_isolinux_is_used">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_syslinux_installed_if_isolinux_is_used</property>
                  </term>
                  <listitem>
                    <para>ISO images that are configured to use isolinux
                                requires the host to provide a set of syslinux
                                binaries.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_target_directory_not_in_shared_cache">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_target_directory_not_in_shared_cache</property>
                  </term>
                  <listitem>
                    <para>The target directory must be outside of the kiwi shared cache
                                directory in order to avoid busy mounts because kiwi bind mounts
                                the cache directory into the image root tree to access host
                                caching information</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_dir</literal> () – path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_volume_label_used_with_lvm">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_volume_label_used_with_lvm</property>
                  </term>
                  <listitem>
                    <para>The optional volume label in a systemdisk setup is only
                                effective if the LVM, logical volume manager system is
                                used. In any other case where the filesystem itself offers
                                volume management capabilities there are no extra filesystem
                                labels which can be applied per volume</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_volume_setup_defines_multiple_fullsize_volumes">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_volume_setup_defines_multiple_fullsize_volumes</property>
                  </term>
                  <listitem>
                    <para>The volume size specification ‘all’ makes this volume to
                                take the rest space available on the system. It’s only
                                allowed to specify one all size volume</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_volume_setup_defines_reserved_labels">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_volume_setup_defines_reserved_labels</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_volume_setup_has_no_root_definition">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_volume_setup_has_no_root_definition</property>
                  </term>
                  <listitem>
                    <para>The root volume in a systemdisk setup is handled in a special
                                way. It is not allowed to setup a custom name or mountpoint for
                                the root volume. Therefore the size of the root volume can be
                                setup via the @root volume name. This check looks up the volume
                                setup and searches if there is a configuration for the ‘/’
                                mountpoint which would cause the image build to fail</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_checker.RuntimeChecker.check_xen_uniquely_setup_as_server_or_guest">
                  <term>
                    <property>kiwi.runtime_checker.RuntimeChecker.check_xen_uniquely_setup_as_server_or_guest</property>
                  </term>
                  <listitem>
                    <para>If the image is classified to be used as Xen image, it can
                                be either a Xen Server(dom0) or a Xen guest. The image
                                configuration is checked if the information uniquely identifies
                                the image as such</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.runtime_config_kiwi-runtime-config-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.runtime_config"><literal>kiwi.runtime_config</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig">
            <term>
              <literal>kiwi.runtime_config.RuntimeConfig</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements reading of runtime configuration file:</emphasis>
              </para>
              <procedure>
                <step>
                  <para>~/.config/kiwi/config.yml</para>
                </step>
                <step>
                  <para>/etc/kiwi.yml</para>
                </step>
              </procedure>
              <para>The KIWI runtime configuration file is a yaml formatted file
                        containing information to control the behavior of the tools
                        used by KIWI.</para>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig.get_bundle_compression">
                  <term>
                    <property>kiwi.runtime_config.RuntimeConfig.get_bundle_compression</property>
                  </term>
                  <listitem>
                    <para>Return boolean value to express if the image bundle should
                                contain XZ compressed image results or not.</para>
                    <variablelist>
                      <varlistentry>
                        <term>bundle:</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para>compress: true|false</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>If compression of image build results is activated the size
                                of the bundle is smaller and the download speed increases.
                                However the image must be uncompressed before use</para>
                    <para>If no compression is explicitly configured, the provided
                                default value applies</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>default</literal> () – Default value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig.get_container_compression">
                  <term>
                    <property>kiwi.runtime_config.RuntimeConfig.get_container_compression</property>
                  </term>
                  <listitem>
                    <para>Return compression algorithm to use for compression of container images</para>
                    <variablelist>
                      <varlistentry>
                        <term>container:</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para>compress: xz|none</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>if no or invalid configuration data is provided, the default
                                compression algorithm from the Defaults class is returned</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>A name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig.get_disabled_runtime_checks">
                  <term>
                    <property>kiwi.runtime_config.RuntimeConfig.get_disabled_runtime_checks</property>
                  </term>
                  <listitem>
                    <para>Returns disabled runtime checks. Checks can be disabled with:</para>
                    <variablelist>
                      <varlistentry>
                        <term>runtime_checks:</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para>disable: check_container_tool_chain_installed</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>if the provided string does not match any RuntimeChecker method it is
                                just ignored.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig.get_iso_tool_category">
                  <term>
                    <property>kiwi.runtime_config.RuntimeConfig.get_iso_tool_category</property>
                  </term>
                  <listitem>
                    <para>Return tool category which should be used to build iso images</para>
                    <variablelist>
                      <varlistentry>
                        <term>iso:</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para>tool_category: cdrtools|xorriso</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>if no or invalid configuration exists the default tool category
                                from the Defaults class is returned</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>A name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig.get_max_size_constraint">
                  <term>
                    <property>kiwi.runtime_config.RuntimeConfig.get_max_size_constraint</property>
                  </term>
                  <listitem>
                    <para>Returns the maximum allowed size of the built image. The value is
                                returned in bytes and it is specified in build_constraints element
                                with the max_size attribute. The value can be specified in bytes or
                                it can be specified with m=MB or g=GB.</para>
                    <variablelist>
                      <varlistentry>
                        <term>build_constraints:</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para>max_size: 700m</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>if no configuration exists None is returned</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>byte value or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig.get_obs_download_server_url">
                  <term>
                    <property>kiwi.runtime_config.RuntimeConfig.get_obs_download_server_url</property>
                  </term>
                  <listitem>
                    <para>Return URL of buildservice download server in:</para>
                    <variablelist>
                      <varlistentry>
                        <term>obs:</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para>download_url: …</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>if no configuration exists the downloadserver from
                                the Defaults class is returned</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>URL type data</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig.get_oci_archive_tool">
                  <term>
                    <property>kiwi.runtime_config.RuntimeConfig.get_oci_archive_tool</property>
                  </term>
                  <listitem>
                    <para>Return OCI archive tool which should be used on creation of
                                container archives for OCI compliant images, e.g docker</para>
                    <variablelist>
                      <varlistentry>
                        <term>oci:</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para>archive_tool: umoci</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>if no configuration exists the default tool from the
                                Defaults class is returned</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>A name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig.get_package_changes">
                  <term>
                    <property>kiwi.runtime_config.RuntimeConfig.get_package_changes</property>
                  </term>
                  <listitem>
                    <para>Return boolean value to express if the image build and bundle
                                should contain a .changes file. The .changes file contains
                                the package changelog information from all packages installed
                                into the image.</para>
                    <variablelist>
                      <varlistentry>
                        <term>bundle:</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para>has_package_changes: true|false</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>By default the creation is switched on.
                                When building in the Open Build Service the default is
                                switched off because obs provides a .report file containing
                                the same information.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>default</literal> () – Default value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig.get_xz_options">
                  <term>
                    <property>kiwi.runtime_config.RuntimeConfig.get_xz_options</property>
                  </term>
                  <listitem>
                    <para>Return list of XZ compression options in:</para>
                    <variablelist>
                      <varlistentry>
                        <term>xz:</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para>options: …</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>if no configuration exists None is returned</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Contains list of options</para>
                          <screen language="python">['--option=value']</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.runtime_config.RuntimeConfig.is_obs_public">
                  <term>
                    <property>kiwi.runtime_config.RuntimeConfig.is_obs_public</property>
                  </term>
                  <listitem>
                    <para>Check if the buildservice configuration is public or private in:</para>
                    <variablelist>
                      <varlistentry>
                        <term>obs:</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para>public: true|false</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>if no configuration exists we assume to be public</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.version_kiwi-version-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.version"><literal>kiwi.version</literal></link> Module</title>
        <para>Global version information used in kiwi and the package</para>
      </section>
      <section xml:id="module-kiwi.xml_description_kiwi-xml-description-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.xml_description"><literal>kiwi.xml_description</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.xml_description.XMLDescription">
            <term>
              <literal>kiwi.xml_description.XMLDescription</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements data management for the image description</emphasis>
              </para>
              <para>Supported description markup languages are XML, YAML, JSON and INI.
                        The provided input file is converted into XML, transformed to the
                        current RelaxNG schema via XSLT and validated against this result.</para>
              <itemizedlist>
                <listitem>
                  <para>XSLT Style Sheet processing to apply on this version of kiwi</para>
                </listitem>
                <listitem>
                  <para>Schema Validation based on RelaxNG schema</para>
                </listitem>
                <listitem>
                  <para>Loading XML data into internal data structures</para>
                </listitem>
              </itemizedlist>
              <para>Attributes</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>description</literal> () – path to description file</para>
                      </listitem>
                      <listitem>
                        <para><literal>derived_from</literal> () – path to base description file</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_description.XMLDescription.get_extension_xml_data">
                  <term>
                    <property>kiwi.xml_description.XMLDescription.get_extension_xml_data</property>
                  </term>
                  <listitem>
                    <para>Return the xml etree parse result for the specified extension namespace</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>namespace_name</literal> () – name of the extension namespace</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>result of etree.parse</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_description.XMLDescription.load">
                  <term>
                    <property>kiwi.xml_description.XMLDescription.load</property>
                  </term>
                  <listitem>
                    <para>Read XML description, validate it against the schema
                                and the schematron rules and pass it to the
                                autogenerated(generateDS) parser.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of XML toplevel domain (image)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.xml_state_kiwi-xml-state-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.xml_state"><literal>kiwi.xml_state</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.xml_state.XMLState">
            <term>
              <literal>kiwi.xml_state.XMLState</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements methods to get stateful information from the XML data</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_data</literal> () – parse result from XMLDescription.load()</para>
                      </listitem>
                      <listitem>
                        <para><literal>profiles</literal> () – list of used profiles</para>
                      </listitem>
                      <listitem>
                        <para><literal>build_type</literal> () – build &lt;type&gt; section reference</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.add_container_config_label">
                  <term>
                    <property>kiwi.xml_state.XMLState.add_container_config_label</property>
                  </term>
                  <listitem>
                    <para>Adds a new label in the containerconfig section, if a label with the
                                same name is already defined in containerconfig it gets overwritten by
                                this method.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>label_name</literal> () – the string representing the label name</para>
                            </listitem>
                            <listitem>
                              <para><literal>value</literal> () – the value of the label</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.add_repository">
                  <term>
                    <property>kiwi.xml_state.XMLState.add_repository</property>
                  </term>
                  <listitem>
                    <para>Add a new repository section at the end of the list</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>repo_source</literal> () – repository URI</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_type</literal> () – type name defined by schema</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_alias</literal> () – alias name</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_prio</literal> () – priority number, package manager specific</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_imageinclude</literal> () – setup repository inside of the image</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_package_gpgcheck</literal> () – enable/disable package gpg checks</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_bootdelete_packages">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_bootdelete_packages</property>
                  </term>
                  <listitem>
                    <para>Copy packages marked as bootdelete to the packages type=delete
                                section in the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_bootincluded_archives">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_bootincluded_archives</property>
                  </term>
                  <listitem>
                    <para>Copy archives marked as bootinclude to the packages type=bootstrap
                                section in the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_bootincluded_packages">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_bootincluded_packages</property>
                  </term>
                  <listitem>
                    <para>Copy packages marked as bootinclude to the packages type=image
                                (or type=bootstrap if no type=image was found) section in the
                                target xml state. The package will also be removed from the
                                packages type=delete section in the target xml state if
                                present there</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_bootloader_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_bootloader_section</property>
                  </term>
                  <listitem>
                    <para>Copy bootloader section from this xml state to the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_build_type_attributes">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_build_type_attributes</property>
                  </term>
                  <listitem>
                    <para>Copy specified attributes from this build type section to the
                                target xml state build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>attribute_names</literal> () – type section attributes</para>
                            </listitem>
                            <listitem>
                              <para><literal>target_state</literal> () – XMLState instance</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_displayname">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_displayname</property>
                  </term>
                  <listitem>
                    <para>Copy image displayname from this xml state to the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_drivers_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_drivers_sections</property>
                  </term>
                  <listitem>
                    <para>Copy drivers sections from this xml state to the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_machine_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_machine_section</property>
                  </term>
                  <listitem>
                    <para>Copy machine sections from this xml state to the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_name">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_name</property>
                  </term>
                  <listitem>
                    <para>Copy image name from this xml state to the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_oemconfig_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_oemconfig_section</property>
                  </term>
                  <listitem>
                    <para>Copy oemconfig sections from this xml state to the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_preferences_subsections">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_preferences_subsections</property>
                  </term>
                  <listitem>
                    <para>Copy subsections of the preferences sections, matching given
                                section names, from this xml state to the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>section_names</literal> () – preferences subsection names</para>
                            </listitem>
                            <listitem>
                              <para><literal>target_state</literal> () – XMLState instance</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_repository_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_repository_sections</property>
                  </term>
                  <listitem>
                    <para>Copy repository sections from this xml state to the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>target_state</literal> () – XMLState instance</para>
                            </listitem>
                            <listitem>
                              <para><literal>wipe</literal> () – delete all repos in target prior to copy</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_strip_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_strip_sections</property>
                  </term>
                  <listitem>
                    <para>Copy strip sections from this xml state to the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.copy_systemdisk_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.copy_systemdisk_section</property>
                  </term>
                  <listitem>
                    <para>Copy systemdisk sections from this xml state to the target xml state</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_state</literal> () – XMLState instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.delete_repository_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.delete_repository_sections</property>
                  </term>
                  <listitem>
                    <para>Delete all repository sections matching configured profiles</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.delete_repository_sections_used_for_build">
                  <term>
                    <property>kiwi.xml_state.XMLState.delete_repository_sections_used_for_build</property>
                  </term>
                  <listitem>
                    <para>Delete all repository sections used to build the image matching
                                configured profiles</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_bootstrap_archives">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_bootstrap_archives</property>
                  </term>
                  <listitem>
                    <para>List of archive names from the type=”bootstrap” packages section(s)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>archive names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_bootstrap_collection_type">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_bootstrap_collection_type</property>
                  </term>
                  <listitem>
                    <para>Collection type for packages sections matching type=”bootstrap”</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>collection type name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_bootstrap_collections">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_bootstrap_collections</property>
                  </term>
                  <listitem>
                    <para>List of collection names from the packages sections
                                matching type=”bootstrap”</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>collection names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_bootstrap_packages">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_bootstrap_packages</property>
                  </term>
                  <listitem>
                    <para>List of package names from the type=”bootstrap” packages section(s)</para>
                    <para>The list gets the selected package manager appended
                                if there is a request to install packages inside of
                                the image via a chroot operation</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>plus_packages</literal> () – list of additional packages</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>package names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_bootstrap_packages_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_bootstrap_packages_sections</property>
                  </term>
                  <listitem>
                    <para>List of packages sections matching type=”bootstrap”</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of &lt;packages&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_bootstrap_products">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_bootstrap_products</property>
                  </term>
                  <listitem>
                    <para>List of product names from the packages sections
                                matching type=”bootstrap”</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>product names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_bootloader_console">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_bootloader_console</property>
                  </term>
                  <listitem>
                    <para>Return bootloader console setting for selected build type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>console string</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_bootloader_name">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_bootloader_name</property>
                  </term>
                  <listitem>
                    <para>Return bootloader name for selected build type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>bootloader name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_bootloader_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_bootloader_section</property>
                  </term>
                  <listitem>
                    <para>First bootloader section from the build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;bootloader&gt; section reference</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>xml_parse::bootloader</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_bootloader_serial_line_setup">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_bootloader_serial_line_setup</property>
                  </term>
                  <listitem>
                    <para>Return bootloader serial line setup parameters for the
                                selected build type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>serial line setup</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_bootloader_targettype">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_bootloader_targettype</property>
                  </term>
                  <listitem>
                    <para>Return bootloader target type setting. Only relevant for
                                the zipl bootloader because zipl is installed differently
                                depending on the storage target it runs later</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>target type string</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_bootloader_timeout">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_bootloader_timeout</property>
                  </term>
                  <listitem>
                    <para>Return bootloader timeout setting for selected build type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>timeout string</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_bootloader_timeout_style">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_bootloader_timeout_style</property>
                  </term>
                  <listitem>
                    <para>Return bootloader timeout style setting for selected build type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>timeout_style string</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_containerconfig_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_containerconfig_section</property>
                  </term>
                  <listitem>
                    <para>First containerconfig section from the build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;containerconfig&gt; section reference</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>xml_parse::containerconfig</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_format_options">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_format_options</property>
                  </term>
                  <listitem>
                    <para>Disk format options returned as a dictionary</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>format options</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_machine_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_machine_section</property>
                  </term>
                  <listitem>
                    <para>First machine section from the build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;machine&gt; section reference</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>xml_parse::machine</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_name">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_name</property>
                  </term>
                  <listitem>
                    <para>Default build type name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Content of image attribute from build type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_oemconfig_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_oemconfig_section</property>
                  </term>
                  <listitem>
                    <para>First oemconfig section from the build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;oemconfig&gt; section reference</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>xml_parse::oemconfig</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_size">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_size</property>
                  </term>
                  <listitem>
                    <para>Size information from the build type section.
                                If no unit is set the value is treated as mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>include_unpartitioned</literal> () – sets if the unpartitioned area
                                            should be included in the computed size or not</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbytes</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_spare_part_fs_attributes">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_spare_part_fs_attributes</property>
                  </term>
                  <listitem>
                    <para>Build type specific list of filesystem attributes applied to
                                the spare partition.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of strings or empty list</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_spare_part_size">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_spare_part_size</property>
                  </term>
                  <listitem>
                    <para>Size information for the spare_part size from the build
                                type. If no unit is set the value is treated as mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbytes</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_system_disk_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_system_disk_section</property>
                  </term>
                  <listitem>
                    <para>First system disk section from the build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;systemdisk&gt; section reference</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>xml_parse::systemdisk</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_unpartitioned_bytes">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_unpartitioned_bytes</property>
                  </term>
                  <listitem>
                    <para>Size of the unpartitioned area for image in megabytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbytes</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_vagrant_config_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_vagrant_config_section</property>
                  </term>
                  <listitem>
                    <para>First vagrantconfig section from the build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;vagrantconfig&gt; section reference</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>xml_parse::vagrantconfig</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_vmconfig_entries">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_vmconfig_entries</property>
                  </term>
                  <listitem>
                    <para>List of vmconfig-entry section values from the first
                                machine section in the build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;vmconfig_entry&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_vmdisk_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_vmdisk_section</property>
                  </term>
                  <listitem>
                    <para>First vmdisk section from the first machine section in the
                                build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;vmdisk&gt; section reference</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>xml_parse::vmdisk</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_vmdvd_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_vmdvd_section</property>
                  </term>
                  <listitem>
                    <para>First vmdvd section from the first machine section in the
                                build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;vmdvd&gt; section reference</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>xml_parse::vmdvd</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_build_type_vmnic_entries">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_build_type_vmnic_entries</property>
                  </term>
                  <listitem>
                    <para>vmnic section(s) from the first machine section in the
                                build type section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of &lt;vmnic&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_collection_type">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_collection_type</property>
                  </term>
                  <listitem>
                    <para>Collection type from packages sections matching given section
                                type.</para>
                    <para>If no collection type is specified the default collection
                                type is set to: onlyRequired</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>section_type</literal> () – type name from packages section</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>collection type name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_collections">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_collections</property>
                  </term>
                  <listitem>
                    <para>List of collection names from the packages sections matching
                                type=section_type and type=build_type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>collection names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_container_config">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_container_config</property>
                  </term>
                  <listitem>
                    <para>Dictionary of containerconfig information</para>
                    <para>Takes attributes and subsection data from the selected
                                &lt;containerconfig&gt; section and stores it in a dictionary</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_derived_from_image_uri">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_derived_from_image_uri</property>
                  </term>
                  <listitem>
                    <para>Uri object of derived image if configured</para>
                    <para>Specific image types can be based on a master image.
                                This method returns the location of this image when
                                configured in the XML description</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Instance of Uri</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_description_section">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_description_section</property>
                  </term>
                  <listitem>
                    <para>The description section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>description_type tuple providing the elements
                                            author contact and specification</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_disk_start_sector">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_disk_start_sector</property>
                  </term>
                  <listitem>
                    <para>First disk sector number to be used by the first disk partition.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>number</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_distribution_name_from_boot_attribute">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_distribution_name_from_boot_attribute</property>
                  </term>
                  <listitem>
                    <para>Extract the distribution name from the boot attribute of the
                                build type section.</para>
                    <para>If no boot attribute is configured or the contents does not
                                match the kiwi defined naming schema for boot image descriptions,
                                an exception is thrown</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>lowercase distribution name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_drivers_list">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_drivers_list</property>
                  </term>
                  <listitem>
                    <para>List of driver names from all drivers sections matching
                                configured profiles</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>driver names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_fs_create_option_list">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_fs_create_option_list</property>
                  </term>
                  <listitem>
                    <para>List of root filesystem creation options</para>
                    <para>The list contains elements with the information from the
                                fscreateoptions attribute string that got split into its
                                substring components</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list with create options</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_fs_mount_option_list">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_fs_mount_option_list</property>
                  </term>
                  <listitem>
                    <para>List of root filesystem mount options</para>
                    <para>The list contains one element with the information from the
                                fsmountoptions attribute. The value there is passed along to
                                the -o mount option</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>max one element list with mount option string</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_image_packages_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_image_packages_sections</property>
                  </term>
                  <listitem>
                    <para>List of packages sections matching type=”image”</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of &lt;packages&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_image_version">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_image_version</property>
                  </term>
                  <listitem>
                    <para>Image version from preferences section.</para>
                    <para>Multiple occurences of version in preferences sections are not
                                forbidden, however only the first version found defines the
                                final image version</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Content of &lt;version&gt; section</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_initrd_system">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_initrd_system</property>
                  </term>
                  <listitem>
                    <para>Name of initrd system to use</para>
                    <para>Depending on the image type a specific initrd system is
                                either pre selected or free of choice according to the
                                XML type setup</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>dracut, kiwi or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_installmedia_initrd_modules">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_installmedia_initrd_modules</property>
                  </term>
                  <listitem>
                    <para>Gets the list of modules to append in installation initrds</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>a list of dracut module names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_locale">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_locale</property>
                  </term>
                  <listitem>
                    <para>Gets list of locale names if configured. Takes
                                the first locale setup from the existing preferences
                                sections into account.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>List of names or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>list|None</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_oemconfig_oem_multipath_scan">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_oemconfig_oem_multipath_scan</property>
                  </term>
                  <listitem>
                    <para>State value to activate multipath maps. Returns a boolean
                                value if specified or False</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Content of &lt;oem-multipath-scan&gt; section value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_oemconfig_oem_resize">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_oemconfig_oem_resize</property>
                  </term>
                  <listitem>
                    <para>State value to activate/deactivate disk resize. Returns a
                                boolean value if specified or True to set resize on by default</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Content of &lt;oem-resize&gt; section value</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_oemconfig_swap_mbytes">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_oemconfig_swap_mbytes</property>
                  </term>
                  <listitem>
                    <para>Return swapsize in MB if requested or None</para>
                    <para>Operates on the value of oem-swap and if set to true
                                returns the given size or the default value.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Content of &lt;oem-swapsize&gt; section value or default</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_oemconfig_swap_name">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_oemconfig_swap_name</property>
                  </term>
                  <listitem>
                    <para>Return the swap space name</para>
                    <para>Operates on the value of oem-swapname and if set
                                returns the configured name or the default name: LVSwap</para>
                    <para>The name of the swap space is used only if the
                                image is configured to use the LVM volume manager.
                                In this case swap is a volume and the volume takes
                                a name. In any other case the given name will have
                                no effect.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Content of &lt;oem-swapname&gt; section value or default</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_package_manager">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_package_manager</property>
                  </term>
                  <listitem>
                    <para>Get configured package manager from selected preferences section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Content of the &lt;packagemanager&gt; section</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_package_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_package_sections</property>
                  </term>
                  <listitem>
                    <para>List of package sections from the given packages sections.
                                Each list element contains a tuple with the &lt;package&gt; section
                                reference and the &lt;packages&gt; section this package belongs to</para>
                    <para>If a package entry specfies an architecture, it is only taken if
                                the host architecture matches the configured architecture</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>packages_sections</literal> () – &lt;packages&gt;</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Contains list of package_type tuples</para>
                          <screen language="python">[package_type(packages_section=object, package_section=object)]</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_packages_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_packages_sections</property>
                  </term>
                  <listitem>
                    <para>List of packages sections matching given section type(s)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>section_types</literal> () – type name(s) from packages sections</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of &lt;packages&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_preferences_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_preferences_sections</property>
                  </term>
                  <listitem>
                    <para>All preferences sections for the selected profiles that match the
                                host architecture</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of &lt;preferences&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_products">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_products</property>
                  </term>
                  <listitem>
                    <para>List of product names from the packages sections matching
                                type=section_type and type=build_type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>section_type</literal> () – type name from packages section</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>product names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_repository_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_repository_sections</property>
                  </term>
                  <listitem>
                    <para>List of all repository sections matching configured profiles</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;repository&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_repository_sections_used_for_build">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_repository_sections_used_for_build</property>
                  </term>
                  <listitem>
                    <para>List of all repositorys sections used to build the image and
                                matching configured profiles.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;repository&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_repository_sections_used_in_image">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_repository_sections_used_in_image</property>
                  </term>
                  <listitem>
                    <para>List of all repositorys sections to be configured in the resulting
                                image matching configured profiles.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>&lt;repository&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_root_filesystem_uuid">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_root_filesystem_uuid</property>
                  </term>
                  <listitem>
                    <para>Return preserved UUID</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_root_partition_uuid">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_root_partition_uuid</property>
                  </term>
                  <listitem>
                    <para>Return preserved PARTUUID</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_rpm_check_signatures">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_rpm_check_signatures</property>
                  </term>
                  <listitem>
                    <para>Gets the rpm-check-signatures configuration flag. Returns
                                False if not present.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_rpm_excludedocs">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_rpm_excludedocs</property>
                  </term>
                  <listitem>
                    <para>Gets the rpm-excludedocs configuration flag. Returns
                                False if not present.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_rpm_locale">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_rpm_locale</property>
                  </term>
                  <listitem>
                    <para>Gets list of locale names to filter out by rpm
                                if rpm-locale-filtering is switched on the
                                the list always contains: [POSIX, C, C.UTF-8]
                                and is extended by the optionaly configured
                                locale</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>List of names or None</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>list|None</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_rpm_locale_filtering">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_rpm_locale_filtering</property>
                  </term>
                  <listitem>
                    <para>Gets the rpm-locale-filtering configuration flag. Returns
                                False if not present.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_strip_files_to_delete">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_strip_files_to_delete</property>
                  </term>
                  <listitem>
                    <para>Items to delete from strip section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>item names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_strip_libraries_to_keep">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_strip_libraries_to_keep</property>
                  </term>
                  <listitem>
                    <para>Libraries to keep from strip section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>librarie names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_strip_list">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_strip_list</property>
                  </term>
                  <listitem>
                    <para>List of strip names matching the given section type
                                and profiles</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>section_type</literal> () – type name from packages section</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>strip names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_strip_tools_to_keep">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_strip_tools_to_keep</property>
                  </term>
                  <listitem>
                    <para>Tools to keep from strip section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>tool names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_system_archives">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_system_archives</property>
                  </term>
                  <listitem>
                    <para>List of archive names from the packages sections matching
                                type=”image” and type=build_type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>archive names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_system_collection_type">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_system_collection_type</property>
                  </term>
                  <listitem>
                    <para>Collection type for packages sections matching type=”image”</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>collection type name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_system_collections">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_system_collections</property>
                  </term>
                  <listitem>
                    <para>List of collection names from the packages sections
                                matching type=”image”</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>collection names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_system_ignore_packages">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_system_ignore_packages</property>
                  </term>
                  <listitem>
                    <para>List of ignore package names from the packages sections matching
                                type=”image” and type=build_type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>package names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_system_packages">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_system_packages</property>
                  </term>
                  <listitem>
                    <para>List of package names from the packages sections matching
                                type=”image” and type=build_type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>package names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_system_products">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_system_products</property>
                  </term>
                  <listitem>
                    <para>List of product names from the packages sections
                                matching type=”image”</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>product names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_to_become_deleted_packages">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_to_become_deleted_packages</property>
                  </term>
                  <listitem>
                    <para>List of package names from the type=”delete” or type=”uninstall”
                                packages section(s)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>force</literal> () – return “delete” type if True, “uninstall” type
                                            otherwise</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>package names</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_user_groups">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_user_groups</property>
                  </term>
                  <listitem>
                    <para>List of group names matching specified user</para>
                    <para>Each entry in the list is the name of a group that the specified
                                user belongs to. The first item in the list is the login or primary
                                group. The list will be empty if no groups are specified in the
                                description file.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>groups data for the given user</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_users">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_users</property>
                  </term>
                  <listitem>
                    <para>List of configured users.</para>
                    <para>Each entry in the list is a single xml_parse::user instance.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of &lt;user&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_users_sections">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_users_sections</property>
                  </term>
                  <listitem>
                    <para>All users sections for the selected profiles</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of &lt;users&gt; section reference(s)</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_vagrant_config_virtualbox_guest_additions">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_vagrant_config_virtualbox_guest_additions</property>
                  </term>
                  <listitem>
                    <para>Attribute virtualbox_guest_additions_present from the first
                                vagrantconfig section.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_volume_group_name">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_volume_group_name</property>
                  </term>
                  <listitem>
                    <para>Volume group name from selected &lt;systemdisk&gt; section</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>volume group name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_volume_management">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_volume_management</property>
                  </term>
                  <listitem>
                    <para>Provides information which volume management system is used</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name of volume manager</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.get_volumes">
                  <term>
                    <property>kiwi.xml_state.XMLState.get_volumes</property>
                  </term>
                  <listitem>
                    <para>List of configured systemdisk volumes.</para>
                    <para>Each entry in the list is a tuple with the following information</para>
                    <itemizedlist>
                      <listitem>
                        <para>name: name of the volume</para>
                      </listitem>
                      <listitem>
                        <para>size: size of the volume</para>
                      </listitem>
                      <listitem>
                        <para>realpath: system path to lookup volume data. If no mountpoint
                                        is set the volume name is used as data path.</para>
                      </listitem>
                      <listitem>
                        <para>mountpoint: volume mount point and volume data path</para>
                      </listitem>
                      <listitem>
                        <para>fullsize: takes all space True|False</para>
                      </listitem>
                      <listitem>
                        <para>attributes: list of volume attributes handled via chattr</para>
                      </listitem>
                    </itemizedlist>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Contains list of volume_type tuples</para>
                          <screen language="python">[
    volume_type(
        name=volume_name,
        size=volume_size,
        realpath=path,
        mountpoint=path,
        fullsize=True,
        label=volume_label,
        attributes=['no-copy-on-write'],
        is_root_volume=True|False
    )
]</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.is_xen_guest">
                  <term>
                    <property>kiwi.xml_state.XMLState.is_xen_guest</property>
                  </term>
                  <listitem>
                    <para>Check if build type setup specifies a Xen Guest (domX)
                                The check is based on the architecture, the firmware and
                                xen_loader configuration values:</para>
                    <itemizedlist>
                      <listitem>
                        <para>We only support Xen setup on the x86_64 architecture</para>
                      </listitem>
                      <listitem>
                        <para>Firmware pointing to ec2 means the image is targeted to run
                                        in Amazon EC2 which is a Xen guest</para>
                      </listitem>
                      <listitem>
                        <para>Machine setup with a xen_loader attribute also indicates a
                                        Xen guest target</para>
                      </listitem>
                    </itemizedlist>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.is_xen_server">
                  <term>
                    <property>kiwi.xml_state.XMLState.is_xen_server</property>
                  </term>
                  <listitem>
                    <para>Check if build type domain setup specifies a Xen Server (dom0)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.package_matches_host_architecture">
                  <term>
                    <property>kiwi.xml_state.XMLState.package_matches_host_architecture</property>
                  </term>
                  <listitem>
                    <para>Tests if the given package section is applicable for the current host
                                architecture. If no architecture is specified within the section
                                it is considered as a match returning True.</para>
                    <para>Note: The XML section pointer must provide an arch attribute</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>section</literal> – XML section object</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.preferences_matches_host_architecture">
                  <term>
                    <property>kiwi.xml_state.XMLState.preferences_matches_host_architecture</property>
                  </term>
                  <listitem>
                    <para>Tests if the given preferences section is applicable for the
                                current host architecture. If no architecture is specified within
                                the section it is considered as a match returning True.</para>
                    <para>Note: The XML section pointer must provide an arch attribute</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>section</literal> – XML section object</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.profile_matches_host_architecture">
                  <term>
                    <property>kiwi.xml_state.XMLState.profile_matches_host_architecture</property>
                  </term>
                  <listitem>
                    <para>Tests if the given profile section is applicable for the current host
                                architecture. If no architecture is specified within the section
                                it is considered as a match returning True.</para>
                    <para>Note: The XML section pointer must provide an arch attribute</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>section</literal> – XML section object</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.set_container_config_tag">
                  <term>
                    <property>kiwi.xml_state.XMLState.set_container_config_tag</property>
                  </term>
                  <listitem>
                    <para>Set new tag name in containerconfig section</para>
                    <para>In order to set a new tag value an existing containerconfig and
                                tag setup is required</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>tag</literal> () – tag name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.set_derived_from_image_uri">
                  <term>
                    <property>kiwi.xml_state.XMLState.set_derived_from_image_uri</property>
                  </term>
                  <listitem>
                    <para>Set derived_from attribute to a new value</para>
                    <para>In order to set a new value the derived_from attribute
                                must be already present in the image configuration</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>uri</literal> () – URI</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.set_repository">
                  <term>
                    <property>kiwi.xml_state.XMLState.set_repository</property>
                  </term>
                  <listitem>
                    <para>Overwrite repository data of the first repository</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>repo_source</literal> () – repository URI</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_type</literal> () – type name defined by schema</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_alias</literal> () – alias name</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_prio</literal> () – priority number, package manager specific</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_imageinclude</literal> () – setup repository inside of the image</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_package_gpgcheck</literal> () – enable/disable package gpg checks</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.set_root_filesystem_uuid">
                  <term>
                    <property>kiwi.xml_state.XMLState.set_root_filesystem_uuid</property>
                  </term>
                  <listitem>
                    <para>Store UUID provided in uuid as state information</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>uuid</literal> () – UUID</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.XMLState.set_root_partition_uuid">
                  <term>
                    <property>kiwi.xml_state.XMLState.set_root_partition_uuid</property>
                  </term>
                  <listitem>
                    <para>Store PARTUUID provided in uuid as state information</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>uuid</literal> () – PARTUUID</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.xml_state.description_type">
            <term>
              <literal>kiwi.xml_state.description_type</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.description_type.author">
                  <term>
                    <property>kiwi.xml_state.description_type.author</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 0</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.description_type.contact">
                  <term>
                    <property>kiwi.xml_state.description_type.contact</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 1</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.description_type.specification">
                  <term>
                    <property>kiwi.xml_state.description_type.specification</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 2</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.xml_state.package_type">
            <term>
              <literal>kiwi.xml_state.package_type</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.package_type.package_section">
                  <term>
                    <property>kiwi.xml_state.package_type.package_section</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 1</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.package_type.packages_section">
                  <term>
                    <property>kiwi.xml_state.package_type.packages_section</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 0</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.xml_state.size_type">
            <term>
              <literal>kiwi.xml_state.size_type</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.size_type.additive">
                  <term>
                    <property>kiwi.xml_state.size_type.additive</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 1</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.size_type.mbytes">
                  <term>
                    <property>kiwi.xml_state.size_type.mbytes</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 0</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.xml_state.volume_type">
            <term>
              <literal>kiwi.xml_state.volume_type</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.volume_type.attributes">
                  <term>
                    <property>kiwi.xml_state.volume_type.attributes</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 6</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.volume_type.fullsize">
                  <term>
                    <property>kiwi.xml_state.volume_type.fullsize</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 4</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.volume_type.is_root_volume">
                  <term>
                    <property>kiwi.xml_state.volume_type.is_root_volume</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 7</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.volume_type.label">
                  <term>
                    <property>kiwi.xml_state.volume_type.label</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 5</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.volume_type.mountpoint">
                  <term>
                    <property>kiwi.xml_state.volume_type.mountpoint</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 3</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.volume_type.name">
                  <term>
                    <property>kiwi.xml_state.volume_type.name</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 0</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.volume_type.realpath">
                  <term>
                    <property>kiwi.xml_state.volume_type.realpath</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 2</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.xml_state.volume_type.size">
                  <term>
                    <property>kiwi.xml_state.volume_type.size</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 1</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-archive-package" xml:base="api/kiwi.archive">
      <title>kiwi.archive Package</title>
      <section xml:id="db-kiwi-archive-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.archive.cpio_kiwi-archive-cpio-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.archive.cpio"><literal>kiwi.archive.cpio</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.archive.cpio.ArchiveCpio">
            <term>
              <literal>kiwi.archive.cpio.ArchiveCpio</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Extraction/Creation of cpio archives</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>filename</literal> () – filename to use for archive extraction or creation</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.archive.cpio.ArchiveCpio.create">
                  <term>
                    <property>kiwi.archive.cpio.ArchiveCpio.create</property>
                  </term>
                  <listitem>
                    <para>Create cpio archive</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>source_dir</literal> () – data source directory</para>
                            </listitem>
                            <listitem>
                              <para><literal>exclude</literal> () – list of excluded items</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.archive.cpio.ArchiveCpio.extract">
                  <term>
                    <property>kiwi.archive.cpio.ArchiveCpio.extract</property>
                  </term>
                  <listitem>
                    <para>Extract cpio archive contents</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>dest_dir</literal> () – target data directory</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.archive.tar_kiwi-archive-tar-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.archive.tar"><literal>kiwi.archive.tar</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.archive.tar.ArchiveTar">
            <term>
              <literal>kiwi.archive.tar.ArchiveTar</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Extraction/Creation of tar archives</emphasis>
              </para>
              <para>The tarfile python module is not used by that class,
                        since it does not provide support for some relevant features
                        in comparison to the GNU tar command (e.g. numeric-owner).
                        Moreover tarfile lacks support for xz compression under
                        Python v2.7.</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>filename</literal> () – filename to use for archive extraction or creation</para>
                      </listitem>
                      <listitem>
                        <para><literal>create_from_file_list</literal> () – use file list not entire directory to create the archive</para>
                      </listitem>
                      <listitem>
                        <para><literal>file_list</literal> () – list of files and directorie names to archive</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.archive.tar.ArchiveTar.append_files">
                  <term>
                    <property>kiwi.archive.tar.ArchiveTar.append_files</property>
                  </term>
                  <listitem>
                    <para>Append files to an already existing uncompressed tar archive</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>source_dir</literal> () – data source directory</para>
                            </listitem>
                            <listitem>
                              <para><literal>files_to_append</literal> () – list of items to append</para>
                            </listitem>
                            <listitem>
                              <para><literal>options</literal> () – custom options</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.archive.tar.ArchiveTar.create">
                  <term>
                    <property>kiwi.archive.tar.ArchiveTar.create</property>
                  </term>
                  <listitem>
                    <para>Create uncompressed tar archive</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>source_dir</literal> () – data source directory</para>
                            </listitem>
                            <listitem>
                              <para><literal>exclude</literal> () – list of excluded items</para>
                            </listitem>
                            <listitem>
                              <para><literal>options</literal> () – custom creation options</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.archive.tar.ArchiveTar.create_gnu_gzip_compressed">
                  <term>
                    <property>kiwi.archive.tar.ArchiveTar.create_gnu_gzip_compressed</property>
                  </term>
                  <listitem>
                    <para>Create gzip compressed tar archive</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>source_dir</literal> () – data source directory</para>
                            </listitem>
                            <listitem>
                              <para><literal>exclude</literal> () – list of excluded items</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.archive.tar.ArchiveTar.create_xz_compressed">
                  <term>
                    <property>kiwi.archive.tar.ArchiveTar.create_xz_compressed</property>
                  </term>
                  <listitem>
                    <para>Create XZ compressed tar archive</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>source_dir</literal> () – data source directory</para>
                            </listitem>
                            <listitem>
                              <para><literal>exclude</literal> () – list of excluded items</para>
                            </listitem>
                            <listitem>
                              <para><literal>options</literal> () – custom tar creation options</para>
                            </listitem>
                            <listitem>
                              <para><literal>xz_options</literal> () – custom xz compression options</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.archive.tar.ArchiveTar.extract">
                  <term>
                    <property>kiwi.archive.tar.ArchiveTar.extract</property>
                  </term>
                  <listitem>
                    <para>Extract tar archive contents</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>dest_dir</literal> () – target data directory</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-archive-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-boot-image-package" xml:base="api/kiwi.boot.image">
      <title>kiwi.boot.image Package</title>
      <section xml:id="db-kiwi-boot-image-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.boot.image.base_kiwi-boot-image-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.boot.image.base"><literal>kiwi.boot.image.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.boot.image.base.BootImageBase">
            <term>
              <literal>kiwi.boot.image.base.BootImageBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Base class for boot image(initrd) task</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – Instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target dir to store the initrd</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – system image root directory</para>
                      </listitem>
                      <listitem>
                        <para><literal>signing_keys</literal> () – list of package signing keys</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.cleanup">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.cleanup</property>
                  </term>
                  <listitem>
                    <para>Cleanup temporary boot image data if any</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.create_initrd">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.create_initrd</property>
                  </term>
                  <listitem>
                    <para>Implements creation of the initrd</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – instance of ImageIdentifier</para>
                            </listitem>
                            <listitem>
                              <para><literal>basename</literal> () – base initrd file name</para>
                            </listitem>
                            <listitem>
                              <para><literal>install_initrd</literal> () – installation media initrd</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>Implementation in specialized boot image class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.dump">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.dump</property>
                  </term>
                  <listitem>
                    <para>Pickle dump this instance to a file. If the object dump
                                is requested the destructor code will also be disabled
                                in order to preserve the generated data</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – file path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.get_boot_description_directory">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.get_boot_description_directory</property>
                  </term>
                  <listitem>
                    <para>Provide path to the boot image XML description</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.get_boot_names">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.get_boot_names</property>
                  </term>
                  <listitem>
                    <para>Provides kernel and initrd names for the boot image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Contains boot_names_type tuple</para>
                          <screen language="python">boot_names_type(
    kernel_name='INSTALLED_KERNEL',
    initrd_name='DRACUT_OUTPUT_NAME'
)</screen>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.import_system_description_elements">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.import_system_description_elements</property>
                  </term>
                  <listitem>
                    <para>Copy information from the system image relevant to create the
                                boot image to the boot image state XML description</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.include_file">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.include_file</property>
                  </term>
                  <listitem>
                    <para>Include file to boot image</para>
                    <para>For kiwi boot images this is done by adding package or
                                archive definitions with the bootinclude attribute. Thus
                                for kiwi boot images the method is a noop</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>filename</literal> () – file path name</para>
                            </listitem>
                            <listitem>
                              <para><literal>install_media</literal> () – include also for installation media initrd</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.include_module">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.include_module</property>
                  </term>
                  <listitem>
                    <para>Include module to boot image</para>
                    <para>For kiwi boot no modules configuration is required. Thus in
                                such a case this method is a noop.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>module</literal> () – module to include</para>
                            </listitem>
                            <listitem>
                              <para><literal>install_media</literal> () – include the module for install initrds</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.is_prepared">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.is_prepared</property>
                  </term>
                  <listitem>
                    <para>Check if initrd system is prepared.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.load_boot_xml_description">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.load_boot_xml_description</property>
                  </term>
                  <listitem>
                    <para>Load the boot image description referenced by the system image
                                description boot attribute</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.omit_module">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.omit_module</property>
                  </term>
                  <listitem>
                    <para>Omit module to boot image</para>
                    <para>For kiwi boot no modules configuration is required. Thus in
                                such a case this method is a noop.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>module</literal> () – module to omit</para>
                            </listitem>
                            <listitem>
                              <para><literal>install_media</literal> () – omit the module for install initrds</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.post_init">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Implementation in specialized boot image class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.prepare">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.prepare</property>
                  </term>
                  <listitem>
                    <para>Prepare new root system to create initrd from. Implementation
                                is only needed if there is no other root system available</para>
                    <para>Implementation in specialized boot image class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.set_static_modules">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.set_static_modules</property>
                  </term>
                  <listitem>
                    <para>Set static modules list for boot image</para>
                    <para>For kiwi boot no modules configuration is required. Thus in
                                such a case this method is a noop.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>modules</literal> () – list of modules to include</para>
                            </listitem>
                            <listitem>
                              <para><literal>install_media</literal> () – lists the modules for install initrds</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.base.BootImageBase.write_system_config_file">
                  <term>
                    <property>kiwi.boot.image.base.BootImageBase.write_system_config_file</property>
                  </term>
                  <listitem>
                    <para>Writes relevant boot image configuration into configuration file
                                that will be part of the system image.</para>
                    <para>This is used to configure any further boot image rebuilds after
                                deployment. For instance, initrds recreated on kernel update.</para>
                    <para>For kiwi boot no specific configuration is required for initrds
                                recreation, thus this method is a noop in that case.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>config</literal> () – dictonary including configuration parameters</para>
                            </listitem>
                            <listitem>
                              <para><literal>config_file</literal> () – configuration file to write</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.boot.image.dracut_kiwi-boot-image-dracut-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.boot.image.dracut"><literal>kiwi.boot.image.dracut</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.boot.image.dracut.BootImageDracut">
            <term>
              <literal>kiwi.boot.image.dracut.BootImageDracut</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.boot.image.base.BootImageBase"><literal>kiwi.boot.image.base.BootImageBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of dracut boot(initrd) images.</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.dracut.BootImageDracut.create_initrd">
                  <term>
                    <property>kiwi.boot.image.dracut.BootImageDracut.create_initrd</property>
                  </term>
                  <listitem>
                    <para>Create kiwi .profile environment to be included in dracut initrd.
                                Call dracut as chroot operation to create the initrd and move
                                the result into the image build target directory</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>basename</literal> () – base initrd file name</para>
                            </listitem>
                            <listitem>
                              <para><literal>install_initrd</literal> () – installation media initrd</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.dracut.BootImageDracut.include_file">
                  <term>
                    <property>kiwi.boot.image.dracut.BootImageDracut.include_file</property>
                  </term>
                  <listitem>
                    <para>Include file to dracut boot image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – file path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.dracut.BootImageDracut.include_module">
                  <term>
                    <property>kiwi.boot.image.dracut.BootImageDracut.include_module</property>
                  </term>
                  <listitem>
                    <para>Include module to dracut boot image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>module</literal> () – module to include</para>
                            </listitem>
                            <listitem>
                              <para><literal>install_media</literal> () – include the module for install initrds</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.dracut.BootImageDracut.omit_module">
                  <term>
                    <property>kiwi.boot.image.dracut.BootImageDracut.omit_module</property>
                  </term>
                  <listitem>
                    <para>Omit module to dracut boot image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>module</literal> () – module to omit</para>
                            </listitem>
                            <listitem>
                              <para><literal>install_media</literal> () – omit the module for install initrds</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.dracut.BootImageDracut.post_init">
                  <term>
                    <property>kiwi.boot.image.dracut.BootImageDracut.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Initialize empty list of dracut caller options</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.dracut.BootImageDracut.prepare">
                  <term>
                    <property>kiwi.boot.image.dracut.BootImageDracut.prepare</property>
                  </term>
                  <listitem>
                    <para>Prepare dracut caller environment</para>
                    <itemizedlist>
                      <listitem>
                        <para>Setup machine_id(s) to be generic and rebuild by dracut on boot</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.dracut.BootImageDracut.set_static_modules">
                  <term>
                    <property>kiwi.boot.image.dracut.BootImageDracut.set_static_modules</property>
                  </term>
                  <listitem>
                    <para>Set static dracut modules list for boot image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>modules</literal> () – list of the modules to include</para>
                            </listitem>
                            <listitem>
                              <para><literal>install_media</literal> () – lists the modules for install initrds</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.dracut.BootImageDracut.write_system_config_file">
                  <term>
                    <property>kiwi.boot.image.dracut.BootImageDracut.write_system_config_file</property>
                  </term>
                  <listitem>
                    <para>Writes modules configuration into a dracut configuration file.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>config</literal> () – a dictionary containing the modules to add and omit</para>
                            </listitem>
                            <listitem>
                              <para><literal>conf_file</literal> () – configuration file to write</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.boot.image.builtin_kiwi_kiwi-boot-image-builtin-kiwi-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.boot.image.builtin_kiwi"><literal>kiwi.boot.image.builtin_kiwi</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.boot.image.builtin_kiwi.BootImageKiwi">
            <term>
              <literal>kiwi.boot.image.builtin_kiwi.BootImageKiwi</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.boot.image.base.BootImageBase"><literal>kiwi.boot.image.base.BootImageBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements preparation and creation of kiwi boot(initrd) images</emphasis>
              </para>
              <para>The kiwi initrd is a customized first boot initrd which allows
                        to control the first boot an appliance. The kiwi initrd replaces
                        itself after first boot by the result of dracut.</para>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.builtin_kiwi.BootImageKiwi.cleanup">
                  <term>
                    <property>kiwi.boot.image.builtin_kiwi.BootImageKiwi.cleanup</property>
                  </term>
                  <listitem>
                    <para>Cleanup temporary boot image data if any</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.builtin_kiwi.BootImageKiwi.create_initrd">
                  <term>
                    <property>kiwi.boot.image.builtin_kiwi.BootImageKiwi.create_initrd</property>
                  </term>
                  <listitem>
                    <para>Create initrd from prepared boot system tree and compress the result</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – instance of ImageIdentifier</para>
                            </listitem>
                            <listitem>
                              <para><literal>basename</literal> () – base initrd file name</para>
                            </listitem>
                            <listitem>
                              <para><literal>install_initrd</literal> () – installation media initrd</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.builtin_kiwi.BootImageKiwi.post_init">
                  <term>
                    <property>kiwi.boot.image.builtin_kiwi.BootImageKiwi.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Creates custom directory to prepare the boot image
                                root filesystem which is a separate image to create
                                the initrd from</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.builtin_kiwi.BootImageKiwi.prepare">
                  <term>
                    <property>kiwi.boot.image.builtin_kiwi.BootImageKiwi.prepare</property>
                  </term>
                  <listitem>
                    <para>Prepare new root system suitable to create a kiwi initrd from it</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-boot-image-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.boot.image.BootImage">
            <term>
              <literal>kiwi.boot.image.BootImage</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">BootImge Factory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – Instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target dir to store the initrd</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – system image root directory</para>
                      </listitem>
                      <listitem>
                        <para><literal>signing_keys</literal> () – list of package signing keys</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.boot.image.BootImage.new">
                  <term>
                    <property>kiwi.boot.image.BootImage.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-bootloader-config-package" xml:base="api/kiwi.bootloader.config">
      <title>kiwi.bootloader.config Package</title>
      <section xml:id="db-kiwi-bootloader-config-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.bootloader.config.base_kiwi-bootloader-config-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.bootloader.config.base"><literal>kiwi.bootloader.config.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase">
            <term>
              <literal>kiwi.bootloader.config.base.BootLoaderConfigBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Base class for bootloader configuration</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – custom bootloader arguments dictionary</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.create_efi_path">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.create_efi_path</property>
                  </term>
                  <listitem>
                    <para>Create standard EFI boot directory structure</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>in_sub_dir</literal> () – toplevel directory</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Full qualified EFI boot path</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.failsafe_boot_entry_requested">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.failsafe_boot_entry_requested</property>
                  </term>
                  <listitem>
                    <para>Check if a failsafe boot entry is requested</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.get_boot_cmdline">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.get_boot_cmdline</property>
                  </term>
                  <listitem>
                    <para>Boot commandline arguments passed to the kernel</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>uuid</literal> () – boot device UUID</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>kernel boot arguments</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.get_boot_path">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.get_boot_path</property>
                  </term>
                  <listitem>
                    <para>Bootloader lookup path on boot device</para>
                    <para>If the bootloader reads the data it needs to boot, it does
                                that from the configured boot device. Depending if that
                                device is an extra boot partition or the root partition or
                                or based on a non standard filesystem like a btrfs snapshot,
                                the path name varies</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target</literal> () – target name: disk|iso</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.get_boot_theme">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.get_boot_theme</property>
                  </term>
                  <listitem>
                    <para>Bootloader Theme name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>theme name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.get_boot_timeout_seconds">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.get_boot_timeout_seconds</property>
                  </term>
                  <listitem>
                    <para>Bootloader timeout in seconds</para>
                    <para>If no timeout is specified the default timeout applies</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>timeout seconds</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.get_continue_on_timeout">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.get_continue_on_timeout</property>
                  </term>
                  <listitem>
                    <para>Check if the boot should continue after boot timeout or not</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.get_gfxmode">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.get_gfxmode</property>
                  </term>
                  <listitem>
                    <para>Graphics mode according to bootloader target</para>
                    <para>Bootloaders which support a graphics mode can be configured
                                to run graphics in a specific resolution and colors. There
                                is no standard for this setup which causes kiwi to create
                                a mapping from the kernel vesa mode number to the corresponding
                                bootloader graphics mode setup</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target</literal> () – bootloader name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>boot graphics mode</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.get_install_image_boot_default">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.get_install_image_boot_default</property>
                  </term>
                  <listitem>
                    <para>Provide the default boot menu entry identifier for install images</para>
                    <para>The install image can be configured to provide more than
                                one boot menu entry. Menu entries configured are:</para>
                    <itemizedlist>
                      <listitem>
                        <para>[0] Boot From Hard Disk</para>
                      </listitem>
                      <listitem>
                        <para>[1] Install</para>
                      </listitem>
                      <listitem>
                        <para>[2] Failsafe Install</para>
                      </listitem>
                    </itemizedlist>
                    <para>The installboot attribute controlls which of these are used
                                by default. If not specified the boot from hard disk entry
                                will be the default. Depending on the specified loader type
                                either an entry number or name will be returned.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>loader</literal> () – bootloader name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>menu name or id</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.get_menu_entry_install_title">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.get_menu_entry_install_title</property>
                  </term>
                  <listitem>
                    <para>Prefixed menu entry title for install images</para>
                    <para>If no displayname is specified in the image description,
                                the menu title is constructed from the image name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>title text</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.get_menu_entry_title">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.get_menu_entry_title</property>
                  </term>
                  <listitem>
                    <para>Prefixed menu entry title</para>
                    <para>If no displayname is specified in the image description,
                                the menu title is constructed from the image name and
                                build type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>plain</literal> () – indicate to add built type into title text</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>title text</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.post_init">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Store custom arguments by default</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom bootloader arguments</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.quote_title">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.quote_title</property>
                  </term>
                  <listitem>
                    <para>Quote special characters in the title name</para>
                    <para>Not all characters can be displayed correctly in the bootloader
                                environment. Therefore a quoting is required</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – title name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>quoted text</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.setup_disk_boot_images">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.setup_disk_boot_images</property>
                  </term>
                  <listitem>
                    <para>Create bootloader images for disk boot</para>
                    <para>Some bootloaders requires to build a boot image the bootloader
                                can load from a specific offset address or from a standardized
                                path on a filesystem.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>boot_uuid</literal> () – boot device UUID</para>
                            </listitem>
                            <listitem>
                              <para><literal>lookup_path</literal> () – custom module lookup path</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>Implementation in specialized bootloader class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.setup_disk_image_config">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.setup_disk_image_config</property>
                  </term>
                  <listitem>
                    <para>Create boot config file to boot from disk.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>boot_uuid</literal> () – boot device UUID</para>
                            </listitem>
                            <listitem>
                              <para><literal>root_uuid</literal> () – root device UUID</para>
                            </listitem>
                            <listitem>
                              <para><literal>hypervisor</literal> () – hypervisor name</para>
                            </listitem>
                            <listitem>
                              <para><literal>kernel</literal> () – kernel name</para>
                            </listitem>
                            <listitem>
                              <para><literal>initrd</literal> () – initrd name</para>
                            </listitem>
                            <listitem>
                              <para><literal>boot_options</literal> () – custom options dictionary required to setup the bootloader.
                                                    The scope of the options covers all information needed
                                                    to setup and configure the bootloader and gets effective
                                                    in the individual implementation. boot_options should
                                                    not be mixed up with commandline options used at boot time.
                                                    This information is provided from the get_*_cmdline
                                                    methods. The contents of the dictionary can vary between
                                                    bootloaders or even not be needed</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>Implementation in specialized bootloader class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.setup_install_boot_images">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.setup_install_boot_images</property>
                  </term>
                  <listitem>
                    <para>Create bootloader images for ISO boot an install media</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – mbrid file name on boot device</para>
                            </listitem>
                            <listitem>
                              <para><literal>lookup_path</literal> () – custom module lookup path</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>Implementation in specialized bootloader class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.setup_install_image_config">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.setup_install_image_config</property>
                  </term>
                  <listitem>
                    <para>Create boot config file to boot from install media in EFI mode.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – mbrid file name on boot device</para>
                            </listitem>
                            <listitem>
                              <para><literal>hypervisor</literal> () – hypervisor name</para>
                            </listitem>
                            <listitem>
                              <para><literal>kernel</literal> () – kernel name</para>
                            </listitem>
                            <listitem>
                              <para><literal>initrd</literal> () – initrd name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>Implementation in specialized bootloader class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.setup_live_boot_images">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.setup_live_boot_images</property>
                  </term>
                  <listitem>
                    <para>Create bootloader images for ISO boot a live ISO image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – mbrid file name on boot device</para>
                            </listitem>
                            <listitem>
                              <para><literal>lookup_path</literal> () – custom module lookup path</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>Implementation in specialized bootloader class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.setup_live_image_config">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.setup_live_image_config</property>
                  </term>
                  <listitem>
                    <para>Create boot config file to boot live ISO image in EFI mode.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – mbrid file name on boot device</para>
                            </listitem>
                            <listitem>
                              <para><literal>hypervisor</literal> () – hypervisor name</para>
                            </listitem>
                            <listitem>
                              <para><literal>kernel</literal> () – kernel name</para>
                            </listitem>
                            <listitem>
                              <para><literal>initrd</literal> () – initrd name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>Implementation in specialized bootloader class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.setup_sysconfig_bootloader">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.setup_sysconfig_bootloader</property>
                  </term>
                  <listitem>
                    <para>Create or update etc/sysconfig/bootloader by parameters
                                required according to the bootloader setup</para>
                    <para>Implementation in specialized bootloader class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.write">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.write</property>
                  </term>
                  <listitem>
                    <para>Write config data to config file.</para>
                    <para>Implementation in specialized bootloader class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.base.BootLoaderConfigBase.write_meta_data">
                  <term>
                    <property>kiwi.bootloader.config.base.BootLoaderConfigBase.write_meta_data</property>
                  </term>
                  <listitem>
                    <para>Write bootloader setup meta data files</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>root_uuid</literal> () – root device UUID</para>
                            </listitem>
                            <listitem>
                              <para><literal>boot_options</literal> () – kernel options as string</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>Implementation in specialized bootloader class optional</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.bootloader.config.grub2_kiwi-bootloader-config-grub2-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.bootloader.config.grub2"><literal>kiwi.bootloader.config.grub2</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.bootloader.config.grub2.BootLoaderConfigGrub2">
            <term>
              <literal>kiwi.bootloader.config.grub2.BootLoaderConfigGrub2</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.bootloader.config.base.BootLoaderConfigBase"><literal>kiwi.bootloader.config.base.BootLoaderConfigBase</literal></link></para>
              <para>
                <emphasis role="bold">grub2 bootloader configuration.</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.post_init">
                  <term>
                    <property>kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.post_init</property>
                  </term>
                  <listitem>
                    <para>grub2 post initialization method</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – </para>
                          <para>Contains grub config arguments</para>
                          <screen language="python">{'grub_directory_name': 'grub|grub2'}</screen>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_disk_boot_images">
                  <term>
                    <property>kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_disk_boot_images</property>
                  </term>
                  <listitem>
                    <para>Create/Provide grub2 boot images and metadata</para>
                    <para>In order to boot from the disk grub2 modules, images and theme
                                data needs to be created and provided at the correct place in
                                the filesystem</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>boot_uuid</literal> () – boot device UUID</para>
                            </listitem>
                            <listitem>
                              <para><literal>lookup_path</literal> () – custom module lookup path</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_disk_image_config">
                  <term>
                    <property>kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_disk_image_config</property>
                  </term>
                  <listitem>
                    <para>Create grub2 config file to boot from disk using grub2-mkconfig</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>boot_uuid</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>root_uuid</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>hypervisor</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>kernel</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>initrd</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>boot_options</literal> () – </para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>options dictionary that has to contain the root and boot
                                device and optional volume configuration. KIWI has to
                                mount the system prior to run grub2-mkconfig.</para>
                    <screen language="python">{
    'root_device': string,
    'boot_device': string,
    'efi_device': string,
    'system_volumes': volume_manager_instance.get_volumes()
}</screen>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_install_boot_images">
                  <term>
                    <property>kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_install_boot_images</property>
                  </term>
                  <listitem>
                    <para>Create/Provide grub2 boot images and metadata</para>
                    <para>In order to boot from the ISO grub2 modules, images and theme
                                data needs to be created and provided at the correct place on
                                the iso filesystem</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – mbrid file name on boot device</para>
                            </listitem>
                            <listitem>
                              <para><literal>lookup_path</literal> () – custom module lookup path</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_install_image_config">
                  <term>
                    <property>kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_install_image_config</property>
                  </term>
                  <listitem>
                    <para>Create grub2 config file to boot from an ISO install image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – mbrid file name on boot device</para>
                            </listitem>
                            <listitem>
                              <para><literal>hypervisor</literal> () – hypervisor name</para>
                            </listitem>
                            <listitem>
                              <para><literal>kernel</literal> () – kernel name</para>
                            </listitem>
                            <listitem>
                              <para><literal>initrd</literal> () – initrd name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_live_boot_images">
                  <term>
                    <property>kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_live_boot_images</property>
                  </term>
                  <listitem>
                    <para>Create/Provide grub2 boot images and metadata</para>
                    <para>Calls setup_install_boot_images because no different action required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_live_image_config">
                  <term>
                    <property>kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.setup_live_image_config</property>
                  </term>
                  <listitem>
                    <para>Create grub2 config file to boot a live media ISO image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – mbrid file name on boot device</para>
                            </listitem>
                            <listitem>
                              <para><literal>hypervisor</literal> () – hypervisor name</para>
                            </listitem>
                            <listitem>
                              <para><literal>kernel</literal> () – kernel name</para>
                            </listitem>
                            <listitem>
                              <para><literal>initrd</literal> () – initrd name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.write">
                  <term>
                    <property>kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.write</property>
                  </term>
                  <listitem>
                    <para>Write bootloader configuration</para>
                    <itemizedlist>
                      <listitem>
                        <para>writes grub.cfg template by KIWI if template system is used</para>
                      </listitem>
                      <listitem>
                        <para>creates an embedded fat efi image for EFI ISO boot</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.write_meta_data">
                  <term>
                    <property>kiwi.bootloader.config.grub2.BootLoaderConfigGrub2.write_meta_data</property>
                  </term>
                  <listitem>
                    <para>Write bootloader setup meta data files</para>
                    <itemizedlist>
                      <listitem>
                        <para>cmdline arguments initialization</para>
                      </listitem>
                      <listitem>
                        <para>etc/default/grub setup file</para>
                      </listitem>
                      <listitem>
                        <para>etc/default/zipl2grub.conf.in (s390 only)</para>
                      </listitem>
                      <listitem>
                        <para>etc/sysconfig/bootloader</para>
                      </listitem>
                    </itemizedlist>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>root_uuid</literal> () – root device UUID</para>
                            </listitem>
                            <listitem>
                              <para><literal>boot_options</literal> () – kernel options as string</para>
                            </listitem>
                            <listitem>
                              <para><literal>iso_boot</literal> () – indicate target is an ISO</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.bootloader.config.isolinux_kiwi-bootloader-config-isolinux-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.bootloader.config.isolinux"><literal>kiwi.bootloader.config.isolinux</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux">
            <term>
              <literal>kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.bootloader.config.base.BootLoaderConfigBase"><literal>kiwi.bootloader.config.base.BootLoaderConfigBase</literal></link></para>
              <para>
                <emphasis role="bold">isolinux bootloader configuration.</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.post_init">
                  <term>
                    <property>kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.post_init</property>
                  </term>
                  <listitem>
                    <para>isolinux post initialization method</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom isolinux config arguments</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.setup_install_boot_images">
                  <term>
                    <property>kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.setup_install_boot_images</property>
                  </term>
                  <listitem>
                    <para>Provide isolinux boot metadata</para>
                    <para>No extra boot images must be created for isolinux</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>lookup_path</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.setup_install_image_config">
                  <term>
                    <property>kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.setup_install_image_config</property>
                  </term>
                  <listitem>
                    <para>Create isolinux.cfg in memory from a template suitable to boot
                                from an ISO image in BIOS boot mode</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – mbrid file name on boot device</para>
                            </listitem>
                            <listitem>
                              <para><literal>hypervisor</literal> () – hypervisor name</para>
                            </listitem>
                            <listitem>
                              <para><literal>kernel</literal> () – kernel name</para>
                            </listitem>
                            <listitem>
                              <para><literal>initrd</literal> () – initrd name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.setup_live_boot_images">
                  <term>
                    <property>kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.setup_live_boot_images</property>
                  </term>
                  <listitem>
                    <para>Provide isolinux boot metadata</para>
                    <para>No extra boot images must be created for isolinux</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>lookup_path</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.setup_live_image_config">
                  <term>
                    <property>kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.setup_live_image_config</property>
                  </term>
                  <listitem>
                    <para>Create isolinux.cfg in memory from a template suitable to boot
                                a live system from an ISO image in BIOS boot mode</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>mbrid</literal> () – mbrid file name on boot device</para>
                            </listitem>
                            <listitem>
                              <para><literal>hypervisor</literal> () – hypervisor name</para>
                            </listitem>
                            <listitem>
                              <para><literal>kernel</literal> () – kernel name</para>
                            </listitem>
                            <listitem>
                              <para><literal>initrd</literal> () – initrd name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.write">
                  <term>
                    <property>kiwi.bootloader.config.isolinux.BootLoaderConfigIsoLinux.write</property>
                  </term>
                  <listitem>
                    <para>Write isolinux.cfg and isolinux.msg file</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-bootloader-config-contents">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.bootloader.config.BootLoaderConfig">
            <term>
              <literal>kiwi.bootloader.config.BootLoaderConfig</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">BootLoaderConfig factory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>name</literal> () – bootloader name</para>
                      </listitem>
                      <listitem>
                        <para><literal>xml_state</literal> () – instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – custom bootloader config arguments dictionary</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.config.BootLoaderConfig.new">
                  <term>
                    <property>kiwi.bootloader.config.BootLoaderConfig.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-bootloader-install-package" xml:base="api/kiwi.bootloader.install">
      <title>kiwi.bootloader.install Package</title>
      <section xml:id="db-kiwi-bootloader-install-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.bootloader.install.base_kiwi-bootloader-install-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.bootloader.install.base"><literal>kiwi.bootloader.install.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.bootloader.install.base.BootLoaderInstallBase">
            <term>
              <literal>kiwi.bootloader.install.base.BootLoaderInstallBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Base class for bootloader installation on device</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>device_provider</literal> () – instance of <literal>DeviceProvider</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – custom arguments dictionary</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.install.base.BootLoaderInstallBase.install">
                  <term>
                    <property>kiwi.bootloader.install.base.BootLoaderInstallBase.install</property>
                  </term>
                  <listitem>
                    <para>Install bootloader on self.device</para>
                    <para>Implementation in specialized bootloader install class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.install.base.BootLoaderInstallBase.install_required">
                  <term>
                    <property>kiwi.bootloader.install.base.BootLoaderInstallBase.install_required</property>
                  </term>
                  <listitem>
                    <para>Check if bootloader needs to be installed</para>
                    <para>Implementation in specialized bootloader install class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.install.base.BootLoaderInstallBase.post_init">
                  <term>
                    <property>kiwi.bootloader.install.base.BootLoaderInstallBase.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Store custom arguments by default</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom bootloader arguments</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.bootloader.install.grub2_kiwi-bootloader-install-grub2-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.bootloader.install.grub2"><literal>kiwi.bootloader.install.grub2</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.bootloader.install.grub2.BootLoaderInstallGrub2">
            <term>
              <literal>kiwi.bootloader.install.grub2.BootLoaderInstallGrub2</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.bootloader.install.base.BootLoaderInstallBase"><literal>kiwi.bootloader.install.base.BootLoaderInstallBase</literal></link></para>
              <para>
                <emphasis role="bold">grub2 bootloader installation</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.install.grub2.BootLoaderInstallGrub2.install">
                  <term>
                    <property>kiwi.bootloader.install.grub2.BootLoaderInstallGrub2.install</property>
                  </term>
                  <listitem>
                    <para>Install bootloader on disk device</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.install.grub2.BootLoaderInstallGrub2.install_required">
                  <term>
                    <property>kiwi.bootloader.install.grub2.BootLoaderInstallGrub2.install_required</property>
                  </term>
                  <listitem>
                    <para>Check if grub2 has to be installed</para>
                    <para>Take architecture and firmware setup into account to check if
                                bootloader code in a boot record is required</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.install.grub2.BootLoaderInstallGrub2.post_init">
                  <term>
                    <property>kiwi.bootloader.install.grub2.BootLoaderInstallGrub2.post_init</property>
                  </term>
                  <listitem>
                    <para>grub2 post initialization method</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – </para>
                          <para>Contains custom grub2 bootloader arguments</para>
                          <screen language="python">{
    'target_removable': bool,
    'system_volumes': list_of_volumes,
    'firmware': FirmWare_instance,
    'efi_device': string,
    'boot_device': string,
    'root_device': string
}</screen>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-bootloader-install-contents">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.bootloader.install.BootLoaderInstall">
            <term>
              <literal>kiwi.bootloader.install.BootLoaderInstall</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">BootLoaderInstall Factory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>name</literal> () – bootloader name</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>device_provider</literal> () – instance of <literal>DeviceProvider</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – custom arguments dictionary</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.install.BootLoaderInstall.new">
                  <term>
                    <property>kiwi.bootloader.install.BootLoaderInstall.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-bootloader-package" xml:base="api/kiwi.bootloader">
      <title>kiwi.bootloader Package</title>
      <section xml:id="db-kiwi-bootloader-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-bootloader-template-package" xml:base="api/kiwi.bootloader.template">
      <title>kiwi.bootloader.template Package</title>
      <section xml:id="db-kiwi-bootloader-template-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.bootloader.template.grub2_kiwi-bootloader-template-grub2-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.bootloader.template.grub2"><literal>kiwi.bootloader.template.grub2</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.bootloader.template.grub2.BootLoaderTemplateGrub2">
            <term>
              <literal>kiwi.bootloader.template.grub2.BootLoaderTemplateGrub2</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">grub2 configuraton file templates</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.template.grub2.BootLoaderTemplateGrub2.get_install_template">
                  <term>
                    <property>kiwi.bootloader.template.grub2.BootLoaderTemplateGrub2.get_install_template</property>
                  </term>
                  <listitem>
                    <para>Bootloader configuration template for install media</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>failsafe</literal> () – with failsafe true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>hybrid</literal> () – with hybrid true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>terminal</literal> () – output terminal name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>Template</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.template.grub2.BootLoaderTemplateGrub2.get_iso_template">
                  <term>
                    <property>kiwi.bootloader.template.grub2.BootLoaderTemplateGrub2.get_iso_template</property>
                  </term>
                  <listitem>
                    <para>Bootloader configuration template for live ISO media</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>failsafe</literal> () – with failsafe true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>hybrid</literal> () – with hybrid true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>terminal</literal> () – output terminal name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>Template</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.template.grub2.BootLoaderTemplateGrub2.get_multiboot_install_template">
                  <term>
                    <property>kiwi.bootloader.template.grub2.BootLoaderTemplateGrub2.get_multiboot_install_template</property>
                  </term>
                  <listitem>
                    <para>Bootloader configuration template for install media with
                                hypervisor, e.g Xen dom0</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>failsafe</literal> () – with failsafe true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>terminal</literal> () – output terminal name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>Template</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.template.grub2.BootLoaderTemplateGrub2.get_multiboot_iso_template">
                  <term>
                    <property>kiwi.bootloader.template.grub2.BootLoaderTemplateGrub2.get_multiboot_iso_template</property>
                  </term>
                  <listitem>
                    <para>Bootloader configuration template for live ISO media with
                                hypervisor, e.g Xen dom0</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>failsafe</literal> () – with failsafe true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>terminal</literal> () – output terminal name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>Template</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.bootloader.template.isolinux_kiwi-bootloader-template-isolinux-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.bootloader.template.isolinux"><literal>kiwi.bootloader.template.isolinux</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux">
            <term>
              <literal>kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">isolinux configuraton file templates</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_install_message_template">
                  <term>
                    <property>kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_install_message_template</property>
                  </term>
                  <listitem>
                    <para>Bootloader template for text message file in install mode.
                                isolinux displays this as menu if no graphics mode can be
                                initialized</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>Template</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_install_template">
                  <term>
                    <property>kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_install_template</property>
                  </term>
                  <listitem>
                    <para>Bootloader configuration template for install media</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>failsafe</literal> () – with failsafe true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>with_theme</literal> () – with graphics theme true|false</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>Template</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_message_template">
                  <term>
                    <property>kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_message_template</property>
                  </term>
                  <listitem>
                    <para>Bootloader template for text message file. isolinux
                                displays this as menu if no graphics mode can be initialized</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>Template</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_multiboot_install_template">
                  <term>
                    <property>kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_multiboot_install_template</property>
                  </term>
                  <listitem>
                    <para>Bootloader configuration template for install media with
                                hypervisor, e.g Xen dom0</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>failsafe</literal> () – with failsafe true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>with_theme</literal> () – with graphics theme true|false</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>Template</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_multiboot_template">
                  <term>
                    <property>kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_multiboot_template</property>
                  </term>
                  <listitem>
                    <para>Bootloader configuration template for live media with
                                hypervisor, e.g Xen dom0</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>failsafe</literal> () – with failsafe true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>with_theme</literal> () – with graphics theme true|false</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>Template</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_template">
                  <term>
                    <property>kiwi.bootloader.template.isolinux.BootLoaderTemplateIsoLinux.get_template</property>
                  </term>
                  <listitem>
                    <para>Bootloader configuration template for live media</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>failsafe</literal> () – with failsafe true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>with_theme</literal> () – with graphics theme true|false</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>Template</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-bootloader-template-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-boot-package" xml:base="api/kiwi.boot">
      <title>kiwi.boot Package</title>
      <section xml:id="db-kiwi-boot-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-builder-package" xml:base="api/kiwi.builder">
      <title>kiwi.builder Package</title>
      <section xml:id="db-kiwi-builder-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.builder.archive_kiwi-builder-archive-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.builder.archive"><literal>kiwi.builder.archive</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.builder.archive.ArchiveBuilder">
            <term>
              <literal>kiwi.builder.archive.ArchiveBuilder</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Root archive image builder</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – Instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – Custom processing arguments defined as hash keys:
                                            * xz_options: string of XZ compression parameters</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.archive.ArchiveBuilder.create">
                  <term>
                    <property>kiwi.builder.archive.ArchiveBuilder.create</property>
                  </term>
                  <listitem>
                    <para>Create a root archive tarball</para>
                    <para>Build a simple XZ compressed root tarball from the image root tree</para>
                    <para>Image types which triggers this builder are:</para>
                    <itemizedlist>
                      <listitem>
                        <para>image=”tbz”</para>
                      </listitem>
                    </itemizedlist>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>result</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.builder.container_kiwi-builder-container-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.builder.container"><literal>kiwi.builder.container</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.builder.container.ContainerBuilder">
            <term>
              <literal>kiwi.builder.container.ContainerBuilder</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Container image builder</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – Instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – Custom processing arguments defined as hash keys:
                                            * xz_options: string of XZ compression parameters</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.container.ContainerBuilder.create">
                  <term>
                    <property>kiwi.builder.container.ContainerBuilder.create</property>
                  </term>
                  <listitem>
                    <para>Builds a container image which is usually a data archive
                                including container specific metadata.</para>
                    <para>Image types which triggers this builder are:</para>
                    <itemizedlist>
                      <listitem>
                        <para>image=”docker”</para>
                      </listitem>
                      <listitem>
                        <para>image=”oci”</para>
                      </listitem>
                      <listitem>
                        <para>image=”appx”</para>
                      </listitem>
                    </itemizedlist>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>result</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.builder.disk_kiwi-builder-disk-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.builder.disk"><literal>kiwi.builder.disk</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.builder.disk.DiskBuilder">
            <term>
              <literal>kiwi.builder.disk.DiskBuilder</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Disk image builder</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – Instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – Target directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – Root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – Custom processing arguments defined as hash keys:
                                            * signing_keys: list of package signing keys
                                            * xz_options: string of XZ compression parameters</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.disk.DiskBuilder.append_unpartitioned_space">
                  <term>
                    <property>kiwi.builder.disk.DiskBuilder.append_unpartitioned_space</property>
                  </term>
                  <listitem>
                    <para>Extends the raw disk if an unpartitioned area is specified</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.disk.DiskBuilder.create">
                  <term>
                    <property>kiwi.builder.disk.DiskBuilder.create</property>
                  </term>
                  <listitem>
                    <para>Build a bootable disk image and optional installation image
                                The installation image is a bootable hybrid ISO image which
                                embeds the disk image and an image installer</para>
                    <para>Image types which triggers this builder are:</para>
                    <itemizedlist>
                      <listitem>
                        <para>image=”oem”</para>
                      </listitem>
                      <listitem>
                        <para>image=”vmx”</para>
                      </listitem>
                    </itemizedlist>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>result</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.disk.DiskBuilder.create_disk">
                  <term>
                    <property>kiwi.builder.disk.DiskBuilder.create_disk</property>
                  </term>
                  <listitem>
                    <para>Build a bootable raw disk image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><xref linkend="kiwi.exceptions.KiwiInstallMediaError"/> – if install media is required and image type is not oem</para>
                            </listitem>
                            <listitem>
                              <para><xref linkend="kiwi.exceptions.KiwiVolumeManagerSetupError"/> – root overlay at the same time volumes are defined is not supported</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>result</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.disk.DiskBuilder.create_disk_format">
                  <term>
                    <property>kiwi.builder.disk.DiskBuilder.create_disk_format</property>
                  </term>
                  <listitem>
                    <para>Create a bootable disk format from a previously
                                created raw disk image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>result_instance</literal> () – instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>updated result_instance</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.disk.DiskBuilder.create_install_media">
                  <term>
                    <property>kiwi.builder.disk.DiskBuilder.create_install_media</property>
                  </term>
                  <listitem>
                    <para>Build an installation image. The installation image is a
                                bootable hybrid ISO image which embeds the raw disk image
                                and an image installer</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>result_instance</literal> () – instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>updated result_instance with installation media</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.builder.filesystem_kiwi-builder-filesystem-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.builder.filesystem"><literal>kiwi.builder.filesystem</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.builder.filesystem.FileSystemBuilder">
            <term>
              <literal>kiwi.builder.filesystem.FileSystemBuilder</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Filesystem image builder</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – Instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – Custom processing arguments defined as hash keys:
                                            * None</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.filesystem.FileSystemBuilder.create">
                  <term>
                    <property>kiwi.builder.filesystem.FileSystemBuilder.create</property>
                  </term>
                  <listitem>
                    <para>Build a mountable filesystem image</para>
                    <para>Image types which triggers this builder are:</para>
                    <itemizedlist>
                      <listitem>
                        <para>image=”ext2”</para>
                      </listitem>
                      <listitem>
                        <para>image=”ext3”</para>
                      </listitem>
                      <listitem>
                        <para>image=”ext4”</para>
                      </listitem>
                      <listitem>
                        <para>image=”btrfs”</para>
                      </listitem>
                      <listitem>
                        <para>image=”xfs”</para>
                      </listitem>
                    </itemizedlist>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>result</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.builder.install_kiwi-builder-install-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.builder.install"><literal>kiwi.builder.install</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.builder.install.InstallImageBuilder">
            <term>
              <literal>kiwi.builder.install.InstallImageBuilder</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Installation image builder</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – system image root directory</para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>boot_image_task</literal> () – instance of <literal>BootImage</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – Custom processing arguments defined as hash keys:
                                            * xz_options: string of XZ compression parameters</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.install.InstallImageBuilder.create_install_iso">
                  <term>
                    <property>kiwi.builder.install.InstallImageBuilder.create_install_iso</property>
                  </term>
                  <listitem>
                    <para>Create an install ISO from the disk_image as hybrid ISO
                                bootable via legacy BIOS, EFI and as disk from Stick</para>
                    <para>Image types which triggers this builder are:</para>
                    <itemizedlist>
                      <listitem>
                        <para>installiso=”true|false”</para>
                      </listitem>
                      <listitem>
                        <para>installstick=”true|false”</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.install.InstallImageBuilder.create_install_pxe_archive">
                  <term>
                    <property>kiwi.builder.install.InstallImageBuilder.create_install_pxe_archive</property>
                  </term>
                  <listitem>
                    <para>Create an oem install tar archive suitable for installing a
                                disk image via the network using the PXE boot protocol.
                                The archive contains:</para>
                    <itemizedlist>
                      <listitem>
                        <para>The raw system image xz compressed</para>
                      </listitem>
                      <listitem>
                        <para>The raw system image checksum metadata file</para>
                      </listitem>
                      <listitem>
                        <para>The append file template for the boot server</para>
                      </listitem>
                      <listitem>
                        <para>The system image initrd for kexec</para>
                      </listitem>
                      <listitem>
                        <para>The install initrd</para>
                      </listitem>
                      <listitem>
                        <para>The kernel</para>
                      </listitem>
                    </itemizedlist>
                    <para>Image types which triggers this builder are:</para>
                    <itemizedlist>
                      <listitem>
                        <para>installpxe=”true|false”</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.builder.live_kiwi-builder-live-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.builder.live"><literal>kiwi.builder.live</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.builder.live.LiveImageBuilder">
            <term>
              <literal>kiwi.builder.live.LiveImageBuilder</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Live image builder</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – Custom processing arguments</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.live.LiveImageBuilder.create">
                  <term>
                    <property>kiwi.builder.live.LiveImageBuilder.create</property>
                  </term>
                  <listitem>
                    <para>Build a bootable hybrid live ISO image</para>
                    <para>Image types which triggers this builder are:</para>
                    <itemizedlist>
                      <listitem>
                        <para>image=”iso”</para>
                      </listitem>
                    </itemizedlist>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiLiveBootImageError"/> – if no kernel or hipervisor is found
                                            in boot image tree</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>result</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.builder.kis_kiwi-builder-kis-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.builder.kis"><literal>kiwi.builder.kis</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.builder.kis.KisBuilder">
            <term>
              <literal>kiwi.builder.kis.KisBuilder</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Filesystem based image builder.</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – system image root directory</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – Custom processing arguments defined as hash keys:
                                            * signing_keys: list of package signing keys
                                            * xz_options: string of XZ compression parameters</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.kis.KisBuilder.create">
                  <term>
                    <property>kiwi.builder.kis.KisBuilder.create</property>
                  </term>
                  <listitem>
                    <para>Build a component image consisting out of a boot image(initrd)
                                plus its appropriate kernel files and the root filesystem
                                image with a checksum.</para>
                    <para>Image types which triggers this builder are:</para>
                    <itemizedlist>
                      <listitem>
                        <para>image=”kis”</para>
                      </listitem>
                      <listitem>
                        <para>image=”pxe”</para>
                      </listitem>
                    </itemizedlist>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiKisBootImageError"/> – if no kernel or hipervisor is found
                                            in boot image tree</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>result</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>instance of <literal>Result</literal></para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-builder-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.builder.ImageBuilder">
            <term>
              <literal>kiwi.builder.ImageBuilder</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>Image builder factory</para>
              <variablelist>
                <varlistentry xml:id="kiwi.builder.ImageBuilder.new">
                  <term>
                    <property>kiwi.builder.ImageBuilder.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-container-package" xml:base="api/kiwi.container">
      <title>kiwi.container Package</title>
      <section xml:id="db-kiwi-container-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.container.oci_kiwi-container-oci-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.container.oci"><literal>kiwi.container.oci</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.container.oci.ContainerImageOCI">
            <term>
              <literal>kiwi.container.oci.ContainerImageOCI</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>Create oci container from a root directory</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – </para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <para>Custom processing arguments defined as hash keys:</para>
              <para>Example</para>
              <screen language="python">{
    'container_name': 'name',
    'container_tag': '1.0',
    'additional_tags': ['current', 'foobar'],
    'entry_command': ['/bin/bash', '-x'],
    'entry_subcommand': ['ls', '-l'],
    'maintainer': 'tux',
    'user': 'root',
    'workingdir': '/root',
    'expose_ports': ['80', '42'],
    'volumes': ['/var/log', '/tmp'],
    'environment': {'PATH': '/bin'},
    'labels': {'name': 'value'},
    'history': {
        'created_by': 'some explanation here',
        'comment': 'some comment here',
        'author': 'tux'
    }
}</screen>
              <variablelist>
                <varlistentry xml:id="kiwi.container.oci.ContainerImageOCI.create">
                  <term>
                    <property>kiwi.container.oci.ContainerImageOCI.create</property>
                  </term>
                  <listitem>
                    <para>Create compressed oci system container tar archive</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>filename</literal> () – archive file name</para>
                            </listitem>
                            <listitem>
                              <para><literal>base_image</literal> () – archive used as a base image</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-container-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.container.ContainerImage">
            <term>
              <literal>kiwi.container.ContainerImage</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Container Image factory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>name</literal> () – container system name</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – custom arguments</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.container.ContainerImage.new">
                  <term>
                    <property>kiwi.container.ContainerImage.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-container-setup-package" xml:base="api/kiwi.container.setup">
      <title>kiwi.container.setup Package</title>
      <section xml:id="db-kiwi-container-setup-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.container.setup.base_kiwi-container-setup-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.container.setup.base"><literal>kiwi.container.setup.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.container.setup.base.ContainerSetupBase">
            <term>
              <literal>kiwi.container.setup.base.ContainerSetupBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>Base class for setting up the root system to create
                        a container image from for e.g docker. The methods here
                        are generic to linux systems following the FHS standard
                        and modern enough e.g based on systemd</para>
              <para>Attributes</para>
              <itemizedlist>
                <listitem>
                  <variablelist>
                    <varlistentry>
                      <term>
                        <literal>root_dir</literal>
                      </term>
                      <listitem>
                        <para>root directory path name</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
                <listitem>
                  <variablelist>
                    <varlistentry>
                      <term>
                        <literal>custom_args</literal>
                      </term>
                      <listitem>
                        <para>dict of custom arguments</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.container.setup.base.ContainerSetupBase.deactivate_bootloader_setup">
                  <term>
                    <property>kiwi.container.setup.base.ContainerSetupBase.deactivate_bootloader_setup</property>
                  </term>
                  <listitem>
                    <para>Container bootloader setup</para>
                    <para>Tell the system there is no bootloader configuration
                                it needs to care for. A container does not boot</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.container.setup.base.ContainerSetupBase.deactivate_root_filesystem_check">
                  <term>
                    <property>kiwi.container.setup.base.ContainerSetupBase.deactivate_root_filesystem_check</property>
                  </term>
                  <listitem>
                    <para>Container filesystem check setup</para>
                    <para>The root filesystem of a container could be an overlay
                                or a mapped device. In any case it should not be checked
                                for consistency as this is should be done by the container
                                infrastructure</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.container.setup.base.ContainerSetupBase.deactivate_systemd_service">
                  <term>
                    <property>kiwi.container.setup.base.ContainerSetupBase.deactivate_systemd_service</property>
                  </term>
                  <listitem>
                    <para>Container system services setup</para>
                    <para>Init systems among others also controls services which
                                starts at boot time. A container does not really boot.
                                Thus some services needs to be deactivated</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – systemd service name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.container.setup.base.ContainerSetupBase.get_container_name">
                  <term>
                    <property>kiwi.container.setup.base.ContainerSetupBase.get_container_name</property>
                  </term>
                  <listitem>
                    <para>Container name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.container.setup.base.ContainerSetupBase.post_init">
                  <term>
                    <property>kiwi.container.setup.base.ContainerSetupBase.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Implementation in specialized container setup class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.container.setup.base.ContainerSetupBase.setup">
                  <term>
                    <property>kiwi.container.setup.base.ContainerSetupBase.setup</property>
                  </term>
                  <listitem>
                    <para>Setup container metadata</para>
                    <para>Implementation in specialized bootloader class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.container.setup.base.ContainerSetupBase.setup_root_console">
                  <term>
                    <property>kiwi.container.setup.base.ContainerSetupBase.setup_root_console</property>
                  </term>
                  <listitem>
                    <para>Container console setup</para>
                    <para>/dev/console should be allowed to login by root</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.container.setup.base.ContainerSetupBase.setup_static_device_nodes">
                  <term>
                    <property>kiwi.container.setup.base.ContainerSetupBase.setup_static_device_nodes</property>
                  </term>
                  <listitem>
                    <para>Container device node setup</para>
                    <para>Without subsystems like udev running in a container it is
                                required to provide a set of device nodes to let the
                                system in the container function correctly. This is
                                done by syncing the host system nodes to the container.
                                That this will also create device nodes which are not
                                necessarily present in the container later is a know
                                limitation of this method and considered harmless</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.container.setup.docker_kiwi-container-setup-docker-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.container.setup.docker"><literal>kiwi.container.setup.docker</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.container.setup.docker.ContainerSetupDocker">
            <term>
              <literal>kiwi.container.setup.docker.ContainerSetupDocker</literal>
            </term>
            <listitem>
              <para>Bases: <literal>kiwi.container.setup.oci.ContainerSetupOCI</literal></para>
              <para>Docker container setup</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-container-setup-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.container.setup.ContainerSetup">
            <term>
              <literal>kiwi.container.setup.ContainerSetup</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>container setup factory</para>
              <variablelist>
                <varlistentry xml:id="kiwi.container.setup.ContainerSetup.new">
                  <term>
                    <property>kiwi.container.setup.ContainerSetup.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-filesystem-package" xml:base="api/kiwi.filesystem">
      <title>kiwi.filesystem Package</title>
      <section xml:id="db-kiwi-filesystem-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.filesystem.base_kiwi-filesystem-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.base"><literal>kiwi.filesystem.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.base.FileSystemBase">
            <term>
              <literal>kiwi.filesystem.base.FileSystemBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements base class for filesystem interface</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>device_provider</literal> () – Instance of a class based on DeviceProvider
                                            required for filesystems which needs a block device for
                                            creation. In most cases the DeviceProvider is a LoopDevice</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – custom filesystem arguments</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.base.FileSystemBase.create_on_device">
                  <term>
                    <property>kiwi.filesystem.base.FileSystemBase.create_on_device</property>
                  </term>
                  <listitem>
                    <para>Create filesystem on block device</para>
                    <para>Implement in specialized filesystem class for filesystems which
                                requires a block device for creation, e.g ext4.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>label</literal> () – label name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.base.FileSystemBase.create_on_file">
                  <term>
                    <property>kiwi.filesystem.base.FileSystemBase.create_on_file</property>
                  </term>
                  <listitem>
                    <para>Create filesystem from root data tree</para>
                    <para>Implement in specialized filesystem class for filesystems which
                                requires a data tree for creation, e.g squashfs.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>filename</literal> () – result file path name</para>
                            </listitem>
                            <listitem>
                              <para><literal>label</literal> () – label name</para>
                            </listitem>
                            <listitem>
                              <para><literal>exclude</literal> () – list of exclude dirs/files</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.base.FileSystemBase.get_mountpoint">
                  <term>
                    <property>kiwi.filesystem.base.FileSystemBase.get_mountpoint</property>
                  </term>
                  <listitem>
                    <para>Provides mount point directory</para>
                    <para>Effective use of the directory is guaranteed only after sync_data</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>string</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.base.FileSystemBase.post_init">
                  <term>
                    <property>kiwi.filesystem.base.FileSystemBase.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Store dictionary of custom arguments if not empty. This
                                overrides the default custom argument hash</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – </para>
                          <para>custom arguments</para>
                          <screen language="python">{
    'create_options': ['option'],
    'mount_options': ['option'],
    'meta_data': {
        'key': 'value'
    }
}</screen>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.base.FileSystemBase.sync_data">
                  <term>
                    <property>kiwi.filesystem.base.FileSystemBase.sync_data</property>
                  </term>
                  <listitem>
                    <para>Copy root data tree into filesystem</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>exclude</literal> () – list of exclude dirs/files</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.base.FileSystemBase.umount">
                  <term>
                    <property>kiwi.filesystem.base.FileSystemBase.umount</property>
                  </term>
                  <listitem>
                    <para>Umounts the filesystem in case it is mounted, does nothing otherwise</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.btrfs_kiwi-filesystem-btrfs-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.btrfs"><literal>kiwi.filesystem.btrfs</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.btrfs.FileSystemBtrfs">
            <term>
              <literal>kiwi.filesystem.btrfs.FileSystemBtrfs</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.filesystem.base.FileSystemBase"><literal>kiwi.filesystem.base.FileSystemBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of btrfs filesystem</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.btrfs.FileSystemBtrfs.create_on_device">
                  <term>
                    <property>kiwi.filesystem.btrfs.FileSystemBtrfs.create_on_device</property>
                  </term>
                  <listitem>
                    <para>Create btrfs filesystem on block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>label</literal> () – label name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.clicfs_kiwi-filesystem-clicfs-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.clicfs"><literal>kiwi.filesystem.clicfs</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.clicfs.FileSystemClicFs">
            <term>
              <literal>kiwi.filesystem.clicfs.FileSystemClicFs</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.filesystem.base.FileSystemBase"><literal>kiwi.filesystem.base.FileSystemBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of clicfs filesystem</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.clicfs.FileSystemClicFs.create_on_file">
                  <term>
                    <property>kiwi.filesystem.clicfs.FileSystemClicFs.create_on_file</property>
                  </term>
                  <listitem>
                    <para>Create clicfs filesystem from data tree</para>
                    <para>There is no label which could be set for clicfs
                                thus this parameter is not used</para>
                    <para>There is no option to exclude data from clicfs
                                thus this parameter is not used</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>filename</literal> () – result file path name</para>
                            </listitem>
                            <listitem>
                              <para><literal>label</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>exclude</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.clicfs.FileSystemClicFs.post_init">
                  <term>
                    <property>kiwi.filesystem.clicfs.FileSystemClicFs.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Initialize temporary container_dir directory to store
                                clicfs embeded filesystem</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.ext2_kiwi-filesystem-ext2-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.ext2"><literal>kiwi.filesystem.ext2</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.ext2.FileSystemExt2">
            <term>
              <literal>kiwi.filesystem.ext2.FileSystemExt2</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.filesystem.base.FileSystemBase"><literal>kiwi.filesystem.base.FileSystemBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of ext2 filesystem</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.ext2.FileSystemExt2.create_on_device">
                  <term>
                    <property>kiwi.filesystem.ext2.FileSystemExt2.create_on_device</property>
                  </term>
                  <listitem>
                    <para>Create ext2 filesystem on block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>label</literal> () – label name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.ext3_kiwi-filesystem-ext3-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.ext3"><literal>kiwi.filesystem.ext3</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.ext3.FileSystemExt3">
            <term>
              <literal>kiwi.filesystem.ext3.FileSystemExt3</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.filesystem.base.FileSystemBase"><literal>kiwi.filesystem.base.FileSystemBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of ext3 filesystem</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.ext3.FileSystemExt3.create_on_device">
                  <term>
                    <property>kiwi.filesystem.ext3.FileSystemExt3.create_on_device</property>
                  </term>
                  <listitem>
                    <para>Create ext3 filesystem on block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>label</literal> () – label name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.ext4_kiwi-filesystem-ext4-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.ext4"><literal>kiwi.filesystem.ext4</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.ext4.FileSystemExt4">
            <term>
              <literal>kiwi.filesystem.ext4.FileSystemExt4</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.filesystem.base.FileSystemBase"><literal>kiwi.filesystem.base.FileSystemBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of ext4 filesystem</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.ext4.FileSystemExt4.create_on_device">
                  <term>
                    <property>kiwi.filesystem.ext4.FileSystemExt4.create_on_device</property>
                  </term>
                  <listitem>
                    <para>Create ext4 filesystem on block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>label</literal> () – label name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.fat16_kiwi-filesystem-fat16-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.fat16"><literal>kiwi.filesystem.fat16</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.fat16.FileSystemFat16">
            <term>
              <literal>kiwi.filesystem.fat16.FileSystemFat16</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.filesystem.base.FileSystemBase"><literal>kiwi.filesystem.base.FileSystemBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of fat16 filesystem</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.fat16.FileSystemFat16.create_on_device">
                  <term>
                    <property>kiwi.filesystem.fat16.FileSystemFat16.create_on_device</property>
                  </term>
                  <listitem>
                    <para>Create fat16 filesystem on block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>label</literal> () – label name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.fat32_kiwi-filesystem-fat32-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.fat32"><literal>kiwi.filesystem.fat32</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.fat32.FileSystemFat32">
            <term>
              <literal>kiwi.filesystem.fat32.FileSystemFat32</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.filesystem.base.FileSystemBase"><literal>kiwi.filesystem.base.FileSystemBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of fat16 filesystem</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.fat32.FileSystemFat32.create_on_device">
                  <term>
                    <property>kiwi.filesystem.fat32.FileSystemFat32.create_on_device</property>
                  </term>
                  <listitem>
                    <para>Create fat32 filesystem on block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>label</literal> () – label name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.isofs_kiwi-filesystem-isofs-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.isofs"><literal>kiwi.filesystem.isofs</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.isofs.FileSystemIsoFs">
            <term>
              <literal>kiwi.filesystem.isofs.FileSystemIsoFs</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.filesystem.base.FileSystemBase"><literal>kiwi.filesystem.base.FileSystemBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of iso filesystem</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.isofs.FileSystemIsoFs.create_on_file">
                  <term>
                    <property>kiwi.filesystem.isofs.FileSystemIsoFs.create_on_file</property>
                  </term>
                  <listitem>
                    <para>Create iso filesystem from data tree</para>
                    <para>There is no label which could be set for iso filesystem
                                thus this parameter is not used</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>filename</literal> () – result file path name</para>
                            </listitem>
                            <listitem>
                              <para><literal>label</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>exclude</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.setup_kiwi-filesystem-setup-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.setup"><literal>kiwi.filesystem.setup</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.setup.FileSystemSetup">
            <term>
              <literal>kiwi.filesystem.setup.FileSystemSetup</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implement filesystem setup methods</emphasis>
              </para>
              <para>Methods from this class provides information
                        from the root directory required before building a
                        filesystem image</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – Instance of XMLState</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.setup.FileSystemSetup.get_size_mbytes">
                  <term>
                    <property>kiwi.filesystem.setup.FileSystemSetup.get_size_mbytes</property>
                  </term>
                  <listitem>
                    <para>Precalculate the requires size in mbytes to store all data
                                from the root directory in the requested filesystem. Return
                                the configured value if present, if not return the calculated
                                result</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filesystem</literal> () – name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbytes</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.squashfs_kiwi-filesystem-squashfs-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.squashfs"><literal>kiwi.filesystem.squashfs</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.squashfs.FileSystemSquashFs">
            <term>
              <literal>kiwi.filesystem.squashfs.FileSystemSquashFs</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.filesystem.base.FileSystemBase"><literal>kiwi.filesystem.base.FileSystemBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of squashfs filesystem</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.squashfs.FileSystemSquashFs.create_on_file">
                  <term>
                    <property>kiwi.filesystem.squashfs.FileSystemSquashFs.create_on_file</property>
                  </term>
                  <listitem>
                    <para>Create squashfs filesystem from data tree</para>
                    <para>There is no label which could be set for squashfs
                                thus this parameter is not used</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>filename</literal> () – result file path name</para>
                            </listitem>
                            <listitem>
                              <para><literal>label</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>exclude</literal> () – list of exclude dirs/files</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.filesystem.xfs_kiwi-filesystem-xfs-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.filesystem.xfs"><literal>kiwi.filesystem.xfs</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.xfs.FileSystemXfs">
            <term>
              <literal>kiwi.filesystem.xfs.FileSystemXfs</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.filesystem.base.FileSystemBase"><literal>kiwi.filesystem.base.FileSystemBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements creation of xfs filesystem</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.xfs.FileSystemXfs.create_on_device">
                  <term>
                    <property>kiwi.filesystem.xfs.FileSystemXfs.create_on_device</property>
                  </term>
                  <listitem>
                    <para>Create xfs filesystem on block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>label</literal> () – label name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-filesystem-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.filesystem.FileSystem">
            <term>
              <literal>kiwi.filesystem.FileSystem</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">FileSystem factory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>name</literal> () – filesystem name</para>
                      </listitem>
                      <listitem>
                        <para><literal>device_provider</literal> () – Instance of DeviceProvider</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – dict of custom filesystem arguments</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.filesystem.FileSystem.new">
                  <term>
                    <property>kiwi.filesystem.FileSystem.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-iso-tools-package" xml:base="api/kiwi.iso_tools">
      <title>kiwi.iso_tools Package</title>
      <section xml:id="db-kiwi-iso-tools-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.iso_tools.base_kiwi-iso-tools-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.iso_tools.base"><literal>kiwi.iso_tools.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.iso_tools.base.IsoToolsBase">
            <term>
              <literal>kiwi.iso_tools.base.IsoToolsBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Base Class for Parameter API for iso creation tools</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>source_dir</literal> () – data source dir, usually root_dir</para>
                      </listitem>
                      <listitem>
                        <para><literal>boot_path</literal> () – architecture specific boot path on the ISO</para>
                      </listitem>
                      <listitem>
                        <para><literal>iso_parameters</literal> () – list of ISO creation parameters</para>
                      </listitem>
                      <listitem>
                        <para><literal>iso_loaders</literal> () – list of ISO loaders to embed</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.base.IsoToolsBase.add_efi_loader_parameters">
                  <term>
                    <property>kiwi.iso_tools.base.IsoToolsBase.add_efi_loader_parameters</property>
                  </term>
                  <listitem>
                    <para>Add ISO creation parameters to embed the EFI loader</para>
                    <para>Implementation in specialized tool class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.base.IsoToolsBase.create_iso">
                  <term>
                    <property>kiwi.iso_tools.base.IsoToolsBase.create_iso</property>
                  </term>
                  <listitem>
                    <para>Create iso file</para>
                    <para>Implementation in specialized tool class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>filename</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>hidden_files</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.base.IsoToolsBase.get_tool_name">
                  <term>
                    <property>kiwi.iso_tools.base.IsoToolsBase.get_tool_name</property>
                  </term>
                  <listitem>
                    <para>Return caller name for iso creation tool</para>
                    <para>Implementation in specialized tool class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>tool name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.base.IsoToolsBase.has_iso_hybrid_capability">
                  <term>
                    <property>kiwi.iso_tools.base.IsoToolsBase.has_iso_hybrid_capability</property>
                  </term>
                  <listitem>
                    <para>Indicate if the iso tool has the capability to embed
                                a partition table into the iso such that it can be
                                used as both; an iso and a disk</para>
                    <para>Implementation in specialized tool class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.base.IsoToolsBase.init_iso_creation_parameters">
                  <term>
                    <property>kiwi.iso_tools.base.IsoToolsBase.init_iso_creation_parameters</property>
                  </term>
                  <listitem>
                    <para>Create a set of standard parameters for the main isolinux loader</para>
                    <para>Implementation in specialized tool class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.base.IsoToolsBase.list_iso">
                  <term>
                    <property>kiwi.iso_tools.base.IsoToolsBase.list_iso</property>
                  </term>
                  <listitem>
                    <para>List contents of an ISO image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>isofile</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.base.IsoToolsBase.setup_media_loader_directory">
                  <term>
                    <property>kiwi.iso_tools.base.IsoToolsBase.setup_media_loader_directory</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.iso_tools.cdrtools_kiwi-iso-tools-cdrtools-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.iso_tools.cdrtools"><literal>kiwi.iso_tools.cdrtools</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.iso_tools.cdrtools.IsoToolsCdrTools">
            <term>
              <literal>kiwi.iso_tools.cdrtools.IsoToolsCdrTools</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.iso_tools.base.IsoToolsBase"><literal>kiwi.iso_tools.base.IsoToolsBase</literal></link></para>
              <para>
                <emphasis role="bold">cdrkit/cdrtools wrapper class</emphasis>
              </para>
              <para>Implementation of Parameter API for iso creation tools using
                        the cdrkit/cdrtools projects. Addressed here are the option
                        compatible tools mkisofs and genisoimage</para>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.cdrtools.IsoToolsCdrTools.add_efi_loader_parameters">
                  <term>
                    <property>kiwi.iso_tools.cdrtools.IsoToolsCdrTools.add_efi_loader_parameters</property>
                  </term>
                  <listitem>
                    <para>Add ISO creation parameters to embed the EFI loader</para>
                    <para>In order to boot the ISO from EFI, the EFI binary is added as
                                alternative loader to the ISO creation parameter list. The
                                EFI binary must be included into a fat filesystem in order
                                to become recognized by the firmware. For details about this
                                file refer to _create_embedded_fat_efi_image() from
                                bootloader/config/grub2.py</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.cdrtools.IsoToolsCdrTools.create_iso">
                  <term>
                    <property>kiwi.iso_tools.cdrtools.IsoToolsCdrTools.create_iso</property>
                  </term>
                  <listitem>
                    <para>Creates the iso file with the given filename using cdrtools</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>filename</literal> () – output filename</para>
                            </listitem>
                            <listitem>
                              <para><literal>hidden_files</literal> () – list of hidden files</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.cdrtools.IsoToolsCdrTools.get_tool_name">
                  <term>
                    <property>kiwi.iso_tools.cdrtools.IsoToolsCdrTools.get_tool_name</property>
                  </term>
                  <listitem>
                    <para>There are tools by J.Schilling and tools from the community
                                Depending on what is installed a decision needs to be made.
                                mkisofs is preferred over genisoimage</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiIsoToolError"/> – if no iso creation tool is found</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>tool name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.cdrtools.IsoToolsCdrTools.has_iso_hybrid_capability">
                  <term>
                    <property>kiwi.iso_tools.cdrtools.IsoToolsCdrTools.has_iso_hybrid_capability</property>
                  </term>
                  <listitem>
                    <para>Indicate if the iso tool has the capability to embed a
                                partition table into the iso such that it can be
                                used as both; an iso and a disk</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.cdrtools.IsoToolsCdrTools.init_iso_creation_parameters">
                  <term>
                    <property>kiwi.iso_tools.cdrtools.IsoToolsCdrTools.init_iso_creation_parameters</property>
                  </term>
                  <listitem>
                    <para>Create a set of standard parameters</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom ISO creation args</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.cdrtools.IsoToolsCdrTools.list_iso">
                  <term>
                    <property>kiwi.iso_tools.cdrtools.IsoToolsCdrTools.list_iso</property>
                  </term>
                  <listitem>
                    <para>List contents of an ISO image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>isofile</literal> () – path to the ISO file</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>formatted isoinfo result</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.iso_tools.iso_kiwi-iso-tools-iso-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.iso_tools.iso"><literal>kiwi.iso_tools.iso</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.iso_tools.iso.Iso">
            <term>
              <literal>kiwi.iso_tools.iso.Iso</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements helper methods around the creation of ISO filesystems</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>header_id</literal> () – static identifier string for self written headers</para>
                      </listitem>
                      <listitem>
                        <para><literal>header_end_name</literal> () – file name to store the header_id to</para>
                      </listitem>
                      <listitem>
                        <para><literal>header_end_file</literal> () – full file path for the header_end_name file</para>
                      </listitem>
                      <listitem>
                        <para><literal>boot_path</literal> () – architecture specific boot path on the ISO</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.iso.Iso.create_header_end_block">
                  <term>
                    <property>kiwi.iso_tools.iso.Iso.create_header_end_block</property>
                  </term>
                  <listitem>
                    <para>Find offset address of file containing the header_id and
                                replace it by a list of 2k blocks in range 0 - offset + 1
                                This is the required preparation to support hybrid ISO
                                images, meaning to let isohybrid work correctly</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>isofile</literal> () – path to the ISO file</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiIsoLoaderError"/> – if the header_id file is not found</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>512 byte blocks offset address</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.iso.Iso.create_header_end_marker">
                  <term>
                    <property>kiwi.iso_tools.iso.Iso.create_header_end_marker</property>
                  </term>
                  <listitem>
                    <para>Prepare iso file to become a hybrid iso image.</para>
                    <para>To do this the offest address of the end of the first iso
                                block is required. To lookup this address a reference(marker)
                                file named ‘header_end’ is created and will show up as last
                                file in the block.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.iso.Iso.create_hybrid">
                  <term>
                    <property>kiwi.iso_tools.iso.Iso.create_hybrid</property>
                  </term>
                  <listitem>
                    <para>Create hybrid ISO</para>
                    <para>A hybrid ISO embeds both, an isolinux signature as well as a
                                disk signature. kiwi always adds an msdos and a GPT table for
                                the disk signatures</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>offset</literal> () – hex offset</para>
                            </listitem>
                            <listitem>
                              <para><literal>mbrid</literal> () – boot record id</para>
                            </listitem>
                            <listitem>
                              <para><literal>isofile</literal> () – path to the ISO file</para>
                            </listitem>
                            <listitem>
                              <para><literal>efi_mode</literal> () – sets the iso to support efi firmware or not</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.iso.Iso.fix_boot_catalog">
                  <term>
                    <property>kiwi.iso_tools.iso.Iso.fix_boot_catalog</property>
                  </term>
                  <listitem>
                    <para>Fixup inconsistencies in boot catalog</para>
                    <para>Make sure all catalog entries are in correct order and provide
                                complete metadata information e.g catalog name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>isofile</literal> () – path to the ISO file</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.iso.Iso.relocate_boot_catalog">
                  <term>
                    <property>kiwi.iso_tools.iso.Iso.relocate_boot_catalog</property>
                  </term>
                  <listitem>
                    <para>Move ISO boot catalog to the standardized place</para>
                    <para>Check location of the boot catalog and move it to the place where
                                all BIOS and firwmare implementations expects it</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>isofile</literal> () – path to the ISO file</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.iso.Iso.set_media_tag">
                  <term>
                    <property>kiwi.iso_tools.iso.Iso.set_media_tag</property>
                  </term>
                  <listitem>
                    <para>Include checksum tag in the ISO so it can be verified with
                                the mediacheck program.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>isofile</literal> () – path to the ISO file</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.iso.Iso.setup_isolinux_boot_path">
                  <term>
                    <property>kiwi.iso_tools.iso.Iso.setup_isolinux_boot_path</property>
                  </term>
                  <listitem>
                    <para>Write the base boot path into the isolinux loader binary</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiIsoLoaderError"/> – if loader/isolinux.bin is not found</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-iso-tools-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.iso_tools.IsoTools">
            <term>
              <literal>kiwi.iso_tools.IsoTools</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">IsoTools factory</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.iso_tools.IsoTools.new">
                  <term>
                    <property>kiwi.iso_tools.IsoTools.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-package-manager-package" xml:base="api/kiwi.package_manager">
      <title>kiwi.package_manager Package</title>
      <section xml:id="db-kiwi-package-manager-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.package_manager.base_kiwi-package-manager-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.package_manager.base"><literal>kiwi.package_manager.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase">
            <term>
              <literal>kiwi.package_manager.base.PackageManagerBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements base class for installation/deletion of
                            packages and collections using a package manager</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>repository</literal> () – instance of <literal>Repository</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>package_requests</literal> () – list of packages to install or delete</para>
                      </listitem>
                      <listitem>
                        <para><literal>collection_requests</literal> () – list of collections to install</para>
                      </listitem>
                      <listitem>
                        <para><literal>product_requests</literal> () – list of products to install</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.clean_leftovers">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.clean_leftovers</property>
                  </term>
                  <listitem>
                    <para>Cleans package manager related data not needed in the
                                resulting image such as custom macros</para>
                    <para>Implementation in specialized package manager class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.cleanup_requests">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.cleanup_requests</property>
                  </term>
                  <listitem>
                    <para>Cleanup request queues</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.database_consistent">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.database_consistent</property>
                  </term>
                  <listitem>
                    <para>OBSOLETE: Will be removed 2019-06-05</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.dump_reload_package_database">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.dump_reload_package_database</property>
                  </term>
                  <listitem>
                    <para>OBSOLETE: Will be removed 2019-06-05</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.has_failed">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.has_failed</property>
                  </term>
                  <listitem>
                    <para>Evaluate given result return code</para>
                    <para>Any returncode != 0 is considered an error unless
                                overwritten in specialized package manager class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>returncode</literal> () – return code number</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>boolean</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.match_package_deleted">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.match_package_deleted</property>
                  </term>
                  <listitem>
                    <para>Match expression to indicate a package has been deleted</para>
                    <para>Implementation in specialized package manager class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>package_list</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>log_line</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.match_package_installed">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.match_package_installed</property>
                  </term>
                  <listitem>
                    <para>Match expression to indicate a package has been installed</para>
                    <para>Implementation in specialized package manager class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>package_list</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>log_line</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.post_init">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Implementation in specialized package manager class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.post_process_install_requests_bootstrap">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.post_process_install_requests_bootstrap</property>
                  </term>
                  <listitem>
                    <para>Process extra code required after bootstrapping</para>
                    <para>Implementation in specialized package manager class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.process_delete_requests">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.process_delete_requests</property>
                  </term>
                  <listitem>
                    <para>Process package delete requests (chroot)</para>
                    <para>Implementation in specialized package manager class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>force</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.process_install_requests">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.process_install_requests</property>
                  </term>
                  <listitem>
                    <para>Process package install requests for image phase (chroot)</para>
                    <para>Implementation in specialized package manager class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.process_install_requests_bootstrap">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.process_install_requests_bootstrap</property>
                  </term>
                  <listitem>
                    <para>Process package install requests for bootstrap phase (no chroot)</para>
                    <para>Implementation in specialized package manager class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.process_only_required">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.process_only_required</property>
                  </term>
                  <listitem>
                    <para>Setup package processing only for required packages</para>
                    <para>Implementation in specialized package manager class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.process_plus_recommended">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.process_plus_recommended</property>
                  </term>
                  <listitem>
                    <para>Setup package processing to also include recommended dependencies</para>
                    <para>Implementation in specialized package manager class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.request_collection">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.request_collection</property>
                  </term>
                  <listitem>
                    <para>Queue a package collection</para>
                    <para>Implementation in specialized package manager class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.request_package">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.request_package</property>
                  </term>
                  <listitem>
                    <para>Queue a package request</para>
                    <para>Implementation in specialized package manager class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.request_package_exclusion">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.request_package_exclusion</property>
                  </term>
                  <listitem>
                    <para>Queue a package exclusion(skip) request</para>
                    <para>Implementation in specialized package manager class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.request_package_lock">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.request_package_lock</property>
                  </term>
                  <listitem>
                    <para>Queue a package exclusion(skip) request</para>
                    <para>OBSOLETE: Will be removed 2019-06-05</para>
                    <para>Kept for API compatbility Method calls: request_package_exclusion</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.request_product">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.request_product</property>
                  </term>
                  <listitem>
                    <para>Queue a product request</para>
                    <para>Implementation in specialized package manager class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.base.PackageManagerBase.update">
                  <term>
                    <property>kiwi.package_manager.base.PackageManagerBase.update</property>
                  </term>
                  <listitem>
                    <para>Process package update requests (chroot)</para>
                    <para>Implementation in specialized package manager class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.package_manager.dnf_kiwi-package-manager-dnf-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.package_manager.dnf"><literal>kiwi.package_manager.dnf</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf">
            <term>
              <literal>kiwi.package_manager.dnf.PackageManagerDnf</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.package_manager.base.PackageManagerBase"><literal>kiwi.package_manager.base.PackageManagerBase</literal></link></para>
              <para>
                <emphasis role="bold">*Implements base class for installation/deletion of
                            packages and collections using dnf*</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>dnf_args</literal> () – dnf arguments from repository runtime configuration</para>
                      </listitem>
                      <listitem>
                        <para><literal>command_env</literal> () – dnf command environment from repository runtime
                                            configuration</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.clean_leftovers">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.clean_leftovers</property>
                  </term>
                  <listitem>
                    <para>Cleans package manager related data not needed in the
                                resulting image such as custom macros</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.match_package_deleted">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.match_package_deleted</property>
                  </term>
                  <listitem>
                    <para>Match expression to indicate a package has been deleted</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>package_list</literal> () – list of all packages</para>
                            </listitem>
                            <listitem>
                              <para><literal>log_line</literal> () – dnf status line</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>match or None if there isn’t any match</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>match object, </para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.match_package_installed">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.match_package_installed</property>
                  </term>
                  <listitem>
                    <para>Match expression to indicate a package has been installed</para>
                    <para>This match for the package to be installed in the output
                                of the dnf command is not 100% accurate. There might
                                be false positives due to sub package names starting with
                                the same base package name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>package_list</literal> () – list of all packages</para>
                            </listitem>
                            <listitem>
                              <para><literal>log_line</literal> () – dnf status line</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>match or None if there isn’t any match</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>match object, </para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.post_init">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom dnf arguments</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.post_process_install_requests_bootstrap">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.post_process_install_requests_bootstrap</property>
                  </term>
                  <listitem>
                    <para>Move the rpm database to the place as it is expected by the
                                rpm package installed during bootstrap phase</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_bind</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.process_delete_requests">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.process_delete_requests</property>
                  </term>
                  <listitem>
                    <para>Process package delete requests (chroot)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>force</literal> () – force deletion: true|false</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiRequestError"/> – if none of the packages to delete is
                                            installed.</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>process results in command type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>namedtuple</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.process_install_requests">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.process_install_requests</property>
                  </term>
                  <listitem>
                    <para>Process package install requests for image phase (chroot)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>process results in command type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>namedtuple</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.process_install_requests_bootstrap">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.process_install_requests_bootstrap</property>
                  </term>
                  <listitem>
                    <para>Process package install requests for bootstrap phase (no chroot)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_bind</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>process results in command type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>namedtuple</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.process_only_required">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.process_only_required</property>
                  </term>
                  <listitem>
                    <para>Setup package processing only for required packages</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.process_plus_recommended">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.process_plus_recommended</property>
                  </term>
                  <listitem>
                    <para>Setup package processing to also include recommended dependencies.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.request_collection">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.request_collection</property>
                  </term>
                  <listitem>
                    <para>Queue a collection request</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – dnf group name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.request_package">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.request_package</property>
                  </term>
                  <listitem>
                    <para>Queue a package request</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – package name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.request_package_exclusion">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.request_package_exclusion</property>
                  </term>
                  <listitem>
                    <para>Queue a package exclusion(skip) request</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – package name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.request_product">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.request_product</property>
                  </term>
                  <listitem>
                    <para>Queue a product request</para>
                    <para>There is no product definition in the fedora repo data</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.dnf.PackageManagerDnf.update">
                  <term>
                    <property>kiwi.package_manager.dnf.PackageManagerDnf.update</property>
                  </term>
                  <listitem>
                    <para>Process package update requests (chroot)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>process results in command type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>namedtuple</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.package_manager.zypper_kiwi-package-manager-zypper-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.package_manager.zypper"><literal>kiwi.package_manager.zypper</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper">
            <term>
              <literal>kiwi.package_manager.zypper.PackageManagerZypper</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.package_manager.base.PackageManagerBase"><literal>kiwi.package_manager.base.PackageManagerBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements base class for installation/deletion of
                            packages and collections using zypper</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>zypper_args</literal> () – zypper arguments from repository runtime
                                            configuration</para>
                      </listitem>
                      <listitem>
                        <para><literal>command_env</literal> () – zypper command environment from repository
                                            runtime configuration</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.clean_leftovers">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.clean_leftovers</property>
                  </term>
                  <listitem>
                    <para>Cleans package manager related data not needed in the
                                resulting image such as custom macros</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.has_failed">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.has_failed</property>
                  </term>
                  <listitem>
                    <para>Evaluate given result return code</para>
                    <para>In zypper any return code == 0 or &gt;= 100 is considered success.
                                Any return code different from 0 and &lt; 100 is treated as an
                                error we care for. Return codes &gt;= 100 indicates an issue
                                like ‘new kernel needs reboot of the system’ or similar which
                                we don’t care in the scope of image building</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>returncode</literal> () – return code number</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>boolean</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.match_package_deleted">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.match_package_deleted</property>
                  </term>
                  <listitem>
                    <para>Match expression to indicate a package has been deleted</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>package_list</literal> () – list of all packages</para>
                            </listitem>
                            <listitem>
                              <para><literal>log_line</literal> () – zypper status line</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>match or None if there isn’t any match</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>match object, </para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.match_package_installed">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.match_package_installed</property>
                  </term>
                  <listitem>
                    <para>Match expression to indicate a package has been installed</para>
                    <para>This match for the package to be installed in the output
                                of the zypper command is not 100% accurate. There might
                                be false positives due to sub package names starting with
                                the same base package name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>package_list</literal> () – list of all packages</para>
                            </listitem>
                            <listitem>
                              <para><literal>log_line</literal> () – zypper status line</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>match or None if there isn’t any match</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>match object, </para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.post_init">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Store custom zypper arguments</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom zypper arguments</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.post_process_install_requests_bootstrap">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.post_process_install_requests_bootstrap</property>
                  </term>
                  <listitem>
                    <para>Move the rpm database to the place as it is expected by the
                                rpm package installed during bootstrap phase</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_bind</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.process_delete_requests">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.process_delete_requests</property>
                  </term>
                  <listitem>
                    <para>Process package delete requests (chroot)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>force</literal> () – force deletion: true|false</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiRequestError"/> – if none of the packages to delete is
                                            installed</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>process results in command type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>namedtuple</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.process_install_requests">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.process_install_requests</property>
                  </term>
                  <listitem>
                    <para>Process package install requests for image phase (chroot)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>process results in command type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>namedtuple</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.process_install_requests_bootstrap">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.process_install_requests_bootstrap</property>
                  </term>
                  <listitem>
                    <para>Process package install requests for bootstrap phase (no chroot)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>root_bind</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>process results in command type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>namedtuple</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.process_only_required">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.process_only_required</property>
                  </term>
                  <listitem>
                    <para>Setup package processing only for required packages</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.process_plus_recommended">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.process_plus_recommended</property>
                  </term>
                  <listitem>
                    <para>Setup package processing to also include recommended dependencies.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.request_collection">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.request_collection</property>
                  </term>
                  <listitem>
                    <para>Queue a collection request</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – zypper pattern name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.request_package">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.request_package</property>
                  </term>
                  <listitem>
                    <para>Queue a package request</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – package name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.request_package_exclusion">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.request_package_exclusion</property>
                  </term>
                  <listitem>
                    <para>Queue a package exclusion(skip) request</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – package name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.request_product">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.request_product</property>
                  </term>
                  <listitem>
                    <para>Queue a product request</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – zypper product name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.zypper.PackageManagerZypper.update">
                  <term>
                    <property>kiwi.package_manager.zypper.PackageManagerZypper.update</property>
                  </term>
                  <listitem>
                    <para>Process package update requests (chroot)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>process results in command type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>namedtuple</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-package-manager-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.package_manager.PackageManager">
            <term>
              <literal>kiwi.package_manager.PackageManager</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Package manager factory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>repository</literal> () – instance of <literal>Repository</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>package_manager</literal> () – package manager name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – custom package manager arguments list</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>Raises</term>
                  <listitem>
                    <para><xref linkend="kiwi.exceptions.KiwiPackageManagerSetupError"/> – if the requested package manager
                                    type is not supported</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>Returns</term>
                  <listitem>
                    <para>package manager</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>Return type</term>
                  <listitem>
                    <para>PackageManagerBase subclass</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.package_manager.PackageManager.new">
                  <term>
                    <property>kiwi.package_manager.PackageManager.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-partitioner-package" xml:base="api/kiwi.partitioner">
      <title>kiwi.partitioner Package</title>
      <section xml:id="db-kiwi-partitioner-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.partitioner.base_kiwi-partitioner-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.partitioner.base"><literal>kiwi.partitioner.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.partitioner.base.PartitionerBase">
            <term>
              <literal>kiwi.partitioner.base.PartitionerBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Base class for partitioners</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>disk_provider</literal> () – Instance of DeviceProvider</para>
                      </listitem>
                      <listitem>
                        <para><literal>start_sector</literal> () – sector number</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.base.PartitionerBase.create">
                  <term>
                    <property>kiwi.partitioner.base.PartitionerBase.create</property>
                  </term>
                  <listitem>
                    <para>Create partition</para>
                    <para>Implementation in specialized partitioner class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>name</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>mbsize</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>type_name</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>flags</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.base.PartitionerBase.get_id">
                  <term>
                    <property>kiwi.partitioner.base.PartitionerBase.get_id</property>
                  </term>
                  <listitem>
                    <para>Current partition number</para>
                    <para>Zero indicates no partition has been created so far</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>partition number</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.base.PartitionerBase.post_init">
                  <term>
                    <property>kiwi.partitioner.base.PartitionerBase.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Implementation in specialized partitioner class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.base.PartitionerBase.resize_table">
                  <term>
                    <property>kiwi.partitioner.base.PartitionerBase.resize_table</property>
                  </term>
                  <listitem>
                    <para>Resize partition table</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>entries</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.base.PartitionerBase.set_flag">
                  <term>
                    <property>kiwi.partitioner.base.PartitionerBase.set_flag</property>
                  </term>
                  <listitem>
                    <para>Set partition flag</para>
                    <para>Implementation in specialized partitioner class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>partition_id</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>flag_name</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.base.PartitionerBase.set_hybrid_mbr">
                  <term>
                    <property>kiwi.partitioner.base.PartitionerBase.set_hybrid_mbr</property>
                  </term>
                  <listitem>
                    <para>Turn partition table into hybrid table if supported</para>
                    <para>Implementation in specialized partitioner class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.base.PartitionerBase.set_mbr">
                  <term>
                    <property>kiwi.partitioner.base.PartitionerBase.set_mbr</property>
                  </term>
                  <listitem>
                    <para>Turn partition table into MBR (msdos table)</para>
                    <para>Implementation in specialized partitioner class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.partitioner.dasd_kiwi-partitioner-dasd-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.partitioner.dasd"><literal>kiwi.partitioner.dasd</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.partitioner.dasd.PartitionerDasd">
            <term>
              <literal>kiwi.partitioner.dasd.PartitionerDasd</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.partitioner.base.PartitionerBase"><literal>kiwi.partitioner.base.PartitionerBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements DASD partition setup</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.dasd.PartitionerDasd.create">
                  <term>
                    <property>kiwi.partitioner.dasd.PartitionerDasd.create</property>
                  </term>
                  <listitem>
                    <para>Create DASD partition</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>name</literal> () – partition name</para>
                            </listitem>
                            <listitem>
                              <para><literal>mbsize</literal> () – partition size</para>
                            </listitem>
                            <listitem>
                              <para><literal>type_name</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>flags</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.dasd.PartitionerDasd.post_init">
                  <term>
                    <property>kiwi.partitioner.dasd.PartitionerDasd.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Setup fdasd partition type/flag map</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.dasd.PartitionerDasd.resize_table">
                  <term>
                    <property>kiwi.partitioner.dasd.PartitionerDasd.resize_table</property>
                  </term>
                  <listitem>
                    <para>Resize partition table</para>
                    <para>Nothing to be done here for DASD devices</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>entries</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.partitioner.gpt_kiwi-partitioner-gpt-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.partitioner.gpt"><literal>kiwi.partitioner.gpt</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.partitioner.gpt.PartitionerGpt">
            <term>
              <literal>kiwi.partitioner.gpt.PartitionerGpt</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.partitioner.base.PartitionerBase"><literal>kiwi.partitioner.base.PartitionerBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements GPT partition setup</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.gpt.PartitionerGpt.create">
                  <term>
                    <property>kiwi.partitioner.gpt.PartitionerGpt.create</property>
                  </term>
                  <listitem>
                    <para>Create GPT partition</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>name</literal> () – partition name</para>
                            </listitem>
                            <listitem>
                              <para><literal>mbsize</literal> () – partition size</para>
                            </listitem>
                            <listitem>
                              <para><literal>type_name</literal> () – partition type</para>
                            </listitem>
                            <listitem>
                              <para><literal>flags</literal> () – additional flags</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.gpt.PartitionerGpt.post_init">
                  <term>
                    <property>kiwi.partitioner.gpt.PartitionerGpt.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Setup gdisk partition type/flag map</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.gpt.PartitionerGpt.resize_table">
                  <term>
                    <property>kiwi.partitioner.gpt.PartitionerGpt.resize_table</property>
                  </term>
                  <listitem>
                    <para>Resize partition table</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>entries</literal> () – number of default entries</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.gpt.PartitionerGpt.set_flag">
                  <term>
                    <property>kiwi.partitioner.gpt.PartitionerGpt.set_flag</property>
                  </term>
                  <listitem>
                    <para>Set GPT partition flag</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>partition_id</literal> () – partition number</para>
                            </listitem>
                            <listitem>
                              <para><literal>flag_name</literal> () – name from flag map</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.gpt.PartitionerGpt.set_hybrid_mbr">
                  <term>
                    <property>kiwi.partitioner.gpt.PartitionerGpt.set_hybrid_mbr</property>
                  </term>
                  <listitem>
                    <para>Turn partition table into hybrid GPT/MBR table</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.gpt.PartitionerGpt.set_mbr">
                  <term>
                    <property>kiwi.partitioner.gpt.PartitionerGpt.set_mbr</property>
                  </term>
                  <listitem>
                    <para>Turn partition table into MBR (msdos table)</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.partitioner.msdos_kiwi-partitioner-msdos-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.partitioner.msdos"><literal>kiwi.partitioner.msdos</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.partitioner.msdos.PartitionerMsDos">
            <term>
              <literal>kiwi.partitioner.msdos.PartitionerMsDos</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.partitioner.base.PartitionerBase"><literal>kiwi.partitioner.base.PartitionerBase</literal></link></para>
              <para>
                <emphasis role="bold">Implement old style msdos partition setup</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.msdos.PartitionerMsDos.create">
                  <term>
                    <property>kiwi.partitioner.msdos.PartitionerMsDos.create</property>
                  </term>
                  <listitem>
                    <para>Create msdos partition</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>name</literal> () – partition name</para>
                            </listitem>
                            <listitem>
                              <para><literal>mbsize</literal> () – partition size</para>
                            </listitem>
                            <listitem>
                              <para><literal>type_name</literal> () – partition type</para>
                            </listitem>
                            <listitem>
                              <para><literal>flags</literal> () – additional flags</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.msdos.PartitionerMsDos.post_init">
                  <term>
                    <property>kiwi.partitioner.msdos.PartitionerMsDos.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Setup sfdisk partition type/flag map</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.msdos.PartitionerMsDos.resize_table">
                  <term>
                    <property>kiwi.partitioner.msdos.PartitionerMsDos.resize_table</property>
                  </term>
                  <listitem>
                    <para>Resize partition table</para>
                    <para>Nothing to be done here for msdos table</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>entries</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.msdos.PartitionerMsDos.set_flag">
                  <term>
                    <property>kiwi.partitioner.msdos.PartitionerMsDos.set_flag</property>
                  </term>
                  <listitem>
                    <para>Set msdos partition flag</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>partition_id</literal> () – partition number</para>
                            </listitem>
                            <listitem>
                              <para><literal>flag_name</literal> () – name from flag map</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-partitioner-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.partitioner.Partitioner">
            <term>
              <literal>kiwi.partitioner.Partitioner</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Partitioner factory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>table_type</literal> () – Table type name</para>
                      </listitem>
                      <listitem>
                        <para><literal>storage_provider</literal> () – Instance of class based on DeviceProvider</para>
                      </listitem>
                      <listitem>
                        <para><literal>start_sector</literal> () – sector number</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.partitioner.Partitioner.new">
                  <term>
                    <property>kiwi.partitioner.Partitioner.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-repository-package" xml:base="api/kiwi.repository">
      <title>kiwi.repository Package</title>
      <section xml:id="db-kiwi-repository-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.repository.base_kiwi-repository-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.repository.base"><literal>kiwi.repository.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.repository.base.RepositoryBase">
            <term>
              <literal>kiwi.repository.base.RepositoryBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>Implements base class for package manager repository handling</para>
              <para>Attributes</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>root_bind</literal> () – instance of <literal>RootBind</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>shared_location</literal> () – shared directory between image root
                                            and build system root</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.base.RepositoryBase.add_repo">
                  <term>
                    <property>kiwi.repository.base.RepositoryBase.add_repo</property>
                  </term>
                  <listitem>
                    <para>Add repository</para>
                    <para>Implementation in specialized repository class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>name</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>uri</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_type</literal> – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>prio</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>dist</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>components</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>user</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>secret</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>credentials_file</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_gpgcheck</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>pkg_gpgcheck</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>sourcetype</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>use_for_bootstrap</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.base.RepositoryBase.cleanup_unused_repos">
                  <term>
                    <property>kiwi.repository.base.RepositoryBase.cleanup_unused_repos</property>
                  </term>
                  <listitem>
                    <para>Cleanup/Delete unused repositories</para>
                    <para>Only configured repositories according to the image configuration
                                are allowed to be active when building</para>
                    <para>Implementation in specialized repository class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.base.RepositoryBase.delete_all_repos">
                  <term>
                    <property>kiwi.repository.base.RepositoryBase.delete_all_repos</property>
                  </term>
                  <listitem>
                    <para>Delete all repositories</para>
                    <para>Implementation in specialized repository class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.base.RepositoryBase.delete_repo">
                  <term>
                    <property>kiwi.repository.base.RepositoryBase.delete_repo</property>
                  </term>
                  <listitem>
                    <para>Delete repository</para>
                    <para>Implementation in specialized repository class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.base.RepositoryBase.delete_repo_cache">
                  <term>
                    <property>kiwi.repository.base.RepositoryBase.delete_repo_cache</property>
                  </term>
                  <listitem>
                    <para>Delete repository cache</para>
                    <para>Implementation in specialized repository class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.base.RepositoryBase.import_trusted_keys">
                  <term>
                    <property>kiwi.repository.base.RepositoryBase.import_trusted_keys</property>
                  </term>
                  <listitem>
                    <para>Imports trusted keys into the image</para>
                    <para>Implementation in specialized repository class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>signing_keys</literal> () – list of the key files to import</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.base.RepositoryBase.post_init">
                  <term>
                    <property>kiwi.repository.base.RepositoryBase.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Implementation in specialized repository class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.base.RepositoryBase.runtime_config">
                  <term>
                    <property>kiwi.repository.base.RepositoryBase.runtime_config</property>
                  </term>
                  <listitem>
                    <para>Repository runtime configuration and environment</para>
                    <para>Implementation in specialized repository class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.base.RepositoryBase.setup_package_database_configuration">
                  <term>
                    <property>kiwi.repository.base.RepositoryBase.setup_package_database_configuration</property>
                  </term>
                  <listitem>
                    <para>Setup package database configuration</para>
                    <para>Implementation in specialized repository class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.base.RepositoryBase.use_default_location">
                  <term>
                    <property>kiwi.repository.base.RepositoryBase.use_default_location</property>
                  </term>
                  <listitem>
                    <para>Call repository operations with default repository manager setup</para>
                    <para>Implementation in specialized repository class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.repository.dnf_kiwi-repository-dnf-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.repository.dnf"><literal>kiwi.repository.dnf</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf">
            <term>
              <literal>kiwi.repository.dnf.RepositoryDnf</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.repository.base.RepositoryBase"><literal>kiwi.repository.base.RepositoryBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements repository handling for dnf package manager</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>shared_dnf_dir</literal> () – shared directory between image root
                                            and build system root</para>
                      </listitem>
                      <listitem>
                        <para><literal>runtime_dnf_config_file</literal> () – dnf runtime config file name</para>
                      </listitem>
                      <listitem>
                        <para><literal>command_env</literal> () – customized os.environ for dnf</para>
                      </listitem>
                      <listitem>
                        <para><literal>runtime_dnf_config</literal> () – instance of <literal>ConfigParser</literal></para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf.add_repo">
                  <term>
                    <property>kiwi.repository.dnf.RepositoryDnf.add_repo</property>
                  </term>
                  <listitem>
                    <para>Add dnf repository</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>name</literal> () – repository base file name</para>
                            </listitem>
                            <listitem>
                              <para><literal>uri</literal> () – repository URI</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_type</literal> – repostory type name</para>
                            </listitem>
                            <listitem>
                              <para><literal>prio</literal> () – dnf repostory priority</para>
                            </listitem>
                            <listitem>
                              <para><literal>dist</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>components</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>user</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>secret</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>credentials_file</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_gpgcheck</literal> () – enable repository signature validation</para>
                            </listitem>
                            <listitem>
                              <para><literal>pkg_gpgcheck</literal> () – enable package signature validation</para>
                            </listitem>
                            <listitem>
                              <para><literal>sourcetype</literal> () – source type, one of ‘baseurl’, ‘metalink’ or ‘mirrorlist’</para>
                            </listitem>
                            <listitem>
                              <para><literal>use_for_bootstrap</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf.cleanup_unused_repos">
                  <term>
                    <property>kiwi.repository.dnf.RepositoryDnf.cleanup_unused_repos</property>
                  </term>
                  <listitem>
                    <para>Delete unused dnf repositories</para>
                    <para>Repository configurations which are not used for this build
                                must be removed otherwise they are taken into account for
                                the package installations</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf.delete_all_repos">
                  <term>
                    <property>kiwi.repository.dnf.RepositoryDnf.delete_all_repos</property>
                  </term>
                  <listitem>
                    <para>Delete all dnf repositories</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf.delete_repo">
                  <term>
                    <property>kiwi.repository.dnf.RepositoryDnf.delete_repo</property>
                  </term>
                  <listitem>
                    <para>Delete dnf repository</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – repository base file name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf.delete_repo_cache">
                  <term>
                    <property>kiwi.repository.dnf.RepositoryDnf.delete_repo_cache</property>
                  </term>
                  <listitem>
                    <para>Delete dnf repository cache</para>
                    <para>The cache data for each repository is stored in a directory
                                and additional files all starting with the repository name.
                                The method glob deletes all files and directories matching
                                the repository name followed by any characters to cleanup
                                the cache information</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – repository name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf.import_trusted_keys">
                  <term>
                    <property>kiwi.repository.dnf.RepositoryDnf.import_trusted_keys</property>
                  </term>
                  <listitem>
                    <para>Imports trusted keys into the image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>signing_keys</literal> () – list of the key files to import</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf.post_init">
                  <term>
                    <property>kiwi.repository.dnf.RepositoryDnf.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Store custom dnf arguments and create runtime configuration
                                and environment</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – dnf arguments</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf.runtime_config">
                  <term>
                    <property>kiwi.repository.dnf.RepositoryDnf.runtime_config</property>
                  </term>
                  <listitem>
                    <para>dnf runtime configuration and environment</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>dnf_args:list, command_env:dict</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf.setup_package_database_configuration">
                  <term>
                    <property>kiwi.repository.dnf.RepositoryDnf.setup_package_database_configuration</property>
                  </term>
                  <listitem>
                    <para>Setup rpm macros for bootstrapping and image building</para>
                    <procedure>
                      <step>
                        <para>Create the rpm image macro which persists during the build</para>
                      </step>
                      <step>
                        <para>Create the rpm bootstrap macro to make sure for bootstrapping
                                        the rpm database location matches the host rpm database setup.
                                        This macro only persists during the bootstrap phase. If the
                                        image was already bootstrapped a compat link is created instead.</para>
                      </step>
                    </procedure>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.dnf.RepositoryDnf.use_default_location">
                  <term>
                    <property>kiwi.repository.dnf.RepositoryDnf.use_default_location</property>
                  </term>
                  <listitem>
                    <para>Setup dnf repository operations to store all data
                                in the default places</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.repository.zypper_kiwi-repository-zypper-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.repository.zypper"><literal>kiwi.repository.zypper</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper">
            <term>
              <literal>kiwi.repository.zypper.RepositoryZypper</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.repository.base.RepositoryBase"><literal>kiwi.repository.base.RepositoryBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements repo handling for zypper package manager</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>shared_zypper_dir</literal> () – shared directory between image root
                                            and build system root</para>
                      </listitem>
                      <listitem>
                        <para><literal>runtime_zypper_config_file</literal> () – zypper runtime config file name</para>
                      </listitem>
                      <listitem>
                        <para><literal>runtime_zypp_config_file</literal> () – libzypp runtime config file name</para>
                      </listitem>
                      <listitem>
                        <para><literal>zypper_args</literal> () – zypper caller args plus additional custom args</para>
                      </listitem>
                      <listitem>
                        <para><literal>command_env</literal> () – customized os.environ for zypper</para>
                      </listitem>
                      <listitem>
                        <para><literal>runtime_zypper_config</literal> () – instance of <literal>ConfigParser</literal></para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper.add_repo">
                  <term>
                    <property>kiwi.repository.zypper.RepositoryZypper.add_repo</property>
                  </term>
                  <listitem>
                    <para>Add zypper repository</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>name</literal> () – repository name</para>
                            </listitem>
                            <listitem>
                              <para><literal>uri</literal> () – repository URI</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_type</literal> – repostory type name</para>
                            </listitem>
                            <listitem>
                              <para><literal>prio</literal> () – zypper repostory priority</para>
                            </listitem>
                            <listitem>
                              <para><literal>dist</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>components</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>user</literal> () – credentials username</para>
                            </listitem>
                            <listitem>
                              <para><literal>secret</literal> () – credentials password</para>
                            </listitem>
                            <listitem>
                              <para><literal>credentials_file</literal> () – zypper credentials file</para>
                            </listitem>
                            <listitem>
                              <para><literal>repo_gpgcheck</literal> () – enable repository signature validation</para>
                            </listitem>
                            <listitem>
                              <para><literal>pkg_gpgcheck</literal> () – enable package signature validation</para>
                            </listitem>
                            <listitem>
                              <para><literal>sourcetype</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>use_for_bootstrap</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper.cleanup_unused_repos">
                  <term>
                    <property>kiwi.repository.zypper.RepositoryZypper.cleanup_unused_repos</property>
                  </term>
                  <listitem>
                    <para>Delete unused zypper repositories</para>
                    <para>zypper creates a system solvable which is unwanted for the
                                purpose of building images. In addition zypper fails with
                                an error message ‘Failed to cache rpm database’ if such a
                                system solvable exists and a new root system is created</para>
                    <para>All other repository configurations which are not used for
                                this build must be removed too, otherwise they are taken into
                                account for the package installations</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper.delete_all_repos">
                  <term>
                    <property>kiwi.repository.zypper.RepositoryZypper.delete_all_repos</property>
                  </term>
                  <listitem>
                    <para>Delete all zypper repositories</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper.delete_repo">
                  <term>
                    <property>kiwi.repository.zypper.RepositoryZypper.delete_repo</property>
                  </term>
                  <listitem>
                    <para>Delete zypper repository</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – repository name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper.delete_repo_cache">
                  <term>
                    <property>kiwi.repository.zypper.RepositoryZypper.delete_repo_cache</property>
                  </term>
                  <listitem>
                    <para>Delete zypper repository cache</para>
                    <para>The cache data for each repository is stored in a list of
                                directories of the same name as the repository name. The method
                                deletes these directories to cleanup the cache information</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – repository name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper.import_trusted_keys">
                  <term>
                    <property>kiwi.repository.zypper.RepositoryZypper.import_trusted_keys</property>
                  </term>
                  <listitem>
                    <para>Imports trusted keys into the image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>signing_keys</literal> () – list of the key files to import</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper.post_init">
                  <term>
                    <property>kiwi.repository.zypper.RepositoryZypper.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Store custom zypper arguments and create runtime configuration
                                and environment</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – zypper arguments</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper.runtime_config">
                  <term>
                    <property>kiwi.repository.zypper.RepositoryZypper.runtime_config</property>
                  </term>
                  <listitem>
                    <para>zypper runtime configuration and environment</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper.setup_package_database_configuration">
                  <term>
                    <property>kiwi.repository.zypper.RepositoryZypper.setup_package_database_configuration</property>
                  </term>
                  <listitem>
                    <para>Setup rpm macros for bootstrapping and image building</para>
                    <procedure>
                      <step>
                        <para>Create the rpm image macro which persists during the build</para>
                      </step>
                      <step>
                        <para>Create the rpm bootstrap macro to make sure for bootstrapping
                                        the rpm database location matches the host rpm database setup.
                                        This macro only persists during the bootstrap phase. If the
                                        image was already bootstrapped a compat link is created instead.</para>
                      </step>
                      <step>
                        <para>Create zypper compat link</para>
                      </step>
                    </procedure>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.zypper.RepositoryZypper.use_default_location">
                  <term>
                    <property>kiwi.repository.zypper.RepositoryZypper.use_default_location</property>
                  </term>
                  <listitem>
                    <para>Setup zypper repository operations to store all data
                                in the default places</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-repository-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.repository.Repository">
            <term>
              <literal>kiwi.repository.Repository</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Repository factory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>root_bind</literal> () – instance of RootBind</para>
                      </listitem>
                      <listitem>
                        <para><literal>package_manager</literal> () – package manager name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – list of custom package manager arguments
                                            to setup the repository</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>Raises</term>
                  <listitem>
                    <para><xref linkend="kiwi.exceptions.KiwiRepositorySetupError"/> – if package_manager is not supported</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.Repository.new">
                  <term>
                    <property>kiwi.repository.Repository.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-repository-template-package" xml:base="api/kiwi.repository.template">
      <title>kiwi.repository.template Package</title>
      <section xml:id="db-kiwi-repository-template-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.repository.template.apt_kiwi-repository-template-apt-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.repository.template.apt"><literal>kiwi.repository.template.apt</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.repository.template.apt.PackageManagerTemplateAptGet">
            <term>
              <literal>kiwi.repository.template.apt.PackageManagerTemplateAptGet</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>apt-get configuration file template</para>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.template.apt.PackageManagerTemplateAptGet.get_host_template">
                  <term>
                    <property>kiwi.repository.template.apt.PackageManagerTemplateAptGet.get_host_template</property>
                  </term>
                  <listitem>
                    <para>apt-get package manager template for apt-get called
                                outside of the image, not chrooted</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.repository.template.apt.PackageManagerTemplateAptGet.get_image_template">
                  <term>
                    <property>kiwi.repository.template.apt.PackageManagerTemplateAptGet.get_image_template</property>
                  </term>
                  <listitem>
                    <para>apt-get package manager template for apt-get called
                                inside of the image, chrooted</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-repository-template-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-solver-repository-package" xml:base="api/kiwi.solver.repository">
      <title>kiwi.solver.repository Package</title>
      <section xml:id="db-kiwi-solver-repository-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.solver.repository.base_kiwi-solver-repository-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.solver.repository.base"><literal>kiwi.solver.repository.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.solver.repository.base.SolverRepositoryBase">
            <term>
              <literal>kiwi.solver.repository.base.SolverRepositoryBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Base class interface for SAT solvable creation.</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>uri</literal> () – Instance of <literal>Uri</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>user</literal> () – User name for uri authentication</para>
                      </listitem>
                      <listitem>
                        <para><literal>secret</literal> () – Secret token for uri authentication</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.solver.repository.base.SolverRepositoryBase.create_repository_solvable">
                  <term>
                    <property>kiwi.solver.repository.base.SolverRepositoryBase.create_repository_solvable</property>
                  </term>
                  <listitem>
                    <para>Create SAT solvable for this repository from previously
                                created intermediate solvables by merge and store the
                                result solvable in the specified target_dir</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_dir</literal> () – path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path to solvable</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.solver.repository.base.SolverRepositoryBase.download_from_repository">
                  <term>
                    <property>kiwi.solver.repository.base.SolverRepositoryBase.download_from_repository</property>
                  </term>
                  <listitem>
                    <para>Download given source file from the repository and store
                                it as target file</para>
                    <para>The repo_source location is used relative to the repository
                                location and will be part of a mime type source like:
                                <literal>file://repo_path/repo_source</literal></para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>repo_source</literal> () – source file in the repo</para>
                            </listitem>
                            <listitem>
                              <para><literal>target</literal> () – file path</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiUriOpenError"/> – if the download fails</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.solver.repository.base.SolverRepositoryBase.is_uptodate">
                  <term>
                    <property>kiwi.solver.repository.base.SolverRepositoryBase.is_uptodate</property>
                  </term>
                  <listitem>
                    <para>Check if repository metadata is up to date</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.solver.repository.base.SolverRepositoryBase.timestamp">
                  <term>
                    <property>kiwi.solver.repository.base.SolverRepositoryBase.timestamp</property>
                  </term>
                  <listitem>
                    <para>Return repository timestamp</para>
                    <para>The retrieval of the repository timestamp depends on the
                                type of the repository and is therefore supposed to be implemented
                                in the specialized Solver Repository classes. If no such
                                implementation exists the method returns the value ‘static’
                                to indicate there is no timestamp information available.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.solver.repository.rpm_md.SolverRepositoryRpmMd">
            <term>
              <literal>kiwi.solver.repository.rpm_md.SolverRepositoryRpmMd</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.solver.repository.base.SolverRepositoryBase"><literal>kiwi.solver.repository.base.SolverRepositoryBase</literal></link></para>
              <para>
                <emphasis role="bold">Class for SAT solvable creation for rpm-md type repositories.</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.solver.repository.rpm_md.SolverRepositoryRpmMd.timestamp">
                  <term>
                    <property>kiwi.solver.repository.rpm_md.SolverRepositoryRpmMd.timestamp</property>
                  </term>
                  <listitem>
                    <para>Get timestamp from the first primary metadata</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>time value as text</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.solver.repository.rpm_dir.SolverRepositoryRpmDir">
            <term>
              <literal>kiwi.solver.repository.rpm_dir.SolverRepositoryRpmDir</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.solver.repository.base.SolverRepositoryBase"><literal>kiwi.solver.repository.base.SolverRepositoryBase</literal></link></para>
              <para>
                <emphasis role="bold">Class for SAT solvable creation for rpm_dir type repositories.</emphasis>
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.solver.repository.suse.SolverRepositorySUSE">
            <term>
              <literal>kiwi.solver.repository.suse.SolverRepositorySUSE</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.solver.repository.base.SolverRepositoryBase"><literal>kiwi.solver.repository.base.SolverRepositoryBase</literal></link></para>
              <para>
                <emphasis role="bold">Class for SAT solvable creation for SUSE type repositories.</emphasis>
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-solver-repository-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.solver.repository.SolverRepository">
            <term>
              <literal>kiwi.solver.repository.SolverRepository</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Repository factory for creation of SAT solvables</emphasis>
              </para>
              <itemizedlist>
                <listitem>
                  <variablelist role="field_list">
                    <varlistentry>
                      <term>param object uri</term>
                      <listitem>
                        <para>Instance of <literal>Uri</literal></para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.solver.repository.SolverRepository.new">
                  <term>
                    <property>kiwi.solver.repository.SolverRepository.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-solver-package" xml:base="api/kiwi.solver">
      <title>kiwi.solver Package</title>
      <section xml:id="db-kiwi-solver-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.solver.sat_kiwi-solver-sat-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.solver.sat"><literal>kiwi.solver.sat</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.solver.sat.Sat">
            <term>
              <literal>kiwi.solver.sat.Sat</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Sat Solver class to run package solver operations</emphasis>
              </para>
              <para>The class uses SUSE’s libsolv sat plugin</para>
              <variablelist>
                <varlistentry xml:id="kiwi.solver.sat.Sat.add_repository">
                  <term>
                    <property>kiwi.solver.sat.Sat.add_repository</property>
                  </term>
                  <listitem>
                    <para>Add a repository solvable to the pool. This basically add the
                                required repository metadata which is needed to run a solver
                                operation later.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>solver_repository</literal> () – Instance of <literal>SolverRepository</literal></para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.solver.sat.Sat.solve">
                  <term>
                    <property>kiwi.solver.sat.Sat.solve</property>
                  </term>
                  <listitem>
                    <para>Solve dependencies for the given job list. The list is allowed
                                to contain element names of the following format:</para>
                    <itemizedlist>
                      <listitem>
                        <para>name
                                        describes a package name</para>
                      </listitem>
                      <listitem>
                        <para>pattern:name
                                        describes a package collection name whose metadata type
                                        is called ‘pattern’ and stored as such in the repository
                                        metadata. Usually SUSE repos uses that</para>
                      </listitem>
                      <listitem>
                        <para>group:name
                                        describes a package collection name whose metadata type
                                        is called ‘group’ and stored as such in the repository
                                        metadata. Usually RHEL/CentOS/Fedora repos uses that</para>
                      </listitem>
                    </itemizedlist>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>job_names</literal> () – list of strings</para>
                            </listitem>
                            <listitem>
                              <para><literal>skip_missing</literal> () – skip job if not found</para>
                            </listitem>
                            <listitem>
                              <para><literal>ignore_recommended</literal> () – do not include recommended packages</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiSatSolverJobProblems"/> – if solver reports solving problems</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>Transaction result information</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-solver-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-storage-package" xml:base="api/kiwi.storage">
      <title>kiwi.storage Package</title>
      <section xml:id="db-kiwi-storage-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.storage.device_provider_kiwi-storage-device-provider-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.device_provider"><literal>kiwi.storage.device_provider</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.device_provider.DeviceProvider">
            <term>
              <literal>kiwi.storage.device_provider.DeviceProvider</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Base class for any class providing storage devices</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.device_provider.DeviceProvider.get_byte_size">
                  <term>
                    <property>kiwi.storage.device_provider.DeviceProvider.get_byte_size</property>
                  </term>
                  <listitem>
                    <para>Size of device in bytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>device</literal> () – node name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>byte value from blockdev</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.device_provider.DeviceProvider.get_device">
                  <term>
                    <property>kiwi.storage.device_provider.DeviceProvider.get_device</property>
                  </term>
                  <listitem>
                    <para>Representation of device nodes</para>
                    <para>Could provide one ore more devices representing the storage
                                Implementation in specialized device provider class</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.device_provider.DeviceProvider.get_uuid">
                  <term>
                    <property>kiwi.storage.device_provider.DeviceProvider.get_uuid</property>
                  </term>
                  <listitem>
                    <para>UUID of device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>device</literal> () – node name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>UUID from blkid</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.device_provider.DeviceProvider.is_loop">
                  <term>
                    <property>kiwi.storage.device_provider.DeviceProvider.is_loop</property>
                  </term>
                  <listitem>
                    <para>Check if device provider is loop based</para>
                    <para>By default this is always False and needs an implementation
                                in the the specialized device provider class</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.disk_kiwi-storage-disk-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.disk"><literal>kiwi.storage.disk</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.disk.Disk">
            <term>
              <literal>kiwi.storage.disk.Disk</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.device_provider.DeviceProvider"><literal>kiwi.storage.device_provider.DeviceProvider</literal></link></para>
              <para>
                <emphasis role="bold">Implements storage disk and partition table setup</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>table_type</literal> () – Partition table type name</para>
                      </listitem>
                      <listitem>
                        <para><literal>storage_provider</literal> () – Instance of class based on DeviceProvider</para>
                      </listitem>
                      <listitem>
                        <para><literal>start_sector</literal> () – sector number</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.activate_boot_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.activate_boot_partition</property>
                  </term>
                  <listitem>
                    <para>Activate boot partition</para>
                    <para>Note: not all Partitioner instances supports this</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_boot_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_boot_partition</property>
                  </term>
                  <listitem>
                    <para>Create boot partition</para>
                    <para>Populates kiwi_BootPart(id)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>mbsize</literal> () – partition size</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_efi_csm_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_efi_csm_partition</property>
                  </term>
                  <listitem>
                    <para>Create EFI bios grub partition</para>
                    <para>Populates kiwi_BiosGrub(id)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>mbsize</literal> () – partition size</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_efi_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_efi_partition</property>
                  </term>
                  <listitem>
                    <para>Create EFI partition</para>
                    <para>Populates kiwi_EfiPart(id)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>mbsize</literal> () – partition size</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_hybrid_mbr">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_hybrid_mbr</property>
                  </term>
                  <listitem>
                    <para>Turn partition table into a hybrid GPT/MBR table</para>
                    <para>Note: only GPT tables supports this</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_mbr">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_mbr</property>
                  </term>
                  <listitem>
                    <para>Turn partition table into MBR (msdos table)</para>
                    <para>Note: only GPT tables supports this</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_prep_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_prep_partition</property>
                  </term>
                  <listitem>
                    <para>Create prep partition</para>
                    <para>Populates kiwi_PrepPart(id)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>mbsize</literal> () – partition size</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_root_lvm_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_root_lvm_partition</property>
                  </term>
                  <listitem>
                    <para>Create root partition for use with LVM</para>
                    <para>Populates kiwi_RootPart(id)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>mbsize</literal> () – partition size</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_root_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_root_partition</property>
                  </term>
                  <listitem>
                    <para>Create root partition</para>
                    <para>Populates kiwi_RootPart(id) and kiwi_BootPart(id) if no extra
                                boot partition is requested</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>mbsize</literal> () – partition size</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_root_raid_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_root_raid_partition</property>
                  </term>
                  <listitem>
                    <para>Create root partition for use with MD Raid</para>
                    <para>Populates kiwi_RootPart(id) and kiwi_RaidPart(id) as well
                                as the default raid device node at boot time which is
                                configured to be kiwi_RaidDev(/dev/mdX)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>mbsize</literal> () – partition size</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_root_readonly_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_root_readonly_partition</property>
                  </term>
                  <listitem>
                    <para>Create root readonly partition for use with overlayfs</para>
                    <para>Populates kiwi_ReadOnlyPart(id), the partition is meant to
                                contain a squashfs readonly filesystem. The partition size
                                should be the size of the squashfs filesystem in order to
                                avoid wasting disk space</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>mbsize</literal> () – partition size</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_spare_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_spare_partition</property>
                  </term>
                  <listitem>
                    <para>Create spare partition for custom use</para>
                    <para>Populates kiwi_SparePart(id)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>mbsize</literal> () – partition size</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.create_swap_partition">
                  <term>
                    <property>kiwi.storage.disk.Disk.create_swap_partition</property>
                  </term>
                  <listitem>
                    <para>Create swap partition</para>
                    <para>Populates kiwi_SwapPart(id)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>mbsize</literal> () – partition size</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.get_device">
                  <term>
                    <property>kiwi.storage.disk.Disk.get_device</property>
                  </term>
                  <listitem>
                    <para>Names of partition devices</para>
                    <para>Note that the mapping requires an explicit map() call</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instances of MappedDevice</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.get_public_partition_id_map">
                  <term>
                    <property>kiwi.storage.disk.Disk.get_public_partition_id_map</property>
                  </term>
                  <listitem>
                    <para>Populated partition name to number map</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.is_loop">
                  <term>
                    <property>kiwi.storage.disk.Disk.is_loop</property>
                  </term>
                  <listitem>
                    <para>Check if storage provider is loop based</para>
                    <para>The information is taken from the storage provider. If
                                the storage provider is loop based the disk is it too</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.map_partitions">
                  <term>
                    <property>kiwi.storage.disk.Disk.map_partitions</property>
                  </term>
                  <listitem>
                    <para>Map/Activate partitions</para>
                    <para>In order to access the partitions through a device node it is
                                required to map them if the storage provider is loop based</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.disk.Disk.wipe">
                  <term>
                    <property>kiwi.storage.disk.Disk.wipe</property>
                  </term>
                  <listitem>
                    <para>Zap (destroy) any GPT and MBR data structures if present
                                For DASD disks create a new VTOC table</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.loop_device_kiwi-storage-loop-device-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.loop_device"><literal>kiwi.storage.loop_device</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.loop_device.LoopDevice">
            <term>
              <literal>kiwi.storage.loop_device.LoopDevice</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.device_provider.DeviceProvider"><literal>kiwi.storage.device_provider.DeviceProvider</literal></link></para>
              <para>
                <emphasis role="bold">Create and manage loop device file for block operations</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>filename</literal> () – loop file name to create</para>
                      </listitem>
                      <listitem>
                        <para><literal>filesize_mbytes</literal> () – size of the loop file</para>
                      </listitem>
                      <listitem>
                        <para><literal>blocksize_bytes</literal> () – blocksize used in loop driver</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.loop_device.LoopDevice.create">
                  <term>
                    <property>kiwi.storage.loop_device.LoopDevice.create</property>
                  </term>
                  <listitem>
                    <para>Setup a loop device of the blocksize given in the constructor
                                The file to loop is created with the size specified in the
                                constructor unless an existing one should not be overwritten</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>overwrite</literal> () – overwrite existing file to loop</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.loop_device.LoopDevice.get_device">
                  <term>
                    <property>kiwi.storage.loop_device.LoopDevice.get_device</property>
                  </term>
                  <listitem>
                    <para>Device node name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>device node name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.loop_device.LoopDevice.is_loop">
                  <term>
                    <property>kiwi.storage.loop_device.LoopDevice.is_loop</property>
                  </term>
                  <listitem>
                    <para>Always True</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.luks_device_kiwi-storage-luks-device-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.luks_device"><literal>kiwi.storage.luks_device</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.luks_device.LuksDevice">
            <term>
              <literal>kiwi.storage.luks_device.LuksDevice</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.device_provider.DeviceProvider"><literal>kiwi.storage.device_provider.DeviceProvider</literal></link></para>
              <para>
                <emphasis role="bold">Implements luks setup on a storage device</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>storage_provider</literal> () – Instance of class based on DeviceProvider</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.luks_device.LuksDevice.create_crypto_luks">
                  <term>
                    <property>kiwi.storage.luks_device.LuksDevice.create_crypto_luks</property>
                  </term>
                  <listitem>
                    <para>Create luks device. Please note the passphrase is readable
                                at creation time of this image. Make sure your host system
                                is secure while this process runs</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>passphrase</literal> () – credentials</para>
                            </listitem>
                            <listitem>
                              <para><literal>os</literal> () – distribution name to match distribution specific
                                                    options for cryptsetup</para>
                            </listitem>
                            <listitem>
                              <para><literal>options</literal> () – further cryptsetup options</para>
                            </listitem>
                            <listitem>
                              <para><literal>keyfile</literal> () – file path name
                                                    file path name which contains an alternative key
                                                    to unlock the luks device</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.luks_device.LuksDevice.create_crypttab">
                  <term>
                    <property>kiwi.storage.luks_device.LuksDevice.create_crypttab</property>
                  </term>
                  <listitem>
                    <para>Create crypttab, setting the UUID of the storage device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – file path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.luks_device.LuksDevice.create_random_keyfile">
                  <term>
                    <property>kiwi.storage.luks_device.LuksDevice.create_random_keyfile</property>
                  </term>
                  <listitem>
                    <para>Create keyfile with random data</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – file path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.luks_device.LuksDevice.get_device">
                  <term>
                    <property>kiwi.storage.luks_device.LuksDevice.get_device</property>
                  </term>
                  <listitem>
                    <para>Instance of MappedDevice providing the luks device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mapped luks device</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>
                            <xref linkend="kiwi.storage.mapped_device.MappedDevice"/>
                          </para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.luks_device.LuksDevice.is_loop">
                  <term>
                    <property>kiwi.storage.luks_device.LuksDevice.is_loop</property>
                  </term>
                  <listitem>
                    <para>Check if storage provider is loop based</para>
                    <para>Return loop status from base storage provider</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.mapped_device_kiwi-storage-mapped-device-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.mapped_device"><literal>kiwi.storage.mapped_device</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.mapped_device.MappedDevice">
            <term>
              <literal>kiwi.storage.mapped_device.MappedDevice</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.device_provider.DeviceProvider"><literal>kiwi.storage.device_provider.DeviceProvider</literal></link></para>
              <para>
                <emphasis role="bold">Hold a reference on a single device</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>device_provider</literal> () – Instance of class based on DeviceProvider</para>
                      </listitem>
                      <listitem>
                        <para><literal>device</literal> () – Device node name</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.mapped_device.MappedDevice.get_device">
                  <term>
                    <property>kiwi.storage.mapped_device.MappedDevice.get_device</property>
                  </term>
                  <listitem>
                    <para>Mapped device node name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>device node name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.mapped_device.MappedDevice.is_loop">
                  <term>
                    <property>kiwi.storage.mapped_device.MappedDevice.is_loop</property>
                  </term>
                  <listitem>
                    <para>Check if storage provider is loop based</para>
                    <para>Return loop status from base storage provider</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.raid_device_kiwi-storage-raid-device-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.raid_device"><literal>kiwi.storage.raid_device</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.raid_device.RaidDevice">
            <term>
              <literal>kiwi.storage.raid_device.RaidDevice</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.device_provider.DeviceProvider"><literal>kiwi.storage.device_provider.DeviceProvider</literal></link></para>
              <para>
                <emphasis role="bold">Implement raid setup on a storage device</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>storage_provider</literal> () – Instance of class based on DeviceProvider</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.raid_device.RaidDevice.create_degraded_raid">
                  <term>
                    <property>kiwi.storage.raid_device.RaidDevice.create_degraded_raid</property>
                  </term>
                  <listitem>
                    <para>Create a raid array in degraded mode with one device missing.
                                This only works in the raid levels 0(striping) and 1(mirroring)</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>raid_level</literal> () – raid level name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.raid_device.RaidDevice.create_raid_config">
                  <term>
                    <property>kiwi.storage.raid_device.RaidDevice.create_raid_config</property>
                  </term>
                  <listitem>
                    <para>Create mdadm config file from mdadm request</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – config file name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.raid_device.RaidDevice.get_device">
                  <term>
                    <property>kiwi.storage.raid_device.RaidDevice.get_device</property>
                  </term>
                  <listitem>
                    <para>Instance of MappedDevice providing the raid device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mapped raid device</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>
                            <xref linkend="kiwi.storage.mapped_device.MappedDevice"/>
                          </para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.raid_device.RaidDevice.is_loop">
                  <term>
                    <property>kiwi.storage.raid_device.RaidDevice.is_loop</property>
                  </term>
                  <listitem>
                    <para>Check if storage provider is loop based</para>
                    <para>Return loop status from base storage provider</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.setup_kiwi-storage-setup-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.setup"><literal>kiwi.storage.setup</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.setup.DiskSetup">
            <term>
              <literal>kiwi.storage.setup.DiskSetup</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements disk setup methods</emphasis>
              </para>
              <para>Methods from this class provides information required
                        before building a disk image</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – Instance of XMLState</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.setup.DiskSetup.boot_partition_size">
                  <term>
                    <property>kiwi.storage.setup.DiskSetup.boot_partition_size</property>
                  </term>
                  <listitem>
                    <para>Size of the boot partition in mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>boot size mbytes</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.setup.DiskSetup.get_boot_label">
                  <term>
                    <property>kiwi.storage.setup.DiskSetup.get_boot_label</property>
                  </term>
                  <listitem>
                    <para>Filesystem Label to use for the boot partition</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>label name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.setup.DiskSetup.get_disksize_mbytes">
                  <term>
                    <property>kiwi.storage.setup.DiskSetup.get_disksize_mbytes</property>
                  </term>
                  <listitem>
                    <para>Precalculate disk size requirements in mbytes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>disk size mbytes</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.setup.DiskSetup.get_efi_label">
                  <term>
                    <property>kiwi.storage.setup.DiskSetup.get_efi_label</property>
                  </term>
                  <listitem>
                    <para>Filesystem Label to use for the EFI partition</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>label name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.setup.DiskSetup.get_root_label">
                  <term>
                    <property>kiwi.storage.setup.DiskSetup.get_root_label</property>
                  </term>
                  <listitem>
                    <para>Filesystem Label to use for the root partition</para>
                    <para>If not specified in the XML configuration the default
                                root label is set to ‘ROOT’</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>label name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.setup.DiskSetup.need_boot_partition">
                  <term>
                    <property>kiwi.storage.setup.DiskSetup.need_boot_partition</property>
                  </term>
                  <listitem>
                    <para>Decide if an extra boot partition is needed. This is done with
                                the bootpartition attribute from the type, however if it is not
                                set it depends on some other type configuration parameters if
                                we need a boot partition or not</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-storage-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-storage-subformat-package" xml:base="api/kiwi.storage.subformat">
      <title>kiwi.storage.subformat Package</title>
      <section xml:id="db-kiwi-storage-subformat-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.storage.subformat.base_kiwi-storage-subformat-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.base"><literal>kiwi.storage.subformat.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.base.DiskFormatBase">
            <term>
              <literal>kiwi.storage.subformat.base.DiskFormatBase</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Base class to create disk formats from a raw disk image</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – Instance of XMLState</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>arch</literal> () – Defaults.get_platform_name</para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – custom format options dictionary</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.base.DiskFormatBase.create_image_format">
                  <term>
                    <property>kiwi.storage.subformat.base.DiskFormatBase.create_image_format</property>
                  </term>
                  <listitem>
                    <para>Create disk format</para>
                    <para>Implementation in specialized disk format class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.base.DiskFormatBase.get_qemu_option_list">
                  <term>
                    <property>kiwi.storage.subformat.base.DiskFormatBase.get_qemu_option_list</property>
                  </term>
                  <listitem>
                    <para>Create list of qemu options from custom_args dict</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – arguments</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>qemu option list</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.base.DiskFormatBase.get_target_file_path_for_format">
                  <term>
                    <property>kiwi.storage.subformat.base.DiskFormatBase.get_target_file_path_for_format</property>
                  </term>
                  <listitem>
                    <para>Create target file path name for specified format</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>format_name</literal> () – disk format name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.base.DiskFormatBase.has_raw_disk">
                  <term>
                    <property>kiwi.storage.subformat.base.DiskFormatBase.has_raw_disk</property>
                  </term>
                  <listitem>
                    <para>Check if the base raw disk image exists</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.base.DiskFormatBase.post_init">
                  <term>
                    <property>kiwi.storage.subformat.base.DiskFormatBase.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Implementation in specialized disk format class if required</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.base.DiskFormatBase.resize_raw_disk">
                  <term>
                    <property>kiwi.storage.subformat.base.DiskFormatBase.resize_raw_disk</property>
                  </term>
                  <listitem>
                    <para>Resize raw disk image to specified size. If the request
                                would actually shrink the disk an exception is raised.
                                If the disk got changed the method returns True, if
                                the new size is the same as the current size nothing
                                gets resized and the method returns False</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>size</literal> () – size in bytes</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.base.DiskFormatBase.store_to_result">
                  <term>
                    <property>kiwi.storage.subformat.base.DiskFormatBase.store_to_result</property>
                  </term>
                  <listitem>
                    <para>Store result file of the format conversion into the
                                provided result instance.</para>
                    <para>By default only the converted image file will be stored
                                as compressed file. Subformats which creates additional
                                metadata files or want to use other result flags needs
                                to overwrite this method</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>result</literal> () – Instance of Result</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.gce_kiwi-storage-subformat-gce-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.gce"><literal>kiwi.storage.subformat.gce</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.gce.DiskFormatGce">
            <term>
              <literal>kiwi.storage.subformat.gce.DiskFormatGce</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.base.DiskFormatBase"><literal>kiwi.storage.subformat.base.DiskFormatBase</literal></link></para>
              <para>
                <emphasis role="bold">Create GCE - Google Compute Engine image format</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.gce.DiskFormatGce.create_image_format">
                  <term>
                    <property>kiwi.storage.subformat.gce.DiskFormatGce.create_image_format</property>
                  </term>
                  <listitem>
                    <para>Create GCE disk format and manifest</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.gce.DiskFormatGce.get_target_file_path_for_format">
                  <term>
                    <property>kiwi.storage.subformat.gce.DiskFormatGce.get_target_file_path_for_format</property>
                  </term>
                  <listitem>
                    <para>Google requires the image name to follow their naming
                                convetion. Therefore it’s required to provide a suitable
                                name by overriding the base class method</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>format_name</literal> () – gce</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>file path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.gce.DiskFormatGce.post_init">
                  <term>
                    <property>kiwi.storage.subformat.gce.DiskFormatGce.post_init</property>
                  </term>
                  <listitem>
                    <para>GCE disk format post initialization method</para>
                    <para>Store disk tag from custom args</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – </para>
                          <para>custom gce argument dictionary</para>
                          <screen language="python">{'--tag': 'billing_code'}</screen>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.gce.DiskFormatGce.store_to_result">
                  <term>
                    <property>kiwi.storage.subformat.gce.DiskFormatGce.store_to_result</property>
                  </term>
                  <listitem>
                    <para>Store result file of the gce format conversion into the
                                provided result instance. In this case compression is unwanted
                                because the gce tarball is already created as a compressed
                                archive</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>result</literal> () – Instance of Result</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.ova_kiwi-storage-subformat-ova-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.ova"><literal>kiwi.storage.subformat.ova</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.ova.DiskFormatOva">
            <term>
              <literal>kiwi.storage.subformat.ova.DiskFormatOva</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.base.DiskFormatBase"><literal>kiwi.storage.subformat.base.DiskFormatBase</literal></link></para>
              <para>
                <emphasis role="bold">Create ova disk format, based on vmdk</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.ova.DiskFormatOva.create_image_format">
                  <term>
                    <property>kiwi.storage.subformat.ova.DiskFormatOva.create_image_format</property>
                  </term>
                  <listitem>
                    <para>Create ova disk format using ovftool from
                                <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.vmware.com/support/developer/ovf"/></para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.ova.DiskFormatOva.post_init">
                  <term>
                    <property>kiwi.storage.subformat.ova.DiskFormatOva.post_init</property>
                  </term>
                  <listitem>
                    <para>vmdk disk format post initialization method</para>
                    <para>Store qemu options as list from custom args dict</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom qemu arguments dictionary</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.ova.DiskFormatOva.store_to_result">
                  <term>
                    <property>kiwi.storage.subformat.ova.DiskFormatOva.store_to_result</property>
                  </term>
                  <listitem>
                    <para>Store the resulting ova file into the provided result instance.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>result</literal> () – Instance of Result</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.qcow2_kiwi-storage-subformat-qcow2-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.qcow2"><literal>kiwi.storage.subformat.qcow2</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.qcow2.DiskFormatQcow2">
            <term>
              <literal>kiwi.storage.subformat.qcow2.DiskFormatQcow2</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.base.DiskFormatBase"><literal>kiwi.storage.subformat.base.DiskFormatBase</literal></link></para>
              <para>
                <emphasis role="bold">Create qcow2 disk format</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.qcow2.DiskFormatQcow2.create_image_format">
                  <term>
                    <property>kiwi.storage.subformat.qcow2.DiskFormatQcow2.create_image_format</property>
                  </term>
                  <listitem>
                    <para>Create qcow2 disk format</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.qcow2.DiskFormatQcow2.post_init">
                  <term>
                    <property>kiwi.storage.subformat.qcow2.DiskFormatQcow2.post_init</property>
                  </term>
                  <listitem>
                    <para>qcow2 disk format post initialization method</para>
                    <para>Store qemu options as list from custom args dict</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom qemu arguments dictionary</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.qcow2.DiskFormatQcow2.store_to_result">
                  <term>
                    <property>kiwi.storage.subformat.qcow2.DiskFormatQcow2.store_to_result</property>
                  </term>
                  <listitem>
                    <para>Store result file of the format conversion into the
                                provided result instance.</para>
                    <para>In case of a qcow2 format we store the result uncompressed
                                Since the format conversion only takes the real bytes into
                                account such that the sparseness of the raw disk will not
                                result in the output format and can be taken one by one</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>result</literal> () – Instance of Result</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.vagrant_base_kiwi-storage-subformat-vagrant-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.vagrant_base"><literal>kiwi.storage.subformat.vagrant_base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase">
            <term>
              <literal>kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.base.DiskFormatBase"><literal>kiwi.storage.subformat.base.DiskFormatBase</literal></link></para>
              <para>Base class for creating vagrant boxes.</para>
              <para>The documentation of the vagrant box format can be found here:
                        <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://www.vagrantup.com/docs/boxes/format.html"/>
                        In a nutshell, a vagrant box is a tar, tar.gz or zip archive of the
                        following:</para>
              <procedure>
                <step>
                  <para><literal>metadata.json</literal>:
                                A json file that contains the name of the provider
                                and arbitrary additional data (that vagrant doesn’t care about).</para>
                </step>
                <step>
                  <para><literal>Vagrantfile</literal>:
                                A Vagrantfile which defines the boxes’ MAC address. It
                                can be also used to define other settings of the box, e.g.
                                the method via which the <literal>/vagrant/</literal> directory is shared.
                                This file is either automatically generated by KIWI or we use a file
                                that has been provided by the user (depends on the setting in
                                <literal>vagrantconfig.embebbed_vagrantfile</literal>)</para>
                </step>
                <step>
                  <para>The actual virtual disk image: this is provider specific and
                                vagrant simply forwards it to your virtual machine provider.</para>
                </step>
              </procedure>
              <para>Required methods/variables that child classes must implement:</para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.vagrant_post_init">
                      <literal>vagrant_post_init()</literal>
                    </link>
                  </para>
                  <para>post initializing method that has to specify the vagrant
                                provider name in <literal>provider</literal> and the box name in
                                <literal>image_format</literal>. Note: new providers also needs to
                                be specified in the schema and the box name needs to be
                                registered to <xref linkend="kiwi.defaults.Defaults.get_disk_format_types"/></para>
                </listitem>
                <listitem>
                  <para>
                    <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.create_box_img">
                      <literal>create_box_img()</literal>
                    </link>
                  </para>
                </listitem>
              </itemizedlist>
              <para>Optional methods:</para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.get_additional_metadata">
                      <literal>get_additional_metadata()</literal>
                    </link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.get_additional_vagrant_config_settings">
                      <literal>get_additional_vagrant_config_settings()</literal>
                    </link>
                  </para>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.create_box_img">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.create_box_img</property>
                  </term>
                  <listitem>
                    <para>Provider specific image creation step: this function creates the actual
                                box image. It must be implemented by a child class.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>temp_image_dir</literal> () – path to a temporary directory inside which the image
                                            should be built</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>A list of files that were created by this function
                                            and that should be included in the vagrant box</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.create_image_format">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.create_image_format</property>
                  </term>
                  <listitem>
                    <para>Create a vagrant box for any provider. This includes:</para>
                    <itemizedlist>
                      <listitem>
                        <para>creation of box metadata.json</para>
                      </listitem>
                      <listitem>
                        <para>creation of box Vagrantfile (either from scratch or by using the user
                                        provided Vagrantfile)</para>
                      </listitem>
                      <listitem>
                        <para>creation of result format tarball from the files created above</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.get_additional_metadata">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.get_additional_metadata</property>
                  </term>
                  <listitem>
                    <para>Provide <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.create_image_format"><literal>create_image_format()</literal></link> with additional metadata
                                that will be included in <literal>metadata.json</literal>.</para>
                    <para>The default implementation returns an empty dictionary.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>A dictionary that is serializable to JSON</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.get_additional_vagrant_config_settings">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.get_additional_vagrant_config_settings</property>
                  </term>
                  <listitem>
                    <para>Supply additional configuration settings for vagrant to be included in
                                the resulting box.</para>
                    <para>This function can be used by child classes to customize the behavior
                                for different providers: the supplied configuration settings get
                                forwarded to <literal>VagrantConfigTemplate.get_template()</literal> as the
                                parameter <literal>custom_settings</literal> and included in the <literal>Vagrantfile</literal>.</para>
                    <para>The default implementation returns nothing.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>additional vagrant settings</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.post_init">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.post_init</property>
                  </term>
                  <listitem>
                    <para>vagrant disk format post initialization method</para>
                    <para>store vagrantconfig information provided via custom_args</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – </para>
                          <para>Contains instance of xml_parse::vagrantconfig</para>
                          <screen language="python">{'vagrantconfig': object}</screen>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.store_to_result">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.store_to_result</property>
                  </term>
                  <listitem>
                    <para>Store result file of the vagrant format conversion into the
                                provided result instance. In this case compression is unwanted
                                because the box is already created as a compressed tarball</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>result</literal> () – Instance of Result</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.vagrant_post_init">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase.vagrant_post_init</property>
                  </term>
                  <listitem>
                    <para>Vagrant provider specific post initialization method</para>
                    <para>Setup vagrant provider and box name. This information must
                                be set by the specialized provider class implementation to
                                make the this base class methods effective</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.vagrant_libvirt_kiwi-storage-subformat-vagrant-libvirt-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.vagrant_libvirt"><literal>kiwi.storage.subformat.vagrant_libvirt</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.vagrant_libvirt.DiskFormatVagrantLibVirt">
            <term>
              <literal>kiwi.storage.subformat.vagrant_libvirt.DiskFormatVagrantLibVirt</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase"><literal>kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase</literal></link></para>
              <para>
                <emphasis role="bold">Create a vagrant box for the libvirt provider</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_libvirt.DiskFormatVagrantLibVirt.create_box_img">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_libvirt.DiskFormatVagrantLibVirt.create_box_img</property>
                  </term>
                  <listitem>
                    <para>Creates the qcow2 disk image box for libvirt vagrant provider</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_libvirt.DiskFormatVagrantLibVirt.get_additional_metadata">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_libvirt.DiskFormatVagrantLibVirt.get_additional_metadata</property>
                  </term>
                  <listitem>
                    <para>Returns a dictionary containing the virtual image format and the size
                                of the image.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_libvirt.DiskFormatVagrantLibVirt.get_additional_vagrant_config_settings">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_libvirt.DiskFormatVagrantLibVirt.get_additional_vagrant_config_settings</property>
                  </term>
                  <listitem>
                    <para>Returns settings for the libvirt provider telling vagrant to use kvm.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_libvirt.DiskFormatVagrantLibVirt.vagrant_post_init">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_libvirt.DiskFormatVagrantLibVirt.vagrant_post_init</property>
                  </term>
                  <listitem>
                    <para>Vagrant provider specific post initialization method</para>
                    <para>Setup vagrant provider and box name. This information must
                                be set by the specialized provider class implementation to
                                make the this base class methods effective</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.vagrant_virtualbox_kiwi-storage-subformat-vagrant-virtualbox-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.vagrant_virtualbox"><literal>kiwi.storage.subformat.vagrant_virtualbox</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.vagrant_virtualbox.DiskFormatVagrantVirtualBox">
            <term>
              <literal>kiwi.storage.subformat.vagrant_virtualbox.DiskFormatVagrantVirtualBox</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase"><literal>kiwi.storage.subformat.vagrant_base.DiskFormatVagrantBase</literal></link></para>
              <para>
                <emphasis role="bold">Create a vagrant box for the virtualbox provider</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_virtualbox.DiskFormatVagrantVirtualBox.create_box_img">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_virtualbox.DiskFormatVagrantVirtualBox.create_box_img</property>
                  </term>
                  <listitem>
                    <para>Create the virtual machine image for the Virtualbox vagrant provider.</para>
                    <para>This function creates the vmdk disk image and the ovf file. The latter
                                is created via the class
                                <xref linkend="kiwi.storage.subformat.template.virtualbox_ovf.VirtualboxOvfTemplate"/>.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_virtualbox.DiskFormatVagrantVirtualBox.get_additional_vagrant_config_settings">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_virtualbox.DiskFormatVagrantVirtualBox.get_additional_vagrant_config_settings</property>
                  </term>
                  <listitem>
                    <para>Configure the default shared folder to use rsync when guest additions
                                are not present inside the box.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vagrant_virtualbox.DiskFormatVagrantVirtualBox.vagrant_post_init">
                  <term>
                    <property>kiwi.storage.subformat.vagrant_virtualbox.DiskFormatVagrantVirtualBox.vagrant_post_init</property>
                  </term>
                  <listitem>
                    <para>Vagrant provider specific post initialization method</para>
                    <para>Setup vagrant provider and box name. This information must
                                be set by the specialized provider class implementation to
                                make the this base class methods effective</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.vdi_kiwi-storage-subformat-vdi-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.vdi"><literal>kiwi.storage.subformat.vdi</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.vdi.DiskFormatVdi">
            <term>
              <literal>kiwi.storage.subformat.vdi.DiskFormatVdi</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.base.DiskFormatBase"><literal>kiwi.storage.subformat.base.DiskFormatBase</literal></link></para>
              <para>
                <emphasis role="bold">Create vdi disk format</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vdi.DiskFormatVdi.create_image_format">
                  <term>
                    <property>kiwi.storage.subformat.vdi.DiskFormatVdi.create_image_format</property>
                  </term>
                  <listitem>
                    <para>Create vdi disk format</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vdi.DiskFormatVdi.post_init">
                  <term>
                    <property>kiwi.storage.subformat.vdi.DiskFormatVdi.post_init</property>
                  </term>
                  <listitem>
                    <para>vdi disk format post initialization method</para>
                    <para>Store qemu options as list from custom args dict</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom qemu arguments dictionary</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.vhd_kiwi-storage-subformat-vhd-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.vhd"><literal>kiwi.storage.subformat.vhd</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.vhd.DiskFormatVhd">
            <term>
              <literal>kiwi.storage.subformat.vhd.DiskFormatVhd</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.base.DiskFormatBase"><literal>kiwi.storage.subformat.base.DiskFormatBase</literal></link></para>
              <para>
                <emphasis role="bold">Create vhd disk format</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vhd.DiskFormatVhd.create_image_format">
                  <term>
                    <property>kiwi.storage.subformat.vhd.DiskFormatVhd.create_image_format</property>
                  </term>
                  <listitem>
                    <para>Create vhd disk format</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vhd.DiskFormatVhd.post_init">
                  <term>
                    <property>kiwi.storage.subformat.vhd.DiskFormatVhd.post_init</property>
                  </term>
                  <listitem>
                    <para>vhd disk format post initialization method</para>
                    <para>Store qemu options as list from custom args dict</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom qemu arguments dictionary</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.vhdfixed_kiwi-storage-subformat-vhdfixed-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.vhdfixed"><literal>kiwi.storage.subformat.vhdfixed</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.vhdfixed.DiskFormatVhdFixed">
            <term>
              <literal>kiwi.storage.subformat.vhdfixed.DiskFormatVhdFixed</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.base.DiskFormatBase"><literal>kiwi.storage.subformat.base.DiskFormatBase</literal></link></para>
              <para>
                <emphasis role="bold">Create vhd image format in fixed subformat</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vhdfixed.DiskFormatVhdFixed.create_image_format">
                  <term>
                    <property>kiwi.storage.subformat.vhdfixed.DiskFormatVhdFixed.create_image_format</property>
                  </term>
                  <listitem>
                    <para>Create vhd fixed disk format</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vhdfixed.DiskFormatVhdFixed.post_init">
                  <term>
                    <property>kiwi.storage.subformat.vhdfixed.DiskFormatVhdFixed.post_init</property>
                  </term>
                  <listitem>
                    <para>vhd disk format post initialization method</para>
                    <para>Store qemu options as list from custom args dict
                                Extract disk tag from custom args</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – </para>
                          <para>custom vhdfixed and qemu argument dictionary</para>
                          <screen language="python">{'--tag': 'billing_code', '--qemu-opt': 'value'}</screen>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vhdfixed.DiskFormatVhdFixed.store_to_result">
                  <term>
                    <property>kiwi.storage.subformat.vhdfixed.DiskFormatVhdFixed.store_to_result</property>
                  </term>
                  <listitem>
                    <para>Store result file of the vhdfixed format conversion into the
                                provided result instance. In this case compressing the result
                                is preferred as vhdfixed is not a compressed or dynamic format.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>result</literal> () – Instance of Result</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.vhdx_kiwi-storage-subformat-vhdx-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.vhdx"><literal>kiwi.storage.subformat.vhdx</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.vhdx.DiskFormatVhdx">
            <term>
              <literal>kiwi.storage.subformat.vhdx.DiskFormatVhdx</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.base.DiskFormatBase"><literal>kiwi.storage.subformat.base.DiskFormatBase</literal></link></para>
              <para>
                <emphasis role="bold">Create vhdx image format in dynamic subformat</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vhdx.DiskFormatVhdx.create_image_format">
                  <term>
                    <property>kiwi.storage.subformat.vhdx.DiskFormatVhdx.create_image_format</property>
                  </term>
                  <listitem>
                    <para>Create vhdx dynamic disk format</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vhdx.DiskFormatVhdx.post_init">
                  <term>
                    <property>kiwi.storage.subformat.vhdx.DiskFormatVhdx.post_init</property>
                  </term>
                  <listitem>
                    <para>vhdx disk format post initialization method</para>
                    <para>Store qemu options as list from custom args dict</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom qemu arguments dictionary</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.vmdk_kiwi-storage-subformat-vmdk-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.vmdk"><literal>kiwi.storage.subformat.vmdk</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.vmdk.DiskFormatVmdk">
            <term>
              <literal>kiwi.storage.subformat.vmdk.DiskFormatVmdk</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.base.DiskFormatBase"><literal>kiwi.storage.subformat.base.DiskFormatBase</literal></link></para>
              <para>Create vmdk disk format</para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vmdk.DiskFormatVmdk.create_image_format">
                  <term>
                    <property>kiwi.storage.subformat.vmdk.DiskFormatVmdk.create_image_format</property>
                  </term>
                  <listitem>
                    <para>Create vmdk disk format and machine settings file</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vmdk.DiskFormatVmdk.post_init">
                  <term>
                    <property>kiwi.storage.subformat.vmdk.DiskFormatVmdk.post_init</property>
                  </term>
                  <listitem>
                    <para>vmdk disk format post initialization method</para>
                    <para>Store qemu options as list from custom args dict</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom qemu arguments dictionary</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.vmdk.DiskFormatVmdk.store_to_result">
                  <term>
                    <property>kiwi.storage.subformat.vmdk.DiskFormatVmdk.store_to_result</property>
                  </term>
                  <listitem>
                    <para>Store result files of the vmdk format conversion into the
                                provided result instance. This includes the vmdk image file
                                and the VMware settings file</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>result</literal> () – Instance of Result</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-storage-subformat-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.DiskFormat">
            <term>
              <literal>kiwi.storage.subformat.DiskFormat</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">DiskFormat factory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>name</literal> () – Format name</para>
                      </listitem>
                      <listitem>
                        <para><literal>xml_state</literal> () – Instance of XMLState</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target directory path name</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.DiskFormat.new">
                  <term>
                    <property>kiwi.storage.subformat.DiskFormat.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
    <section xml:id="kiwi-storage-subformat-template-package" xml:base="api/kiwi.storage.subformat.template">
      <title>kiwi.storage.subformat.template Package</title>
      <section xml:id="db-kiwi-storage-subformat-template-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.storage.subformat.template.vmware_settings_kiwi-storage-subformat-template-vmware-settings-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.template.vmware_settings"><literal>kiwi.storage.subformat.template.vmware_settings</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.template.vmware_settings.VmwareSettingsTemplate">
            <term>
              <literal>kiwi.storage.subformat.template.vmware_settings.VmwareSettingsTemplate</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>VMware machine settings template</para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.template.vmware_settings.VmwareSettingsTemplate.get_template">
                  <term>
                    <property>kiwi.storage.subformat.template.vmware_settings.VmwareSettingsTemplate.get_template</property>
                  </term>
                  <listitem>
                    <para>VMware machine configuration template</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>memory_setup</literal> () – with main memory setup true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>cpu_setup</literal> () – with number of CPU’s setup true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>network_setup</literal> () – with network emulation true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>iso_setup</literal> () – with CD/DVD drive emulation true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>disk_controller</literal> () – add disk controller setup to template</para>
                            </listitem>
                            <listitem>
                              <para><literal>iso_controller</literal> () – add CD/DVD controller setup to template</para>
                            </listitem>
                            <listitem>
                              <para><literal>network_mac</literal> () – add static MAC address setup to template</para>
                            </listitem>
                            <listitem>
                              <para><literal>network_driver</literal> () – add network driver setup to template</para>
                            </listitem>
                            <listitem>
                              <para><literal>network_connection_type</literal> () – add connection type to template</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Template</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.template.vagrant_config_kiwi-storage-subformat-template-vagrant-config-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.template.vagrant_config"><literal>kiwi.storage.subformat.template.vagrant_config</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.template.vagrant_config.VagrantConfigTemplate">
            <term>
              <literal>kiwi.storage.subformat.template.vagrant_config.VagrantConfigTemplate</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Generate a Vagrantfile configuration template</emphasis>
              </para>
              <para>This class creates a simple template for the Vagrantfile that is included
                        inside a vagrant box.</para>
              <para>The included Vagrantfile carries additional information for vagrant: by
                        default that is nothing, but depending on the provider additional
                        information need to be present. These can be passed via the parameter
                        <literal>custom_settings</literal> to the method <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.storage.subformat.template.vagrant_config.VagrantConfigTemplate.get_template"><literal>get_template()</literal></link>.</para>
              <para>Example usage:</para>
              <para>The default without any additional settings will result in this
                        Vagrantfile:</para>
              <screen language="python">&gt;&gt;&gt; vagrant_config = VagrantConfigTemplate()
&gt;&gt;&gt; print(
...     vagrant_config.get_template()
... )
Vagrant.configure("2") do |config|
end</screen>
              <para>If your provider/box requires additional settings, provide them as follows:</para>
              <screen language="python">&gt;&gt;&gt; extra_settings = dedent('''
... config.vm.hostname = "no-dead-beef"
... config.vm.provider :special do |special|
...   special.secret_settings = "please_work"
... end
... ''').strip()
&gt;&gt;&gt; print(
...     vagrant_config.get_template(extra_settings)
... )
Vagrant.configure("2") do |config|
  config.vm.hostname = "no-dead-beef"
  config.vm.provider :special do |special|
    special.secret_settings = "please_work"
  end
end</screen>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.template.vagrant_config.VagrantConfigTemplate.get_template">
                  <term>
                    <property>kiwi.storage.subformat.template.vagrant_config.VagrantConfigTemplate.get_template</property>
                  </term>
                  <listitem>
                    <para>Return a new template with <literal>custom_settings</literal> included and
                                indented appropriately.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_settings</literal> () – String of additional settings that get
                                            pasted into the Vagrantfile template. The string is put at the
                                            correct indentation level for you, but the internal indentation has
                                            to be provided by the caller.</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>A string with <literal>custom_settings</literal> inserted at the
                                            appropriate position. The template has one the variable
                                            <literal>mac_address</literal> that must be substituted.</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.storage.subformat.template.virtualbox_ovf_kiwi-storage-subformat-template-virtualbox-ovf-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.storage.subformat.template.virtualbox_ovf"><literal>kiwi.storage.subformat.template.virtualbox_ovf</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.storage.subformat.template.virtualbox_ovf.VirtualboxOvfTemplate">
            <term>
              <literal>kiwi.storage.subformat.template.virtualbox_ovf.VirtualboxOvfTemplate</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Generate a OVF file template for a vagrant virtualbox box</emphasis>
              </para>
              <para>This class provides a template for virtualbox’ ovf configuration file that
                        is embedded inside the vagrant box. The template itself was extracted from
                        a vagrant box that was build via packer and from a script provided by Neal
                        Gompa.</para>
              <variablelist>
                <varlistentry xml:id="kiwi.storage.subformat.template.virtualbox_ovf.VirtualboxOvfTemplate.get_template">
                  <term>
                    <property>kiwi.storage.subformat.template.virtualbox_ovf.VirtualboxOvfTemplate.get_template</property>
                  </term>
                  <listitem>
                    <para>Return the actual ovf template. The following values must be
                                substituted:
                                - <literal>vm_name</literal>: the name of this VM
                                - <literal>disk_image_capacity</literal>: Size of the virtual disk image in GB
                                - <literal>vm_description</literal>: a description of this VM</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-storage-subformat-template-content">
        <title>Module contents</title>
      </section>
    </section>
    <section xml:id="kiwi-system-package" xml:base="api/kiwi.system">
      <title>kiwi.system Package</title>
      <section xml:id="db-kiwi-system-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.system.identifier_kiwi-system-identifier-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.identifier"><literal>kiwi.system.identifier</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.identifier.SystemIdentifier">
            <term>
              <literal>kiwi.system.identifier.SystemIdentifier</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Create a random ID to identify the system</emphasis>
              </para>
              <para>The information is used to create the mbrid file as an example</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>image_id</literal> () – hex identifier string</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.identifier.SystemIdentifier.calculate_id">
                  <term>
                    <property>kiwi.system.identifier.SystemIdentifier.calculate_id</property>
                  </term>
                  <listitem>
                    <para>Calculate random hex id</para>
                    <para>Using 4 tuples of rand in range from 1..0xfe</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.identifier.SystemIdentifier.get_id">
                  <term>
                    <property>kiwi.system.identifier.SystemIdentifier.get_id</property>
                  </term>
                  <listitem>
                    <para>Current hex identifier</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>hex id</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.identifier.SystemIdentifier.write">
                  <term>
                    <property>kiwi.system.identifier.SystemIdentifier.write</property>
                  </term>
                  <listitem>
                    <para>Write current hex identifier to file</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – file path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.identifier.SystemIdentifier.write_to_disk">
                  <term>
                    <property>kiwi.system.identifier.SystemIdentifier.write_to_disk</property>
                  </term>
                  <listitem>
                    <para>Write current hex identifier to MBR at offset 0x1b8 on disk</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>device_provider</literal> () – Instance based on DeviceProvider</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.kernel_kiwi-system-kernel-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.kernel"><literal>kiwi.system.kernel</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.kernel.Kernel">
            <term>
              <literal>kiwi.system.kernel.Kernel</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implementes kernel lookup and extraction from given root tree</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>kernel_names</literal> () – list of kernel names to search for
                                            functions.sh::suseStripKernel() provides a normalized
                                            file so that we do not have to search for many different
                                            names in this code</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.kernel.Kernel.copy_kernel">
                  <term>
                    <property>kiwi.system.kernel.Kernel.copy_kernel</property>
                  </term>
                  <listitem>
                    <para>Copy kernel to specified target</para>
                    <para>If no file_name is given the target filename is set
                                as kernel-&lt;kernel.version&gt;.kernel</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>target_dir</literal> () – target path name</para>
                            </listitem>
                            <listitem>
                              <para><literal>filename</literal> () – base filename in target</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.kernel.Kernel.copy_xen_hypervisor">
                  <term>
                    <property>kiwi.system.kernel.Kernel.copy_xen_hypervisor</property>
                  </term>
                  <listitem>
                    <para>Copy xen hypervisor to specified target</para>
                    <para>If no file_name is given the target filename is set
                                as hypervisor-&lt;xen.name&gt;</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>target_dir</literal> () – target path name</para>
                            </listitem>
                            <listitem>
                              <para><literal>filename</literal> () – base filename in target</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.kernel.Kernel.get_kernel">
                  <term>
                    <property>kiwi.system.kernel.Kernel.get_kernel</property>
                  </term>
                  <listitem>
                    <para>Lookup kernel files and provide filename and version</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>raise_on_not_found</literal> () – sets the method to raise an exception
                                            if the kernel is not found</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiKernelLookupError"/> – if raise_on_not_found flag is active
                                            and kernel is not found</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>tuple with filename, kernelname and version</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>tuple|None</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.kernel.Kernel.get_xen_hypervisor">
                  <term>
                    <property>kiwi.system.kernel.Kernel.get_xen_hypervisor</property>
                  </term>
                  <listitem>
                    <para>Lookup xen hypervisor and provide filename and hypervisor name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>tuple with filename and hypervisor name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>tuple|None</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.system.kernel.kernel_type">
            <term>
              <literal>kiwi.system.kernel.kernel_type</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <variablelist>
                <varlistentry xml:id="kiwi.system.kernel.kernel_type.filename">
                  <term>
                    <property>kiwi.system.kernel.kernel_type.filename</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 1</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.kernel.kernel_type.name">
                  <term>
                    <property>kiwi.system.kernel.kernel_type.name</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 0</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.kernel.kernel_type.version">
                  <term>
                    <property>kiwi.system.kernel.kernel_type.version</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 2</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.system.kernel.xen_hypervisor_type">
            <term>
              <literal>kiwi.system.kernel.xen_hypervisor_type</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <variablelist>
                <varlistentry xml:id="kiwi.system.kernel.xen_hypervisor_type.filename">
                  <term>
                    <property>kiwi.system.kernel.xen_hypervisor_type.filename</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 0</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.kernel.xen_hypervisor_type.name">
                  <term>
                    <property>kiwi.system.kernel.xen_hypervisor_type.name</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 1</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.prepare_kiwi-system-prepare-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.prepare"><literal>kiwi.system.prepare</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.prepare.SystemPrepare">
            <term>
              <literal>kiwi.system.prepare.SystemPrepare</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>Implements preparation and installation of a new root system</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – Path to new root directory</para>
                      </listitem>
                      <listitem>
                        <para><literal>allow_existing</literal> () – Allow using an existing root_dir</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.prepare.SystemPrepare.clean_package_manager_leftovers">
                  <term>
                    <property>kiwi.system.prepare.SystemPrepare.clean_package_manager_leftovers</property>
                  </term>
                  <listitem>
                    <para>This methods cleans some package manager artifacts created
                                at run time such as macros</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.prepare.SystemPrepare.delete_packages">
                  <term>
                    <property>kiwi.system.prepare.SystemPrepare.delete_packages</property>
                  </term>
                  <listitem>
                    <para>Delete one or more packages using the package manager inside
                                of the new root directory. If the removal is set with <literal>force</literal> flag
                                only listed packages are deleted and any dependency break or leftover
                                is ignored.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>manager</literal> () – instance of a <literal>PackageManager</literal> subclass</para>
                            </listitem>
                            <listitem>
                              <para><literal>packages</literal> () – package list</para>
                            </listitem>
                            <listitem>
                              <para><literal>force</literal> () – force deletion true|false</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiSystemDeletePackagesFailed"/> – if installation process fails</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.prepare.SystemPrepare.install_bootstrap">
                  <term>
                    <property>kiwi.system.prepare.SystemPrepare.install_bootstrap</property>
                  </term>
                  <listitem>
                    <para>Install system software using the package manager
                                from the host, also known as bootstrapping</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>manager</literal> () – instance of a <literal>PackageManager</literal> subclass</para>
                            </listitem>
                            <listitem>
                              <para><literal>plus_packages</literal> () – list of additional packages</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiBootStrapPhaseFailed"/> – if the bootstrapping process fails either installing
                                            packages or including bootstrap archives</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.prepare.SystemPrepare.install_packages">
                  <term>
                    <property>kiwi.system.prepare.SystemPrepare.install_packages</property>
                  </term>
                  <listitem>
                    <para>Install one or more packages using the package manager inside
                                of the new root directory</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>manager</literal> () – instance of a <literal>PackageManager</literal> subclass</para>
                            </listitem>
                            <listitem>
                              <para><literal>packages</literal> () – package list</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiSystemInstallPackagesFailed"/> – if installation process fails</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.prepare.SystemPrepare.install_system">
                  <term>
                    <property>kiwi.system.prepare.SystemPrepare.install_system</property>
                  </term>
                  <listitem>
                    <para>Install system software using the package manager inside
                                of the new root directory. This is done via a chroot operation
                                and requires the desired package manager to became installed
                                via the bootstrap phase</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>manager</literal> () – instance of a <literal>PackageManager</literal> subclass</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiInstallPhaseFailed"/> – if the install process fails either installing
                                            packages or including any archive</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.prepare.SystemPrepare.pinch_system">
                  <term>
                    <property>kiwi.system.prepare.SystemPrepare.pinch_system</property>
                  </term>
                  <listitem>
                    <para>Delete packages marked for deletion in the XML description. If force
                                param is set to False uninstalls packages marked with
                                <literal>type="uninstall"</literal> if any; if force is set to True deletes packages
                                marked with <literal>type="delete"</literal> if any.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>manager</literal> () – instance of <literal>PackageManager</literal> subclass</para>
                            </listitem>
                            <listitem>
                              <para><literal>force</literal> () – Forced deletion True|False</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiPackagesDeletePhaseFailed"/> – if the deletion packages process fails</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.prepare.SystemPrepare.setup_repositories">
                  <term>
                    <property>kiwi.system.prepare.SystemPrepare.setup_repositories</property>
                  </term>
                  <listitem>
                    <para>Set up repositories for software installation and return a
                                package manager for performing software installation tasks</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>clear_cache</literal> () – Flag the clear cache before configure anything</para>
                            </listitem>
                            <listitem>
                              <para><literal>signing_keys</literal> () – Keys imported to the package manager</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>instance of <literal>PackageManager</literal> subclass</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>
                            <xref linkend="kiwi.package_manager.PackageManager"/>
                          </para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.prepare.SystemPrepare.update_system">
                  <term>
                    <property>kiwi.system.prepare.SystemPrepare.update_system</property>
                  </term>
                  <listitem>
                    <para>Install package updates from the used repositories.
                                the process uses the package manager from inside of the
                                new root directory</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>manager</literal> () – instance of a <literal>PackageManager</literal> subclass</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiSystemUpdateFailed"/> – if packages update fails</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.profile_kiwi-system-profile-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.profile"><literal>kiwi.system.profile</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.profile.Profile">
            <term>
              <literal>kiwi.system.profile.Profile</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Create bash readable .profile environment from the XML description</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>xml_state</literal> () – instance of :class`XMLState`</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.profile.Profile.add">
                  <term>
                    <property>kiwi.system.profile.Profile.add</property>
                  </term>
                  <listitem>
                    <para>Add key/value pair to profile dictionary</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>key</literal> () – profile key</para>
                            </listitem>
                            <listitem>
                              <para><literal>value</literal> () – profile value</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.profile.Profile.create">
                  <term>
                    <property>kiwi.system.profile.Profile.create</property>
                  </term>
                  <listitem>
                    <para>Create bash quoted profile</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – file path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.profile.Profile.delete">
                  <term>
                    <property>kiwi.system.profile.Profile.delete</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.profile.Profile.get_settings">
                  <term>
                    <property>kiwi.system.profile.Profile.get_settings</property>
                  </term>
                  <listitem>
                    <para>Return all profile elements that has a value</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.result_kiwi-system-result-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.result"><literal>kiwi.system.result</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.result.Result">
            <term>
              <literal>kiwi.system.result.Result</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Collect image building results</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>result_files</literal> () – dict of result files</para>
                      </listitem>
                      <listitem>
                        <para><literal>class_version</literal> () – <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.system.result.Result"><literal>Result</literal></link> class version</para>
                      </listitem>
                      <listitem>
                        <para><literal>xml_state</literal> () – instance of <literal>XMLState</literal></para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.result.Result.add">
                  <term>
                    <property>kiwi.system.result.Result.add</property>
                  </term>
                  <listitem>
                    <para>Add result tuple to result_files list</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>key</literal> () – name</para>
                            </listitem>
                            <listitem>
                              <para><literal>filename</literal> () – file path name</para>
                            </listitem>
                            <listitem>
                              <para><literal>use_for_bundle</literal> () – use when bundling results true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>compress</literal> () – compress when bundling true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>shasum</literal> () – create shasum when bundling true|false</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.result.Result.dump">
                  <term>
                    <property>kiwi.system.result.Result.dump</property>
                  </term>
                  <listitem>
                    <para>Picke dump this instance to a file</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – file path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiResultError"/> – if pickle fails to dump <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.system.result.Result"><literal>Result</literal></link>
                                            instance</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.result.Result.get_results">
                  <term>
                    <property>kiwi.system.result.Result.get_results</property>
                  </term>
                  <listitem>
                    <para>Current list of result tuples</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.result.Result.load">
                  <term>
                    <property>kiwi.system.result.Result.load</property>
                  </term>
                  <listitem>
                    <para>Load pickle dumped filename into a Result instance</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – file path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiResultError"/> – if filename does not exist or pickle fails
                                            to load filename</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.result.Result.print_results">
                  <term>
                    <property>kiwi.system.result.Result.print_results</property>
                  </term>
                  <listitem>
                    <para>Print results human readable</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.result.Result.verify_image_size">
                  <term>
                    <property>kiwi.system.result.Result.verify_image_size</property>
                  </term>
                  <listitem>
                    <para>Verifies the given image file does not exceed the size limit.
                                Throws an exception if the limit is exceeded. If the size limit
                                is set to None no verification is done.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>size_limit</literal> () – The size limit for filename in bytes.</para>
                            </listitem>
                            <listitem>
                              <para><literal>filename</literal> () – File to verify.</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiResultError"/> – if filename exceeds the size limit</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
        <variablelist>
          <varlistentry xml:id="kiwi.system.result.result_file_type">
            <term>
              <literal>kiwi.system.result.result_file_type</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <variablelist>
                <varlistentry xml:id="kiwi.system.result.result_file_type.compress">
                  <term>
                    <property>kiwi.system.result.result_file_type.compress</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 2</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.result.result_file_type.filename">
                  <term>
                    <property>kiwi.system.result.result_file_type.filename</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 0</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.result.result_file_type.shasum">
                  <term>
                    <property>kiwi.system.result.result_file_type.shasum</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 3</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.result.result_file_type.use_for_bundle">
                  <term>
                    <property>kiwi.system.result.result_file_type.use_for_bundle</property>
                  </term>
                  <listitem>
                    <para>Alias for field number 1</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.root_bind_kiwi-system-root-bind-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.root_bind"><literal>kiwi.system.root_bind</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.root_bind.RootBind">
            <term>
              <literal>kiwi.system.root_bind.RootBind</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements binding/copying of host system paths
                            into the new root directory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>cleanup_files</literal> () – list of files to cleanup, delete</para>
                      </listitem>
                      <listitem>
                        <para><literal>mount_stack</literal> () – list of mounted directories for cleanup</para>
                      </listitem>
                      <listitem>
                        <para><literal>dir_stack</literal> () – list of directories for cleanup</para>
                      </listitem>
                      <listitem>
                        <para><literal>config_files</literal> () – list of initial config files</para>
                      </listitem>
                      <listitem>
                        <para><literal>bind_locations</literal> () – list of kernel filesystems to bind mount</para>
                      </listitem>
                      <listitem>
                        <para><literal>shared_location</literal> () – shared directory between image root and
                                            build system root</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.root_bind.RootBind.cleanup">
                  <term>
                    <property>kiwi.system.root_bind.RootBind.cleanup</property>
                  </term>
                  <listitem>
                    <para>Cleanup mounted locations, directories and intermediate config files</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.root_bind.RootBind.mount_kernel_file_systems">
                  <term>
                    <property>kiwi.system.root_bind.RootBind.mount_kernel_file_systems</property>
                  </term>
                  <listitem>
                    <para>Bind mount kernel filesystems</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiMountKernelFileSystemsError"/> – if some kernel filesystem
                                            fails to mount</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.root_bind.RootBind.mount_shared_directory">
                  <term>
                    <property>kiwi.system.root_bind.RootBind.mount_shared_directory</property>
                  </term>
                  <listitem>
                    <para>Bind mount shared location</para>
                    <para>The shared location is a directory which shares data from
                                the image buildsystem host with the image root system. It
                                is used for the repository setup and the package manager
                                cache to allow chroot operations without being forced to
                                duplicate this data</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>host_dir</literal> () – directory to share between image root and build
                                            system root</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiMountSharedDirectoryError"/> – if mount fails</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.root_bind.RootBind.setup_intermediate_config">
                  <term>
                    <property>kiwi.system.root_bind.RootBind.setup_intermediate_config</property>
                  </term>
                  <listitem>
                    <para>Create intermediate config files</para>
                    <para>Some config files e.g etc/hosts needs to be temporarly copied
                                from the buildsystem host to the image root system in order to
                                allow e.g DNS resolution in the way as it is configured on the
                                buildsystem host. These config files only exists during the image
                                build process and are not part of the final image</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiSetupIntermediateConfigError"/> – if the management of
                                            intermediate configuration files fails</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.root_bind.RootBind.umount_kernel_file_systems">
                  <term>
                    <property>kiwi.system.root_bind.RootBind.umount_kernel_file_systems</property>
                  </term>
                  <listitem>
                    <para>Umount kernel filesystems</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiMountKernelFileSystemsError"/> – if some kernel filesystem
                                            fails to mount</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.root_init_kiwi-system-root-init-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.root_init"><literal>kiwi.system.root_init</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.root_init.RootInit">
            <term>
              <literal>kiwi.system.root_init.RootInit</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implements creation of new root directory for a linux system</emphasis>
              </para>
              <para>Host system independent static default files and device nodes
                        are created to initialize a new base system</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>root_dir</literal> () – root directory path name</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.root_init.RootInit.create">
                  <term>
                    <property>kiwi.system.root_init.RootInit.create</property>
                  </term>
                  <listitem>
                    <para>Create new system root directory</para>
                    <para>The method creates a temporary directory and initializes it
                                for the purpose of building a system image from it. This
                                includes the following setup:</para>
                    <itemizedlist>
                      <listitem>
                        <para>create core system paths</para>
                      </listitem>
                      <listitem>
                        <para>create static core device nodes</para>
                      </listitem>
                    </itemizedlist>
                    <para>On success the contents of the temporary location are
                                synced to the specified root_dir and the temporary location
                                will be deleted. That way we never work on an incomplete
                                initial setup</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiRootInitCreationError"/> – if the init creation fails
                                            at some point</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.root_init.RootInit.delete">
                  <term>
                    <property>kiwi.system.root_init.RootInit.delete</property>
                  </term>
                  <listitem>
                    <para>Force delete root directory and its contents</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.setup_kiwi-system-setup-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.setup"><literal>kiwi.system.setup</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.setup.SystemSetup">
            <term>
              <literal>kiwi.system.setup.SystemSetup</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Implementation of system setup steps supported by kiwi</emphasis>
              </para>
              <para>Kiwi is not responsible for the system configuration, however
                        some setup steps needs to be performed in order to provide
                        a minimal work environment inside of the image according to
                        the desired image type.</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>xml_state</literal> () – instance of <literal>XMLState</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.call_config_script">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.call_config_script</property>
                  </term>
                  <listitem>
                    <para>Call config.sh script chrooted</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.call_disk_script">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.call_disk_script</property>
                  </term>
                  <listitem>
                    <para>Call disk.sh script chrooted</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.call_edit_boot_config_script">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.call_edit_boot_config_script</property>
                  </term>
                  <listitem>
                    <para>Call configured editbootconfig script _NON_ chrooted</para>
                    <para>Pass the boot filesystem name and the partition number of
                                the boot partition as parameters to the call</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>filesystem</literal> () – boot filesystem name</para>
                            </listitem>
                            <listitem>
                              <para><literal>boot_part_id</literal> () – boot partition number</para>
                            </listitem>
                            <listitem>
                              <para><literal>working_directory</literal> () – directory name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.call_edit_boot_install_script">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.call_edit_boot_install_script</property>
                  </term>
                  <listitem>
                    <para>Call configured editbootinstall script _NON_ chrooted</para>
                    <para>Pass the disk file name and the device node of the boot partition
                                as parameters to the call</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>diskname</literal> () – file path name</para>
                            </listitem>
                            <listitem>
                              <para><literal>boot_device_node</literal> () – boot device node name</para>
                            </listitem>
                            <listitem>
                              <para><literal>working_directory</literal> () – directory name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.call_image_script">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.call_image_script</property>
                  </term>
                  <listitem>
                    <para>Call images.sh script chrooted</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.cleanup">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.cleanup</property>
                  </term>
                  <listitem>
                    <para>Delete all traces of a kiwi description which are not
                                required in the later image</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.create_fstab">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.create_fstab</property>
                  </term>
                  <listitem>
                    <para>Create etc/fstab from given Fstab object</para>
                    <para>Custom fstab modifications are possible and handled
                                in the following order:</para>
                    <procedure>
                      <step>
                        <para>Look for an optional fstab.append file which allows
                                        to append custom fstab entries to the final fstab. Once
                                        embedded the fstab.append file will be deleted</para>
                      </step>
                      <step>
                        <para>Look for an optional fstab.patch file which allows
                                        to patch the current contents of the fstab file with
                                        a given patch file. Once patched the fstab.patch file will
                                        be deleted</para>
                      </step>
                      <step>
                        <para>Look for an optional fstab.script file which is called
                                        chrooted for the purpose of updating the fstab file as
                                        appropriate. Note: There is no validation in place that
                                        checks if the script actually handles fstab or any other
                                        file in the image rootfs. Once called the fstab.script
                                        file will be deleted</para>
                      </step>
                    </procedure>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>fstab</literal> () – instance of Fstab</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.create_init_link_from_linuxrc">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.create_init_link_from_linuxrc</property>
                  </term>
                  <listitem>
                    <para>kiwi boot images provides the linuxrc script, however the kernel
                                also expects an init executable to be present. This method creates
                                a hard link to the linuxrc file</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.create_recovery_archive">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.create_recovery_archive</property>
                  </term>
                  <listitem>
                    <para>Create a compressed recovery archive from the root tree
                                for use with kiwi’s recvoery system. The method creates
                                additional data into the image root filesystem which is
                                deleted prior to the creation of a new recovery data set</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.export_modprobe_setup">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.export_modprobe_setup</property>
                  </term>
                  <listitem>
                    <para>Export etc/modprobe.d to given root_dir</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_root_dir</literal> () – path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.export_package_changes">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.export_package_changes</property>
                  </term>
                  <listitem>
                    <para>Export image package changelog for comparision of
                                actual changes of the installed packages</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_dir</literal> () – path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.export_package_list">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.export_package_list</property>
                  </term>
                  <listitem>
                    <para>Export image package list as metadata reference
                                used by the open buildservice</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_dir</literal> () – path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.export_package_verification">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.export_package_verification</property>
                  </term>
                  <listitem>
                    <para>Export package verification result as metadata reference
                                used by the open buildservice</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_dir</literal> () – path name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.import_cdroot_files">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.import_cdroot_files</property>
                  </term>
                  <listitem>
                    <para>Copy cdroot files from the image description to the
                                specified target directory. Supported is a tar
                                archive named config-cdroot.tar[.compression-postfix]</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>target_dir</literal> () – directory to unpack archive to</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.import_description">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.import_description</property>
                  </term>
                  <listitem>
                    <para>Import XML descriptions, custom scripts, archives and
                                script helper methods</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.import_image_identifier">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.import_image_identifier</property>
                  </term>
                  <listitem>
                    <para>Create etc/ImageID identifier file</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.import_overlay_files">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.import_overlay_files</property>
                  </term>
                  <listitem>
                    <para>Copy overlay files from the image description to
                                the image root tree. Supported are a root/ directory
                                or a root.tar.gz tarball. The root/ directory takes
                                precedence over the tarball.</para>
                    <para>In addition the method also supports profile specific
                                overlay files which are searched in a directory of the
                                same name as the profile name.</para>
                    <para>The overall order for including overlay files is as
                                follows:</para>
                    <procedure>
                      <step>
                        <para>root/ dir or root.tar.gz</para>
                      </step>
                      <step>
                        <para>PROFILE_NAME/ dir(s) in the order of the selected
                                        profiles</para>
                      </step>
                    </procedure>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>follow_links</literal> () – follow symlinks true|false</para>
                            </listitem>
                            <listitem>
                              <para><literal>preserve_owner_group</literal> () – preserve permissions true|false</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.import_repositories_marked_as_imageinclude">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.import_repositories_marked_as_imageinclude</property>
                  </term>
                  <listitem>
                    <para>Those &lt;repository&gt; sections which are marked with the
                                imageinclude attribute should be permanently added to
                                the image repository configuration</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.script_exists">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.script_exists</property>
                  </term>
                  <listitem>
                    <para>Check if provided script base name exists in the image description</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – script base name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.set_selinux_file_contexts">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.set_selinux_file_contexts</property>
                  </term>
                  <listitem>
                    <para>Initialize the security context fields (extended attributes)
                                on the files matching the security_context_file</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>security_context_file</literal> () – path file name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.setup_groups">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.setup_groups</property>
                  </term>
                  <listitem>
                    <para>Add groups for configured users</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.setup_keyboard_map">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.setup_keyboard_map</property>
                  </term>
                  <listitem>
                    <para>Setup console keyboard</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.setup_locale">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.setup_locale</property>
                  </term>
                  <listitem>
                    <para>Setup UTF8 system wide locale</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.setup_machine_id">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.setup_machine_id</property>
                  </term>
                  <listitem>
                    <para>Setup systemd machine id</para>
                    <para>Empty out the machine id which was provided by the package
                                installation process. This will instruct the dracut initrd
                                code to create a new machine id. This way a golden image
                                produces unique machine id’s on first deployment and boot
                                of the image.</para>
                    <para>Note: Requires dracut connected image type</para>
                    <para>This method must only be called if the image is of
                                a type which gets booted via a dracut created initrd.
                                Deleting the machine-id without the dracut initrd
                                creating a new one produces an inconsistent system</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.setup_permissions">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.setup_permissions</property>
                  </term>
                  <listitem>
                    <para>Check and Fix permissions using chkstat</para>
                    <para>Call chkstat in system mode which reads /etc/sysconfig/security
                                to determine the configured security level and applies the
                                appropriate permission definitions from the /etc/permissions*
                                files. It’s possible to provide those files as overlay files
                                in the image description to apply a certain permission setup
                                when needed. Otherwise the default setup as provided on the
                                package level applies.</para>
                    <para>It’s required that the image root system has chkstat installed.
                                If not present KIWI skips this step and continuous with a
                                warning.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.setup_plymouth_splash">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.setup_plymouth_splash</property>
                  </term>
                  <listitem>
                    <para>Setup the KIWI configured splash theme as default</para>
                    <para>The method uses the plymouth-set-default-theme tool to setup the
                                theme for the plymouth splash system. Only in case the tool could
                                be found in the image root, it is assumed plymouth splash is in
                                use and the tool is called in a chroot operation</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.setup_timezone">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.setup_timezone</property>
                  </term>
                  <listitem>
                    <para>Setup timezone symlink</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.setup.SystemSetup.setup_users">
                  <term>
                    <property>kiwi.system.setup.SystemSetup.setup_users</property>
                  </term>
                  <listitem>
                    <para>Add/Modify configured users</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.shell_kiwi-system-shell-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.shell"><literal>kiwi.system.shell</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.shell.Shell">
            <term>
              <literal>kiwi.system.shell.Shell</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Special character handling for shell evaluated code</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.system.shell.Shell.format_to_variable_value">
                  <term>
                    <property>kiwi.system.shell.Shell.format_to_variable_value</property>
                  </term>
                  <listitem>
                    <para>Format given variable value to return a string value
                                representation that can be sourced by shell scripts.
                                If the provided value is not representable as a string
                                (list, dict, tuple etc) an exception is raised</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>value</literal> () – a python variable</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiShellVariableValueError"/> – if value is an iterable</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>string value representation</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.shell.Shell.quote">
                  <term>
                    <property>kiwi.system.shell.Shell.quote</property>
                  </term>
                  <listitem>
                    <para>Quote characters which have a special meaning for bash
                                but should be used as normal characters. actually I had
                                planned to use pipes.quote but it does not quote as I
                                had expected it. e.g ‘name_wit_a_$’ does not quote the $
                                so we do it on our own for the scope of kiwi</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>message</literal> () – message text</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>quoted text</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.shell.Shell.quote_key_value_file">
                  <term>
                    <property>kiwi.system.shell.Shell.quote_key_value_file</property>
                  </term>
                  <listitem>
                    <para>Quote given input file which has to be of the form
                                key=value to be able to become sourced by the shell</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – file path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of quoted text</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>List[]</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.shell.Shell.run_common_function">
                  <term>
                    <property>kiwi.system.shell.Shell.run_common_function</property>
                  </term>
                  <listitem>
                    <para>Run a function implemented in config/functions.sh</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>name</literal> () – function name</para>
                            </listitem>
                            <listitem>
                              <para><literal>parameters</literal> () – function arguments</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.size_kiwi-system-size-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.size"><literal>kiwi.system.size</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.size.SystemSize">
            <term>
              <literal>kiwi.system.size.SystemSize</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Provide source tree size information</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>source_dir</literal> () – source directory path name</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.size.SystemSize.accumulate_files">
                  <term>
                    <property>kiwi.system.size.SystemSize.accumulate_files</property>
                  </term>
                  <listitem>
                    <para>Calculate sum of all files in the source tree</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>number of files</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.size.SystemSize.accumulate_mbyte_file_sizes">
                  <term>
                    <property>kiwi.system.size.SystemSize.accumulate_mbyte_file_sizes</property>
                  </term>
                  <listitem>
                    <para>Calculate data size of all data in the source tree</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>exclude</literal> () – list of paths to exclude</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbytes</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.size.SystemSize.customize">
                  <term>
                    <property>kiwi.system.size.SystemSize.customize</property>
                  </term>
                  <listitem>
                    <para>Increase the sum of all file sizes by an empiric factor</para>
                    <para>Each filesystem has some overhead it needs to manage itself.
                                Thus the plain data size is always smaller as the size of
                                the container which embeds it. This method increases the
                                given size by a filesystem specific empiric factor to
                                ensure the given data size can be stored in a filesystem
                                of the customized size</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>size</literal> () – mbsize to update</para>
                            </listitem>
                            <listitem>
                              <para><literal>requested_filesystem</literal> () – filesystem name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbytes</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.uri_kiwi-system-uri-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.uri"><literal>kiwi.system.uri</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.uri.Uri">
            <term>
              <literal>kiwi.system.uri.Uri</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Normalize url types available in a kiwi configuration into
                            standard mime types</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>repo_type</literal> () – repository type name. Only needed if the uri
                                            is not enough to determine the repository type
                                            e.g for yast2 vs. rpm-md obs repositories</para>
                      </listitem>
                      <listitem>
                        <para><literal>uri</literal> () – URI, repository location, file</para>
                      </listitem>
                      <listitem>
                        <para><literal>mount_stack</literal> () – list of mounted locations</para>
                      </listitem>
                      <listitem>
                        <para><literal>remote_uri_types</literal> () – dictionary of remote uri type names</para>
                      </listitem>
                      <listitem>
                        <para><literal>local_uri_type</literal> () – dictionary of local uri type names</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.uri.Uri.alias">
                  <term>
                    <property>kiwi.system.uri.Uri.alias</property>
                  </term>
                  <listitem>
                    <para>Create hexdigest from URI as alias</para>
                    <para>If the repository definition from the XML description does
                                not provide an alias, kiwi creates one for you. However it’s
                                better to assign a human readable alias in the XML
                                configuration</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>alias name as hexdigest</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.uri.Uri.credentials_file_name">
                  <term>
                    <property>kiwi.system.uri.Uri.credentials_file_name</property>
                  </term>
                  <listitem>
                    <para>Filename to store repository credentials</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>credentials file name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.uri.Uri.get_fragment">
                  <term>
                    <property>kiwi.system.uri.Uri.get_fragment</property>
                  </term>
                  <listitem>
                    <para>Returns the fragment part of the URI.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>fragment part of the URI if any, empty string otherwise</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.uri.Uri.is_public">
                  <term>
                    <property>kiwi.system.uri.Uri.is_public</property>
                  </term>
                  <listitem>
                    <para>Check if URI is considered to be publicly reachable</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.uri.Uri.is_remote">
                  <term>
                    <property>kiwi.system.uri.Uri.is_remote</property>
                  </term>
                  <listitem>
                    <para>Check if URI is a remote or local location</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.uri.Uri.translate">
                  <term>
                    <property>kiwi.system.uri.Uri.translate</property>
                  </term>
                  <listitem>
                    <para>Translate repository location according to their URI type</para>
                    <para>Depending on the URI type the provided location needs to
                                be adapted e.g loop mounted in case of an ISO or updated
                                by the service URL in case of an open buildservice project
                                name</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Raises</term>
                        <listitem>
                          <para><xref linkend="kiwi.exceptions.KiwiUriStyleUnknown"/> – if the uri scheme can’t be detected, is
                                            unknown or it is inconsistent with the build environment</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>check_build_environment</literal> () – specify if the uri translation
                                            should depend on the environment the build is called in. As of
                                            today this only effects the translation result if the image
                                            build happens inside of the Open Build Service</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>translated repository location</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.system.users_kiwi-system-users-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.system.users"><literal>kiwi.system.users</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.system.users.Users">
            <term>
              <literal>kiwi.system.users.Users</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Operations on users and groups in a root directory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>root_dir</literal> () – root directory path name</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.users.Users.group_add">
                  <term>
                    <property>kiwi.system.users.Users.group_add</property>
                  </term>
                  <listitem>
                    <para>Add group with options</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>group_name</literal> () – group name</para>
                            </listitem>
                            <listitem>
                              <para><literal>options</literal> () – groupadd options</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.users.Users.group_exists">
                  <term>
                    <property>kiwi.system.users.Users.group_exists</property>
                  </term>
                  <listitem>
                    <para>Check if group exists</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>group_name</literal> () – group name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.users.Users.setup_home_for_user">
                  <term>
                    <property>kiwi.system.users.Users.setup_home_for_user</property>
                  </term>
                  <listitem>
                    <para>Setup user home directory</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>user_name</literal> () – user name</para>
                            </listitem>
                            <listitem>
                              <para><literal>group_name</literal> () – group name</para>
                            </listitem>
                            <listitem>
                              <para><literal>home_path</literal> () – path name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.users.Users.user_add">
                  <term>
                    <property>kiwi.system.users.Users.user_add</property>
                  </term>
                  <listitem>
                    <para>Add user with options</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>user_name</literal> () – user name</para>
                            </listitem>
                            <listitem>
                              <para><literal>options</literal> () – useradd options</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.users.Users.user_exists">
                  <term>
                    <property>kiwi.system.users.Users.user_exists</property>
                  </term>
                  <listitem>
                    <para>Check if user exists</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>user_name</literal> () – user name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True|False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.system.users.Users.user_modify">
                  <term>
                    <property>kiwi.system.users.Users.user_modify</property>
                  </term>
                  <listitem>
                    <para>Modify user with options</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>user_name</literal> () – user name</para>
                            </listitem>
                            <listitem>
                              <para><literal>options</literal> () – usermod options</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-system-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-tasks-package" xml:base="api/kiwi.tasks">
      <title>kiwi.tasks package</title>
      <section xml:id="db-kiwi-tasks-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.tasks.base_kiwi-tasks-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.tasks.base"><literal>kiwi.tasks.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.tasks.base.CliTask">
            <term>
              <literal>kiwi.tasks.base.CliTask</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>Base class for all task classes, loads the task and provides
                        the interface to the command options and the XML description</para>
              <para>Attributes</para>
              <itemizedlist>
                <listitem>
                  <variablelist>
                    <varlistentry>
                      <term>
                        <literal>should_perform_task_setup</literal>
                      </term>
                      <listitem>
                        <para>Indicates if the task should perform the setup steps
                                            which covers the following task configurations:
                                            * setup debug level
                                            * setup logfile
                                            * setup color output</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.tasks.base.CliTask.load_xml_description">
                  <term>
                    <property>kiwi.tasks.base.CliTask.load_xml_description</property>
                  </term>
                  <listitem>
                    <para>Load, upgrade, validate XML description</para>
                    <para>Attributes</para>
                    <itemizedlist>
                      <listitem>
                        <variablelist>
                          <varlistentry>
                            <term>
                              <literal>xml_data</literal>
                            </term>
                            <listitem>
                              <para>instance of XML data toplevel domain (image), stateless data</para>
                            </listitem>
                          </varlistentry>
                        </variablelist>
                      </listitem>
                      <listitem>
                        <variablelist>
                          <varlistentry>
                            <term>
                              <literal>config_file</literal>
                            </term>
                            <listitem>
                              <para>used config file path</para>
                            </listitem>
                          </varlistentry>
                        </variablelist>
                      </listitem>
                      <listitem>
                        <variablelist>
                          <varlistentry>
                            <term>
                              <literal>xml_state</literal>
                            </term>
                            <listitem>
                              <para>Instance of XMLState, stateful data</para>
                            </listitem>
                          </varlistentry>
                        </variablelist>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.tasks.base.CliTask.quadruple_token">
                  <term>
                    <property>kiwi.tasks.base.CliTask.quadruple_token</property>
                  </term>
                  <listitem>
                    <para>Helper method for commandline options of the form –option a,b,c,d</para>
                    <para>Make sure to provide a common result for option values which
                                separates the information in a comma separated list of values</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>common option value representation</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.tasks.base.CliTask.run_checks">
                  <term>
                    <property>kiwi.tasks.base.CliTask.run_checks</property>
                  </term>
                  <listitem>
                    <para>This method runs the given runtime checks excluding the ones disabled
                                in the runtime configuration file.</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>checks</literal> () – A dictionary with the runtime method names as keys
                                            and their arguments list as the values.</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.tasks.base.CliTask.sextuple_token">
                  <term>
                    <property>kiwi.tasks.base.CliTask.sextuple_token</property>
                  </term>
                  <listitem>
                    <para>Helper method for commandline options of the form –option a,b,c,d,e,f</para>
                    <para>Make sure to provide a common result for option values which
                                separates the information in a comma separated list of values</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>common option value representation</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.tasks.result_bundle_kiwi-tasks-result-bundle-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.tasks.result_bundle"><literal>kiwi.tasks.result_bundle</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.tasks.result_bundle.ResultBundleTask">
            <term>
              <literal>kiwi.tasks.result_bundle.ResultBundleTask</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.tasks.base.CliTask"><literal>kiwi.tasks.base.CliTask</literal></link></para>
              <para>Implements result bundler</para>
              <para>Attributes</para>
              <itemizedlist>
                <listitem>
                  <variablelist>
                    <varlistentry>
                      <term>
                        <literal>manual</literal>
                      </term>
                      <listitem>
                        <para>Instance of Help</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.tasks.result_bundle.ResultBundleTask.process">
                  <term>
                    <property>kiwi.tasks.result_bundle.ResultBundleTask.process</property>
                  </term>
                  <listitem>
                    <para>Create result bundle from the image build results in the
                                specified target directory. Each result image will contain
                                the specified bundle identifier as part of its filename.
                                Uncompressed image files will also become xz compressed
                                and a sha sum will be created from every result image</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.tasks.result_list_kiwi-tasks-result-list-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.tasks.result_list"><literal>kiwi.tasks.result_list</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.tasks.result_list.ResultListTask">
            <term>
              <literal>kiwi.tasks.result_list.ResultListTask</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.tasks.base.CliTask"><literal>kiwi.tasks.base.CliTask</literal></link></para>
              <para>Implements result listing</para>
              <para>Attributes</para>
              <itemizedlist>
                <listitem>
                  <variablelist>
                    <varlistentry>
                      <term>
                        <literal>manual</literal>
                      </term>
                      <listitem>
                        <para>Instance of Help</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.tasks.result_list.ResultListTask.process">
                  <term>
                    <property>kiwi.tasks.result_list.ResultListTask.process</property>
                  </term>
                  <listitem>
                    <para>List result information from a previous system command</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.tasks.system_build_kiwi-tasks-system-build-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.tasks.system_build"><literal>kiwi.tasks.system_build</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.tasks.system_build.SystemBuildTask">
            <term>
              <literal>kiwi.tasks.system_build.SystemBuildTask</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.tasks.base.CliTask"><literal>kiwi.tasks.base.CliTask</literal></link></para>
              <para>Implements building of system images</para>
              <para>Attributes</para>
              <itemizedlist>
                <listitem>
                  <variablelist>
                    <varlistentry>
                      <term>
                        <literal>manual</literal>
                      </term>
                      <listitem>
                        <para>Instance of Help</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.tasks.system_build.SystemBuildTask.process">
                  <term>
                    <property>kiwi.tasks.system_build.SystemBuildTask.process</property>
                  </term>
                  <listitem>
                    <para>Build a system image from the specified description. The
                                build command combines the prepare and create commands</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.tasks.system_create_kiwi-tasks-system-create-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.tasks.system_create"><literal>kiwi.tasks.system_create</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.tasks.system_create.SystemCreateTask">
            <term>
              <literal>kiwi.tasks.system_create.SystemCreateTask</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.tasks.base.CliTask"><literal>kiwi.tasks.base.CliTask</literal></link></para>
              <para>Implements creation of system images</para>
              <para>Attributes</para>
              <itemizedlist>
                <listitem>
                  <variablelist>
                    <varlistentry>
                      <term>
                        <literal>manual</literal>
                      </term>
                      <listitem>
                        <para>Instance of Help</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.tasks.system_create.SystemCreateTask.process">
                  <term>
                    <property>kiwi.tasks.system_create.SystemCreateTask.process</property>
                  </term>
                  <listitem>
                    <para>Create a system image from the specified root directory
                                the root directory is the result of a system prepare
                                command</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.tasks.system_prepare_kiwi-tasks-system-prepare-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.tasks.system_prepare"><literal>kiwi.tasks.system_prepare</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.tasks.system_prepare.SystemPrepareTask">
            <term>
              <literal>kiwi.tasks.system_prepare.SystemPrepareTask</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.tasks.base.CliTask"><literal>kiwi.tasks.base.CliTask</literal></link></para>
              <para>Implements preparation and installation of a new root system</para>
              <para>Attributes</para>
              <itemizedlist>
                <listitem>
                  <variablelist>
                    <varlistentry>
                      <term>
                        <literal>manual</literal>
                      </term>
                      <listitem>
                        <para>Instance of Help</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.tasks.system_prepare.SystemPrepareTask.process">
                  <term>
                    <property>kiwi.tasks.system_prepare.SystemPrepareTask.process</property>
                  </term>
                  <listitem>
                    <para>Prepare and install a new system for chroot access</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.tasks.system_update_kiwi-tasks-system-update-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.tasks.system_update"><literal>kiwi.tasks.system_update</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.tasks.system_update.SystemUpdateTask">
            <term>
              <literal>kiwi.tasks.system_update.SystemUpdateTask</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.tasks.base.CliTask"><literal>kiwi.tasks.base.CliTask</literal></link></para>
              <para>Implements update and maintenance of root systems</para>
              <para>Attributes</para>
              <itemizedlist>
                <listitem>
                  <variablelist>
                    <varlistentry>
                      <term>
                        <literal>manual</literal>
                      </term>
                      <listitem>
                        <para>Instance of Help</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </itemizedlist>
              <variablelist>
                <varlistentry xml:id="kiwi.tasks.system_update.SystemUpdateTask.process">
                  <term>
                    <property>kiwi.tasks.system_update.SystemUpdateTask.process</property>
                  </term>
                  <listitem>
                    <para>Update root system with latest repository updates
                                and optionally allow to add or delete packages. the options
                                to add or delete packages can be used multiple times</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-tasks-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-utils-package" xml:base="api/kiwi.utils">
      <title>kiwi.utils Package</title>
      <section xml:id="db-kiwi-utils-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.utils.block_kiwi-utils-checksum-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.utils.checksum"><literal>kiwi.utils.checksum</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.utils.block.BlockID">
            <term>
              <literal>kiwi.utils.block.BlockID</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Get information from a block device</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>device</literal> () – block device node name name</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.block.BlockID.get_blkid">
                  <term>
                    <property>kiwi.utils.block.BlockID.get_blkid</property>
                  </term>
                  <listitem>
                    <para>Retrieve information for specified metadata ID from block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>id_type</literal> () – metadata ID, see man blkid for details</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>ID of the block device</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.block.BlockID.get_filesystem">
                  <term>
                    <property>kiwi.utils.block.BlockID.get_filesystem</property>
                  </term>
                  <listitem>
                    <para>Retrieve filesystem type from block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>filesystem type</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.block.BlockID.get_label">
                  <term>
                    <property>kiwi.utils.block.BlockID.get_label</property>
                  </term>
                  <listitem>
                    <para>Retrieve filesystem label from block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>block device label</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.block.BlockID.get_uuid">
                  <term>
                    <property>kiwi.utils.block.BlockID.get_uuid</property>
                  </term>
                  <listitem>
                    <para>Retrieve filesystem uuid from block device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>uuid for the filesystem of the block device</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.utils.checksum_kiwi-utils-block-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.utils.block"><literal>kiwi.utils.block</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.utils.checksum.Checksum">
            <term>
              <literal>kiwi.utils.checksum.Checksum</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Manage checksum creation for files</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>source_filename</literal> () – source file name to build checksum for</para>
                      </listitem>
                      <listitem>
                        <para><literal>checksum_filename</literal> () – target file with checksum information</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.checksum.Checksum.matches">
                  <term>
                    <property>kiwi.utils.checksum.Checksum.matches</property>
                  </term>
                  <listitem>
                    <para>Compare given checksum with reference checksum stored
                                in the provided filename. If the checksum matches the
                                method returns True, or False in case it does not match</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>checksum</literal> () – checksum string to compare</para>
                            </listitem>
                            <listitem>
                              <para><literal>filename</literal> () – filename containing checksum</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.checksum.Checksum.md5">
                  <term>
                    <property>kiwi.utils.checksum.Checksum.md5</property>
                  </term>
                  <listitem>
                    <para>Create md5 checksum</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – filename for checksum</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>checksum</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.checksum.Checksum.sha256">
                  <term>
                    <property>kiwi.utils.checksum.Checksum.sha256</property>
                  </term>
                  <listitem>
                    <para>Create sha256 checksum</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filename</literal> () – filename for checksum</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.utils.compress_kiwi-utils-compress-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.utils.compress"><literal>kiwi.utils.compress</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.utils.compress.Compress">
            <term>
              <literal>kiwi.utils.compress.Compress</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">File compression / decompression</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>keep_source</literal> () – Request to keep the uncompressed source</para>
                      </listitem>
                      <listitem>
                        <para><literal>source_filename</literal> () – Source file name to compress</para>
                      </listitem>
                      <listitem>
                        <para><literal>supported_zipper</literal> () – List of supported compression tools</para>
                      </listitem>
                      <listitem>
                        <para><literal>compressed_filename</literal> () – Compressed file name path with
                                            compression suffix</para>
                      </listitem>
                      <listitem>
                        <para><literal>uncompressed_filename</literal> () – Uncompressed file name path</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.compress.Compress.get_format">
                  <term>
                    <property>kiwi.utils.compress.Compress.get_format</property>
                  </term>
                  <listitem>
                    <para>Detect compression format</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>compression format name or None if it couldn’t be inferred</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>Optional[]</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.compress.Compress.gzip">
                  <term>
                    <property>kiwi.utils.compress.Compress.gzip</property>
                  </term>
                  <listitem>
                    <para>Create gzip(max compression) compressed file</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.compress.Compress.uncompress">
                  <term>
                    <property>kiwi.utils.compress.Compress.uncompress</property>
                  </term>
                  <listitem>
                    <para>Uncompress with format autodetection</para>
                    <para>By default the original source file will be changed into
                                the uncompressed variant. If temporary is set to True
                                a temporary file is created instead</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>temporary</literal> () – uncompress to a temporary file</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.compress.Compress.xz">
                  <term>
                    <property>kiwi.utils.compress.Compress.xz</property>
                  </term>
                  <listitem>
                    <para>Create XZ compressed file</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>options</literal> () – custom xz compression options</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.utils.sync_kiwi-utils-sync-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.utils.sync"><literal>kiwi.utils.sync</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.utils.sync.DataSync">
            <term>
              <literal>kiwi.utils.sync.DataSync</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Sync data from a source directory to a target directory
                            using the rsync protocol</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>source_dir</literal> () – source directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>target_dir</literal> () – target directory path name</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.sync.DataSync.sync_data">
                  <term>
                    <property>kiwi.utils.sync.DataSync.sync_data</property>
                  </term>
                  <listitem>
                    <para>Sync data from source to target using rsync</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>options</literal> () – rsync options</para>
                            </listitem>
                            <listitem>
                              <para><literal>exclude</literal> () – file patterns to exclude</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.sync.DataSync.target_supports_extended_attributes">
                  <term>
                    <property>kiwi.utils.sync.DataSync.target_supports_extended_attributes</property>
                  </term>
                  <listitem>
                    <para>Check if the target directory supports extended filesystem
                                attributes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True or False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.utils.sysconfig_kiwi-utils-sysconfig-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.utils.sysconfig"><literal>kiwi.utils.sysconfig</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.utils.sysconfig.SysConfig">
            <term>
              <literal>kiwi.utils.sysconfig.SysConfig</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">Read and Write sysconfig style files</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <para><literal>source_file</literal> () – source file path</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.sysconfig.SysConfig.get">
                  <term>
                    <property>kiwi.utils.sysconfig.SysConfig.get</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.utils.sysconfig.SysConfig.write">
                  <term>
                    <property>kiwi.utils.sysconfig.SysConfig.write</property>
                  </term>
                  <listitem>
                    <para>Write back source file with changed content but in same order</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-utils-content">
        <title>Module Contents</title>
      </section>
    </section>
    <section xml:id="kiwi-volume-manager-package" xml:base="api/kiwi.volume_manager">
      <title>kiwi.volume_manager Package</title>
      <section xml:id="db-kiwi-volume-manager-submodules">
        <title>Submodules</title>
      </section>
      <section xml:id="module-kiwi.volume_manager.base_kiwi-volume-manager-base-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.volume_manager.base"><literal>kiwi.volume_manager.base</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase">
            <term>
              <literal>kiwi.volume_manager.base.VolumeManagerBase</literal>
            </term>
            <listitem>
              <para>Bases: <xref linkend="kiwi.storage.device_provider.DeviceProvider"/></para>
              <para>
                <emphasis role="bold">Implements base class for volume management interface</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>mountpoint</literal> () – root mountpoint for volumes</para>
                      </listitem>
                      <listitem>
                        <para><literal>device_map</literal> () – dictionary of low level DeviceProvider intances</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>volumes</literal> () – list of volumes from <literal>XMLState::get_volumes()</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>volume_group</literal> () – volume group name</para>
                      </listitem>
                      <listitem>
                        <para><literal>volume_map</literal> () – map volume name to device node</para>
                      </listitem>
                      <listitem>
                        <para><literal>mount_list</literal> () – list of volume MountManager’s</para>
                      </listitem>
                      <listitem>
                        <para><literal>device</literal> () – storage device node name</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – custom volume manager arguments for all
                                            volume manager and filesystem specific tasks</para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_filesystem_args</literal> () – custom filesystem creation and mount
                                            arguments, subset of the custom_args information suitable to
                                            be passed to a FileSystem instance</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>Raises</term>
                  <listitem>
                    <para><xref linkend="kiwi.exceptions.KiwiVolumeManagerSetupError"/> – if the given root_dir doesn’t exist</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.apply_attributes_on_volume">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.apply_attributes_on_volume</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.create_volume_paths_in_root_dir">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.create_volume_paths_in_root_dir</property>
                  </term>
                  <listitem>
                    <para>Implements creation of volume paths in the given root directory</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.create_volumes">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.create_volumes</property>
                  </term>
                  <listitem>
                    <para>Implements creation of volumes</para>
                    <para>Implementation in specialized volume manager class required</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filesystem_name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.get_canonical_volume_list">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.get_canonical_volume_list</property>
                  </term>
                  <listitem>
                    <para>Implements hierarchical sorting of volumes according to their
                                paths and provides information about the volume configured as
                                the one eating all the rest space</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of canonical_volume_type tuples</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.get_device">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.get_device</property>
                  </term>
                  <listitem>
                    <para>Return current DeviceProvider dictionary</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>device_map</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.get_fstab">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.get_fstab</property>
                  </term>
                  <listitem>
                    <para>Implements setup of the fstab entries. The method should
                                return a list of fstab compatible entries</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>persistency_type</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>filesystem_name</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.get_mountpoint">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.get_mountpoint</property>
                  </term>
                  <listitem>
                    <para>Provides mount point directory</para>
                    <para>Effective use of the directory is guaranteed only after sync_data</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>string</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.get_volume_mbsize">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.get_volume_mbsize</property>
                  </term>
                  <listitem>
                    <para>Implements size lookup for the given path and desired
                                filesystem according to the specified size type</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>volume</literal> () – volume to check size for</para>
                            </listitem>
                            <listitem>
                              <para><literal>all_volumes</literal> () – list of all volume tuples</para>
                            </listitem>
                            <listitem>
                              <para><literal>filesystem_name</literal> () – filesystem name</para>
                            </listitem>
                            <listitem>
                              <para><literal>resize_on_boot</literal> – specify the time of the resize. If the resize happens at
                                                    boot time the volume size is only the minimum size to
                                                    just store the data. If the volume size is fixed and
                                                    does not change at boot time the returned size is the
                                                    requested size which can be greater than the minimum
                                                    needed size.</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>mbsize</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.get_volumes">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.get_volumes</property>
                  </term>
                  <listitem>
                    <para>Implements return of dictionary of volumes and
                                their mount options</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.is_loop">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.is_loop</property>
                  </term>
                  <listitem>
                    <para>Check if storage provider is loop based</para>
                    <para>The information is taken from the storage provider. If
                                the storage provider is loop based the volume manager is it too</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True of False</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.mount_volumes">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.mount_volumes</property>
                  </term>
                  <listitem>
                    <para>Implements mounting of all volumes below one master directory</para>
                    <para>Implementation in specialized volume manager class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.post_init">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Implementation in specialized volume manager class if required</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.set_property_readonly_root">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.set_property_readonly_root</property>
                  </term>
                  <listitem>
                    <para>Implements setup of read-only root property</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.setup">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.setup</property>
                  </term>
                  <listitem>
                    <para>Implements setup required prior to the creation of volumes</para>
                    <para>Implementation in specialized volume manager class required</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.setup_mountpoint">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.setup_mountpoint</property>
                  </term>
                  <listitem>
                    <para>Implements creation of a master directory holding
                                the mounts of all volumes</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.sync_data">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.sync_data</property>
                  </term>
                  <listitem>
                    <para>Implements sync of root directory to mounted volumes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>exclude</literal> () – file patterns to exclude</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.base.VolumeManagerBase.umount_volumes">
                  <term>
                    <property>kiwi.volume_manager.base.VolumeManagerBase.umount_volumes</property>
                  </term>
                  <listitem>
                    <para>Implements umounting of all volumes</para>
                    <para>Implementation in specialized volume manager class required</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.volume_manager.btrfs_kiwi-volume-manager-btrfs-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.volume_manager.btrfs"><literal>kiwi.volume_manager.btrfs</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs">
            <term>
              <literal>kiwi.volume_manager.btrfs.VolumeManagerBtrfs</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.volume_manager.base.VolumeManagerBase"><literal>kiwi.volume_manager.base.VolumeManagerBase</literal></link></para>
              <para>Implements btrfs sub-volume management</para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>subvol_mount_list</literal> () – list of mounted btrfs subvolumes</para>
                      </listitem>
                      <listitem>
                        <para><literal>toplevel_mount</literal> () – <literal>MountManager</literal> for root mountpoint</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs.create_volumes">
                  <term>
                    <property>kiwi.volume_manager.btrfs.VolumeManagerBtrfs.create_volumes</property>
                  </term>
                  <listitem>
                    <para>Create configured btrfs subvolumes</para>
                    <para>Any btrfs subvolume is of the same btrfs filesystem. There is no
                                way to have different filesystems per btrfs subvolume. Thus
                                the filesystem_name has no effect for btrfs</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filesystem_name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs.get_fstab">
                  <term>
                    <property>kiwi.volume_manager.btrfs.VolumeManagerBtrfs.get_fstab</property>
                  </term>
                  <listitem>
                    <para>Implements creation of the fstab entries. The method
                                returns a list of fstab compatible entries</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>persistency_type</literal> () – by-label | by-uuid</para>
                            </listitem>
                            <listitem>
                              <para><literal>filesystem_name</literal> () – unused</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>list of fstab entries</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs.get_mountpoint">
                  <term>
                    <property>kiwi.volume_manager.btrfs.VolumeManagerBtrfs.get_mountpoint</property>
                  </term>
                  <listitem>
                    <para>Provides btrfs root mount point directory</para>
                    <para>Effective use of the directory is guaranteed only after sync_data</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>directory path name</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para>string</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs.get_volumes">
                  <term>
                    <property>kiwi.volume_manager.btrfs.VolumeManagerBtrfs.get_volumes</property>
                  </term>
                  <listitem>
                    <para>Return dict of volumes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>volumes dictionary</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs.mount_volumes">
                  <term>
                    <property>kiwi.volume_manager.btrfs.VolumeManagerBtrfs.mount_volumes</property>
                  </term>
                  <listitem>
                    <para>Mount btrfs subvolumes</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs.post_init">
                  <term>
                    <property>kiwi.volume_manager.btrfs.VolumeManagerBtrfs.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Store custom btrfs initialization arguments</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom btrfs volume manager arguments</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs.set_property_readonly_root">
                  <term>
                    <property>kiwi.volume_manager.btrfs.VolumeManagerBtrfs.set_property_readonly_root</property>
                  </term>
                  <listitem>
                    <para>Sets the root volume to be a readonly filesystem</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs.setup">
                  <term>
                    <property>kiwi.volume_manager.btrfs.VolumeManagerBtrfs.setup</property>
                  </term>
                  <listitem>
                    <para>Setup btrfs volume management</para>
                    <para>In case of btrfs a toplevel(@) subvolume is created and marked
                                as default volume. If snapshots are activated via the custom_args
                                the setup method also created the @/.snapshots/1/snapshot
                                subvolumes. There is no concept of a volume manager name, thus
                                the name argument is not used for btrfs</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – unused</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs.sync_data">
                  <term>
                    <property>kiwi.volume_manager.btrfs.VolumeManagerBtrfs.sync_data</property>
                  </term>
                  <listitem>
                    <para>Sync data into btrfs filesystem</para>
                    <para>If snapshots are activated the root filesystem is synced
                                into the first snapshot</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>exclude</literal> () – files to exclude from sync</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.btrfs.VolumeManagerBtrfs.umount_volumes">
                  <term>
                    <property>kiwi.volume_manager.btrfs.VolumeManagerBtrfs.umount_volumes</property>
                  </term>
                  <listitem>
                    <para>Umount btrfs subvolumes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True if all subvolumes are successfully unmounted</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="module-kiwi.volume_manager.lvm_kiwi-volume-manager-lvm-module">
        <title><link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#module-kiwi.volume_manager.lvm"><literal>kiwi.volume_manager.lvm</literal></link> Module</title>
        <variablelist>
          <varlistentry xml:id="kiwi.volume_manager.lvm.VolumeManagerLVM">
            <term>
              <literal>kiwi.volume_manager.lvm.VolumeManagerLVM</literal>
            </term>
            <listitem>
              <para>Bases: <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="#kiwi.volume_manager.base.VolumeManagerBase"><literal>kiwi.volume_manager.base.VolumeManagerBase</literal></link></para>
              <para>
                <emphasis role="bold">Implements LVM volume management</emphasis>
              </para>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.lvm.VolumeManagerLVM.create_volumes">
                  <term>
                    <property>kiwi.volume_manager.lvm.VolumeManagerLVM.create_volumes</property>
                  </term>
                  <listitem>
                    <para>Create configured lvm volumes and filesystems</para>
                    <para>All volumes receive the same filesystem</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>filesystem_name</literal> () – volumes filesystem name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.lvm.VolumeManagerLVM.get_device">
                  <term>
                    <property>kiwi.volume_manager.lvm.VolumeManagerLVM.get_device</property>
                  </term>
                  <listitem>
                    <para>Dictionary of MappedDevice instances per volume</para>
                    <para>Note: The mapping requires an explicit create_volumes() call</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>root plus volume device map</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.lvm.VolumeManagerLVM.get_fstab">
                  <term>
                    <property>kiwi.volume_manager.lvm.VolumeManagerLVM.get_fstab</property>
                  </term>
                  <listitem>
                    <para>Implements creation of the fstab entries. The method
                                returns a list of fstab compatible entries</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <itemizedlist>
                            <listitem>
                              <para><literal>persistency_type</literal> () – unused</para>
                            </listitem>
                            <listitem>
                              <para><literal>filesystem_name</literal> () – volumes filesystem name</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>fstab entries</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.lvm.VolumeManagerLVM.get_volumes">
                  <term>
                    <property>kiwi.volume_manager.lvm.VolumeManagerLVM.get_volumes</property>
                  </term>
                  <listitem>
                    <para>Return dict of volumes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>volumes dictionary</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.lvm.VolumeManagerLVM.mount_volumes">
                  <term>
                    <property>kiwi.volume_manager.lvm.VolumeManagerLVM.mount_volumes</property>
                  </term>
                  <listitem>
                    <para>Mount lvm volumes</para>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.lvm.VolumeManagerLVM.post_init">
                  <term>
                    <property>kiwi.volume_manager.lvm.VolumeManagerLVM.post_init</property>
                  </term>
                  <listitem>
                    <para>Post initialization method</para>
                    <para>Store custom lvm initialization arguments</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>custom_args</literal> () – custom lvm volume manager arguments</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.lvm.VolumeManagerLVM.setup">
                  <term>
                    <property>kiwi.volume_manager.lvm.VolumeManagerLVM.setup</property>
                  </term>
                  <listitem>
                    <para>Setup lvm volume management</para>
                    <para>In case of LVM a new volume group is created on a PV
                                initialized storage device</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Parameters</term>
                        <listitem>
                          <para><literal>name</literal> () – volume group name</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.lvm.VolumeManagerLVM.umount_volumes">
                  <term>
                    <property>kiwi.volume_manager.lvm.VolumeManagerLVM.umount_volumes</property>
                  </term>
                  <listitem>
                    <para>Umount lvm volumes</para>
                    <variablelist role="field_list">
                      <varlistentry>
                        <term>Returns</term>
                        <listitem>
                          <para>True if all subvolumes are successfully unmounted</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>Return type</term>
                        <listitem>
                          <para/>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="db-kiwi-volume-manager-content">
        <title>Module Contents</title>
        <variablelist>
          <varlistentry xml:id="kiwi.volume_manager.VolumeManager">
            <term>
              <literal>kiwi.volume_manager.VolumeManager</literal>
            </term>
            <listitem>
              <para>Bases: </para>
              <para>
                <emphasis role="bold">VolumeManager factory</emphasis>
              </para>
              <variablelist role="field_list">
                <varlistentry>
                  <term>Parameters</term>
                  <listitem>
                    <itemizedlist>
                      <listitem>
                        <para><literal>name</literal> () – volume management name</para>
                      </listitem>
                      <listitem>
                        <para><literal>device_map</literal> () – dictionary of low level DeviceProvider intances</para>
                      </listitem>
                      <listitem>
                        <para><literal>root_dir</literal> () – root directory path name</para>
                      </listitem>
                      <listitem>
                        <para><literal>volumes</literal> () – list of volumes from <literal>XMLState::get_volumes()</literal></para>
                      </listitem>
                      <listitem>
                        <para><literal>custom_args</literal> () – dictionary of custom volume manager arguments</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </varlistentry>
              </variablelist>
              <variablelist>
                <varlistentry xml:id="kiwi.volume_manager.VolumeManager.new">
                  <term>
                    <property>kiwi.volume_manager.VolumeManager.new</property>
                  </term>
                  <listitem>
                    <para/>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
  </chapter>
</book>
